・本文書は RFC 5321 の原文に (株)HDE が日本語訳を追加したものです。
・翻訳の正確性については保証の限りではありません。
　開発者など正確な情報が必要な場合は原文を参照してください。
・翻訳に従って実装した結果、損害を被ったとしても (株)HDE は何如なる責任も負いません。
・本書は原文と同じく配布に制限はありません。
------------------------------------------------------------------------






Network Working Group                                         J. Klensin
Request for Comments: 5321                                  October 2008
Obsoletes: 2821
Updates: 1123
Category: Standards Track


                     Simple Mail Transfer Protocol
                     単純メール転送プロトコル

Status of This Memo
本文書の状態

   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the "Internet
   Official Protocol Standards" (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.

   本文書はインターネット標準化過程プロトコル仕様です。改良のために議論
   と提案を求めます。現在の版は"Internet Official Protocol Standards"
   (STD 1)を参照してください。この文書の配布に制限はありません。

Abstract
概要

   This document is a specification of the basic protocol for Internet
   electronic mail transport.  It consolidates, updates, and clarifies
   several previous documents, making all or parts of most of them
   obsolete.  It covers the SMTP extension mechanisms and best practices
   for the contemporary Internet, but does not provide details about
   particular extensions.  Although SMTP was designed as a mail
   transport and delivery protocol, this specification also contains
   information that is important to its use as a "mail submission"
   protocol for "split-UA" (User Agent) mail reading systems and mobile
   environments.

   本文書はインターネット電子メール転送のための基本的なプロトコル仕様で
   す。以前の文書をすべてまたは大部分を廃止し、それらを整理、更新し明確
   にしました。SMTP拡張メカニズムと現在のインターネットのための最良の方
   法をカバーしますが、特定の拡張の詳細は提供しません。SMTP はメール転
   送と配送プロトコルとして設計されましたが、この仕様はまたそのプロトコ
   ルにとって重要な メールリーディングシステムやモバイル環境のような
   "split-UA"(User Agent)のための"メール投函(submission)" プロトコルも
   含みます。
















Klensin                     Standards Track                     [Page 1]

RFC 5321                          SMTP                      October 2008


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  5
     1.1.  Transport of Electronic Mail . . . . . . . . . . . . . . .  5
     1.2.  History and Context for This Document  . . . . . . . . . .  5
     1.3.  Document Conventions . . . . . . . . . . . . . . . . . . .  6
   2.  The SMTP Model . . . . . . . . . . . . . . . . . . . . . . . .  7
     2.1.  Basic Structure  . . . . . . . . . . . . . . . . . . . . .  7
     2.2.  The Extension Model  . . . . . . . . . . . . . . . . . . .  9
       2.2.1.  Background . . . . . . . . . . . . . . . . . . . . . .  9
       2.2.2.  Definition and Registration of Extensions  . . . . . . 10
       2.2.3.  Special Issues with Extensions . . . . . . . . . . . . 11
     2.3.  SMTP Terminology . . . . . . . . . . . . . . . . . . . . . 11
       2.3.1.  Mail Objects . . . . . . . . . . . . . . . . . . . . . 11
       2.3.2.  Senders and Receivers  . . . . . . . . . . . . . . . . 12
       2.3.3.  Mail Agents and Message Stores . . . . . . . . . . . . 12
       2.3.4.  Host . . . . . . . . . . . . . . . . . . . . . . . . . 13
       2.3.5.  Domain Names . . . . . . . . . . . . . . . . . . . . . 13
       2.3.6.  Buffer and State Table . . . . . . . . . . . . . . . . 14
       2.3.7.  Commands and Replies . . . . . . . . . . . . . . . . . 14
       2.3.8.  Lines  . . . . . . . . . . . . . . . . . . . . . . . . 14
       2.3.9.  Message Content and Mail Data  . . . . . . . . . . . . 15
       2.3.10. Originator, Delivery, Relay, and Gateway Systems . . . 15
       2.3.11. Mailbox and Address  . . . . . . . . . . . . . . . . . 15
     2.4.  General Syntax Principles and Transaction Model  . . . . . 16
   3.  The SMTP Procedures: An Overview . . . . . . . . . . . . . . . 17
     3.1.  Session Initiation . . . . . . . . . . . . . . . . . . . . 18
     3.2.  Client Initiation  . . . . . . . . . . . . . . . . . . . . 18
     3.3.  Mail Transactions  . . . . . . . . . . . . . . . . . . . . 19
     3.4.  Forwarding for Address Correction or Updating  . . . . . . 21
     3.5.  Commands for Debugging Addresses . . . . . . . . . . . . . 22
       3.5.1.  Overview . . . . . . . . . . . . . . . . . . . . . . . 22
       3.5.2.  VRFY Normal Response . . . . . . . . . . . . . . . . . 24
       3.5.3.  Meaning of VRFY or EXPN Success Response . . . . . . . 25
       3.5.4.  Semantics and Applications of EXPN . . . . . . . . . . 26
     3.6.  Relaying and Mail Routing  . . . . . . . . . . . . . . . . 26
       3.6.1.  Source Routes and Relaying . . . . . . . . . . . . . . 26
       3.6.2.  Mail eXchange Records and Relaying . . . . . . . . . . 26
       3.6.3.  Message Submission Servers as Relays . . . . . . . . . 27
     3.7.  Mail Gatewaying  . . . . . . . . . . . . . . . . . . . . . 28
       3.7.1.  Header Fields in Gatewaying  . . . . . . . . . . . . . 28
       3.7.2.  Received Lines in Gatewaying . . . . . . . . . . . . . 29
       3.7.3.  Addresses in Gatewaying  . . . . . . . . . . . . . . . 29
       3.7.4.  Other Header Fields in Gatewaying  . . . . . . . . . . 29
       3.7.5.  Envelopes in Gatewaying  . . . . . . . . . . . . . . . 30
     3.8.  Terminating Sessions and Connections . . . . . . . . . . . 30
     3.9.  Mailing Lists and Aliases  . . . . . . . . . . . . . . . . 31
       3.9.1.  Alias  . . . . . . . . . . . . . . . . . . . . . . . . 31

目次
   1.  導入 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     1.1.  電子メールの転送 . . . . . . . . . . . . . . . . . . . . .   5
     1.2.  本文書の過去と背景 . . . . . . . . . . . . . . . . . . . .   5
     1.3.  文書のしきたり . . . . . . . . . . . . . . . . . . . . . .   6
   2.  SMTP モデル  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     2.1.  基本的な構造 . . . . . . . . . . . . . . . . . . . . . . .   7
     2.2.  拡張モデル . . . . . . . . . . . . . . . . . . . . . . . .   9
       2.2.1.  背景   . . . . . . . . . . . . . . . . . . . . . . . .   9
       2.2.2.  拡張の定義と登録 . . . . . . . . . . . . . . . . . . .  10
       2.2.3.  拡張の特別な問題 . . . . . . . . . . . . . . . . . . .  11
     2.3.  SMTP の専門用語  . . . . . . . . . . . . . . . . . . . . .  11
       2.3.1.  メールオブジェクト . . . . . . . . . . . . . . . . . .  11
       2.3.2.  送信者と受信者 . . . . . . . . . . . . . . . . . . . .  12
       2.3.3.  メールエージェントとメッセージの保存 . . . . . . . . .  12
       2.3.4.  ホスト . . . . . . . . . . . . . . . . . . . . . . . .  13
       2.3.5.  ドメイン名 . . . . . . . . . . . . . . . . . . . . . .  13
       2.3.6.  バッファと状態表 . . . . . . . . . . . . . . . . . . .  14
       2.3.7.  コマンドと応答 . . . . . . . . . . . . . . . . . . . .  14
       2.3.8.  行 . . . . . . . . . . . . . . . . . . . . . . . . . .  14
       2.3.9.  メッセージ内容 と メールデータ . . . . . . . . . . . .  15
       2.3.10. 発信、配信、中継、およびゲートウェイシステム . . . . .  15
       2.3.11. メールボックスとアドレス . . . . . . . . . . . . . . .  15
     2.4.  一般的な構文の指針とトランザクションモデル . . . . . . . .  16
   3.  SMTP 手順 : 概要 . . . . . . . . . . . . . . . . . . . . . . .  17
     3.1.  セッションの始動 . . . . . . . . . . . . . . . . . . . . .  18
     3.2.  クライアントの初期化 . . . . . . . . . . . . . . . . . . .  18
     3.3.  メールトランザクション . . . . . . . . . . . . . . . . . .  19
     3.4.  アドレスの変更や更新のための転送 . . . . . . . . . . . . .  21
     3.5.  アドレスをデバッグするのためのコマンド . . . . . . . . . .  22
       3.5.1.  概要 . . . . . . . . . . . . . . . . . . . . . . . . .  22
       3.5.2.  VRFY の通常応答  . . . . . . . . . . . . . . . . . . .  24
       3.5.3.  VRFY もしくは EXPN の成功応答の意味  . . . . . . . . .  25
       3.5.4.  EXPN の構文と応用  . . . . . . . . . . . . . . . . . .  26
     3.6.  中継とメールルーティング . . . . . . . . . . . . . . . . .  26
       3.6.1.  ソースルートと中継 . . . . . . . . . . . . . . . . . .  26
       3.6.2.  メールエクスチェンジレコードと中継 . . . . . . . . . .  26
       3.6.3.  中継としてのメッセージサブミッションサーバ . . . . . .  27
     3.7.  メールゲートウェイング . . . . . . . . . . . . . . . . . .  28
       3.7.1.  ゲートウェイングでのヘッダフィールド . . . . . . . . .  28
       3.7.2.  ゲートウェイで受信した行 . . . . . . . . . . . . . . .  29
       3.7.3.  ゲートウェイでのアドレス . . . . . . . . . . . . . . .  29
       3.7.4.  ゲートウェイでのその他のヘッダフィールド . . . . . . .  29
       3.7.5.  ゲートウェイでのエンベロープ . . . . . . . . . . . . .  30
     3.8.  セッションと接続の終了 . . . . . . . . . . . . . . . . . .  30
     3.9.  メーリングリストと別名 . . . . . . . . . . . . . . . . . .  31
       3.9.1.  別名 . . . . . . . . . . . . . . . . . . . . . . . . .  31
								       

Klensin                     Standards Track                     [Page 2]

RFC 5321                          SMTP                      October 2008


       3.9.2.  List . . . . . . . . . . . . . . . . . . . . . . . . . 31
   4.  The SMTP Specifications  . . . . . . . . . . . . . . . . . . . 32
     4.1.  SMTP Commands  . . . . . . . . . . . . . . . . . . . . . . 32
       4.1.1.  Command Semantics and Syntax . . . . . . . . . . . . . 32
       4.1.2.  Command Argument Syntax  . . . . . . . . . . . . . . . 41
       4.1.3.  Address Literals . . . . . . . . . . . . . . . . . . . 43
       4.1.4.  Order of Commands  . . . . . . . . . . . . . . . . . . 44
       4.1.5.  Private-Use Commands . . . . . . . . . . . . . . . . . 46
     4.2.  SMTP Replies . . . . . . . . . . . . . . . . . . . . . . . 46
       4.2.1.  Reply Code Severities and Theory . . . . . . . . . . . 48
       4.2.2.  Reply Codes by Function Groups . . . . . . . . . . . . 50
       4.2.3.  Reply Codes in Numeric Order . . . . . . . . . . . . . 52
       4.2.4.  Reply Code 502 . . . . . . . . . . . . . . . . . . . . 53
       4.2.5.  Reply Codes after DATA and the Subsequent
               <CRLF>.<CRLF>  . . . . . . . . . . . . . . . . . . . . 53
     4.3.  Sequencing of Commands and Replies . . . . . . . . . . . . 54
       4.3.1.  Sequencing Overview  . . . . . . . . . . . . . . . . . 54
       4.3.2.  Command-Reply Sequences  . . . . . . . . . . . . . . . 55
     4.4.  Trace Information  . . . . . . . . . . . . . . . . . . . . 57
     4.5.  Additional Implementation Issues . . . . . . . . . . . . . 61
       4.5.1.  Minimum Implementation . . . . . . . . . . . . . . . . 61
       4.5.2.  Transparency . . . . . . . . . . . . . . . . . . . . . 62
       4.5.3.  Sizes and Timeouts . . . . . . . . . . . . . . . . . . 62
         4.5.3.1.  Size Limits and Minimums . . . . . . . . . . . . . 62
           4.5.3.1.1.  Local-part . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.2.  Domain . . . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.3.  Path . . . . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.4.  Command Line . . . . . . . . . . . . . . . . . 63
           4.5.3.1.5.  Reply Line . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.6.  Text Line  . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.7.  Message Content  . . . . . . . . . . . . . . . 63
           4.5.3.1.8.  Recipients Buffer  . . . . . . . . . . . . . . 64
           4.5.3.1.9.  Treatment When Limits Exceeded . . . . . . . . 64
           4.5.3.1.10. Too Many Recipients Code . . . . . . . . . . . 64
         4.5.3.2.  Timeouts . . . . . . . . . . . . . . . . . . . . . 65
           4.5.3.2.1.  Initial 220 Message: 5 Minutes . . . . . . . . 65
           4.5.3.2.2.  MAIL Command: 5 Minutes  . . . . . . . . . . . 65
           4.5.3.2.3.  RCPT Command: 5 Minutes  . . . . . . . . . . . 65
           4.5.3.2.4.  DATA Initiation: 2 Minutes . . . . . . . . . . 66
           4.5.3.2.5.  Data Block: 3 Minutes  . . . . . . . . . . . . 66
           4.5.3.2.6.  DATA Termination: 10 Minutes.  . . . . . . . . 66
           4.5.3.2.7.  Server Timeout: 5 Minutes. . . . . . . . . . . 66
       4.5.4.  Retry Strategies . . . . . . . . . . . . . . . . . . . 66
       4.5.5.  Messages with a Null Reverse-Path  . . . . . . . . . . 68
   5.  Address Resolution and Mail Handling . . . . . . . . . . . . . 69
     5.1.  Locating the Target Host . . . . . . . . . . . . . . . . . 69
     5.2.  IPv6 and MX Records  . . . . . . . . . . . . . . . . . . . 71
   6.  Problem Detection and Handling . . . . . . . . . . . . . . . . 71


       3.9.2.  リスト . . . . . . . . . . . . . . . . . . . . . . . . 31
   4.  SMTP 仕様  . . . . . . . . . . . . . . . . . . . . . . . . . . 32
     4.1.  SMTP コマンド  . . . . . . . . . . . . . . . . . . . . . . 32
       4.1.1.  コマンドの意味と構文 . . . . . . . . . . . . . . . . . 32
       4.1.2.  コマンド引数の構文 . . . . . . . . . . . . . . . . . . 41
       4.1.3.  アドレスリテラル . . . . . . . . . . . . . . . . . . . 43
       4.1.4.  コマンドの順番 . . . . . . . . . . . . . . . . . . . . 44
       4.1.5.  プライベート使用のコマンド . . . . . . . . . . . . . . 46
     4.2.  SMTPの応答 . . . . . . . . . . . . . . . . . . . . . . . . 46
       4.2.1.  応答コードの重要度と理論 . . . . . . . . . . . . . . . 48
       4.2.2.  機能グループによる応答コード . . . . . . . . . . . . . 50
       4.2.3.  番号順の応答コード . . . . . . . . . . . . . . . . . . 52
       4.2.4.  502 応答コード . . . . . . . . . . . . . . . . . . . . 53
       4.2.5.  データと <CRLF>.<CRLF> 後の応答コード  . . . . . . . . 53
     4.3.  コマンドの順序と応答 . . . . . . . . . . . . . . . . . . . 54
       4.3.1.  順序づけの概要 . . . . . . . . . . . . . . . . . . . . 54
       4.3.2.  コマンド応答順序 . . . . . . . . . . . . . . . . . . . 55
     4.4.  追跡情報 . . . . . . . . . . . . . . . . . . . . . . . . . 57
     4.5.  さらなる実装の問題 . . . . . . . . . . . . . . . . . . . . 61
       4.5.1.  最小実装 . . . . . . . . . . . . . . . . . . . . . . . 61
       4.5.2.  透過性 . . . . . . . . . . . . . . . . . . . . . . . . 62
       4.5.3.  サイズとタイムアウト . . . . . . . . . . . . . . . . . 62
         4.5.3.1.  サイズの制限と最小 . . . . . . . . . . . . . . . . 62
           4.5.3.1.1.  ローカルパート . . . . . . . . . . . . . . . . 63
           4.5.3.1.2.  ドメイン . . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.3.  パス . . . . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.4.  コマンド行 . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.5.  応答行 . . . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.6.  テキスト行 . . . . . . . . . . . . . . . . . . 63
           4.5.3.1.7.  メッセージ内容 . . . . . . . . . . . . . . . . 63
           4.5.3.1.8.  受信バッファ . . . . . . . . . . . . . . . . . 64
           4.5.3.1.9.  制限を超えたときの扱い . . . . . . . . . . . . 64
           4.5.3.1.10. あまりに多くの受信者コード . . . . . . . . . . 64
         4.5.3.2.  タイムアウト . . . . . . . . . . . . . . . . . . . 65
           4.5.3.2.1.  最初の 220 メッセージ: 5分 . . . . . . . . . . 65
           4.5.3.2.2.  MAIL コマンド: 5分 . . . . . . . . . . . . . . 65
           4.5.3.2.3.  RCPT コマンド: 5分 . . . . . . . . . . . . . . 65
           4.5.3.2.4.  データの開始: 2分  . . . . . . . . . . . . . . 66 
           4.5.3.2.5.  データブロック: 3分  . . . . . . . . . . . . . 66
           4.5.3.2.6.  DATA の終了: 10分  . . . . . . . . . . . . . . 66
           4.5.3.2.7.  サーバタイムアウト: 5分  . . . . . . . . . . . 66
       4.5.4.  リトライ戦略 . . . . . . . . . . . . . . . . . . . . . 66
       4.5.5.  Null Reverse-path のメッセージ . . . . . . . . . . . . 68
   5.  アドレス解決とメールハンドリング . . . . . . . . . . . . . . . 69
     5.1.  対象ホストの決定 . . . . . . . . . . . . . . . . . . . . . 69
     5.2.  IPv6 と MX レコード  . . . . . . . . . . . . . . . . . . . 71
   6.  問題の発見と扱い . . . . . . . . . . . . . . . . . . . . . . . 71




Klensin                     Standards Track                     [Page 3]

RFC 5321                          SMTP                      October 2008


     6.1.  Reliable Delivery and Replies by Email . . . . . . . . . . 71
     6.2.  Unwanted, Unsolicited, and "Attack" Messages . . . . . . . 72
     6.3.  Loop Detection . . . . . . . . . . . . . . . . . . . . . . 73
     6.4.  Compensating for Irregularities  . . . . . . . . . . . . . 73
   7.  Security Considerations  . . . . . . . . . . . . . . . . . . . 75
     7.1.  Mail Security and Spoofing . . . . . . . . . . . . . . . . 75
     7.2.  "Blind" Copies . . . . . . . . . . . . . . . . . . . . . . 76
     7.3.  VRFY, EXPN, and Security . . . . . . . . . . . . . . . . . 76
     7.4.  Mail Rerouting Based on the 251 and 551 Response Codes . . 77
     7.5.  Information Disclosure in Announcements  . . . . . . . . . 77
     7.6.  Information Disclosure in Trace Fields . . . . . . . . . . 78
     7.7.  Information Disclosure in Message Forwarding . . . . . . . 78
     7.8.  Resistance to Attacks  . . . . . . . . . . . . . . . . . . 78
     7.9.  Scope of Operation of SMTP Servers . . . . . . . . . . . . 78
   8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 79
   9.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 80
   10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 81
     10.1. Normative References . . . . . . . . . . . . . . . . . . . 81
     10.2. Informative References . . . . . . . . . . . . . . . . . . 82
   Appendix A.  TCP Transport Service . . . . . . . . . . . . . . . . 85
   Appendix B.  Generating SMTP Commands from RFC 822 Header
                Fields  . . . . . . . . . . . . . . . . . . . . . . . 85
   Appendix C.  Source Routes . . . . . . . . . . . . . . . . . . . . 86
   Appendix D.  Scenarios . . . . . . . . . . . . . . . . . . . . . . 87
     D.1.  A Typical SMTP Transaction Scenario  . . . . . . . . . . . 88
     D.2.  Aborted SMTP Transaction Scenario  . . . . . . . . . . . . 89
     D.3.  Relayed Mail Scenario  . . . . . . . . . . . . . . . . . . 90
     D.4.  Verifying and Sending Scenario . . . . . . . . . . . . . . 92
   Appendix E.  Other Gateway Issues  . . . . . . . . . . . . . . . . 92
   Appendix F.  Deprecated Features of RFC 821  . . . . . . . . . . . 93
     F.1.  TURN . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
     F.2.  Source Routing . . . . . . . . . . . . . . . . . . . . . . 93
     F.3.  HELO . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
     F.4.  #-literals . . . . . . . . . . . . . . . . . . . . . . . . 94
     F.5.  Dates and Years  . . . . . . . . . . . . . . . . . . . . . 94
     F.6.  Sending versus Mailing . . . . . . . . . . . . . . . . . . 94



     6.1.  配送の信頼性と Email による応答  . . . . . . . . . . . . . 71 
     6.2.  迷惑で、頼んでいない、"攻撃" メッセージ  . . . . . . . . . 72
     6.3.  ループの検出 . . . . . . . . . . . . . . . . . . . . . . . 73
     6.4.  不正行為に対する保障 . . . . . . . . . . . . . . . . . . . 73
   7.  安全性の考慮 . . . . . . . . . . . . . . . . . . . . . . . . . 75
     7.1.  メールの安全性となりすまし . . . . . . . . . . . . . . . . 75
     7.2.  "ブラインド" コピー  . . . . . . . . . . . . . . . . . . . 76
     7.3.  VRFY、EXPN と 安全性 . . . . . . . . . . . . . . . . . . . 76
     7.4.  251 と 551 応答コードでのメール再ルーティング  . . . . . . 77
     7.5.  報告での情報非開示 . . . . . . . . . . . . . . . . . . . . 77
     7.6.  追跡フィールドの情報公開 . . . . . . . . . . . . . . . . . 78
     7.7.  メッセージ転送での情報公開 . . . . . . . . . . . . . . . . 78
     7.8.  攻撃への耐性 . . . . . . . . . . . . . . . . . . . . . . . 78
     7.9.  SMTP サーバの運用の範囲  . . . . . . . . . . . . . . . . . 78
   8.  IANA の考慮  . . . . . . . . . . . . . . . . . . . . . . . . . 79
   9.  謝辞 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80
   10.  参考文献  . . . . . . . . . . . . . . . . . . . . . . . . . . 81
     10.1.  基準とした参考文献  . . . . . . . . . . . . . . . . . . . 81
     10.2.  有益な参考文献  . . . . . . . . . . . . . . . . . . . . . 82
   附属書 A.  TCP 転送サービス  . . . . . . . . . . . . . . . . . . . 85
   附属書 B. RFC 822 ヘッダーフィールドから SMTP コマンドの生成 . . . 85
   附属書 C. ソースルート . . . . . . . . . . . . . . . . . . . . . . 86
   附属書 D. シナリオ . . . . . . . . . . . . . . . . . . . . . . . . 87
     D.1.  典型的な SMTP トランザクションシナリオ . . . . . . . . . . 88
     D.2.  中断された SMTP の トランザクションシナリオ  . . . . . . . 89 
     D.3.  中継されるメールのシナリオ . . . . . . . . . . . . . . . . 90
     D.4.  検証して送信するシナリオ . . . . . . . . . . . . . . . . . 92
   附属書 E. 他のゲートウェイの問題 . . . . . . . . . . . . . . . . . 92
   附属書 F. RFC 821 の推奨されない機能 . . . . . . . . . . . . . . . 93
     F.1.  TURN . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
     F.2.  ソースルーティング . . . . . . . . . . . . . . . . . . . . 93
     F.3.  HELO . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
     F.4.  #-文字 . . . . . . . . . . . . . . . . . . . . . . . . . . 94
     F.5.  日付と年 . . . . . . . . . . . . . . . . . . . . . . . . . 94
     F.6.  送信 vs メーリング . . . . . . . . . . . . . . . . . . . . 94





Klensin                     Standards Track                     [Page 4]

RFC 5321                          SMTP                      October 2008


1.  Introduction
1.  導入

1.1.  Transport of Electronic Mail
1.1.  電子メールの転送

   The objective of the Simple Mail Transfer Protocol (SMTP) is to
   transfer mail reliably and efficiently.

   単純メール転送プロトコル(SMTP)の目的はメールを確実に効率よく転送する
   ことです。

   SMTP is independent of the particular transmission subsystem and
   requires only a reliable ordered data stream channel.  While this
   document specifically discusses transport over TCP, other transports
   are possible.  Appendices to RFC 821 [1] describe some of them.

   SMTPは特定の伝送サブシステムからは独立していて、順序保障されたデータ
   ストリームチャネルだけを必要とします。本文書が特にTCPの転送に触れて
   いてもそれは他の伝送方法でも可能です。RFC821 [1]の附属書にそれらのい
   くつかについて説明があります。

   An important feature of SMTP is its capability to transport mail
   across multiple networks, usually referred to as "SMTP mail relaying"
   (see Section 3.6).  A network consists of the mutually-TCP-accessible
   hosts on the public Internet, the mutually-TCP-accessible hosts on a
   firewall-isolated TCP/IP Intranet, or hosts in some other LAN or WAN
   environment utilizing a non-TCP transport-level protocol.  Using
   SMTP, a process can transfer mail to another process on the same
   network or to some other network via a relay or gateway process
   accessible to both networks.

   SMTPの重要な特徴の一つは "SMTP mail relaying" と呼ばれている複数のネッ
   トワークにまたがってメールを転送する機能です。(Section 3.6 を見てく
   ださい) 一つのネットワークは公衆インターネット上でたがいに TCP での
   通信が可能なホストや、ファイヤーウォールで遮断された TCP/IP イントラ
   ネットや、転送レベルプロトコルが TCP 以外の LAN か WAN 環境で構成さ
   れます。SMTP をつかって、一つのプロセスは同じネットワーク、又は互い
   のネットワークにアクセス可能なゲートウェイプロセスや中継サーバを経由
   して他のいくつかのネットワークのもう一方のプロセスにメールを転送する
   ことができます。

   In this way, a mail message may pass through a number of intermediate
   relay or gateway hosts on its path from sender to ultimate recipient.
   The Mail eXchanger mechanisms of the domain name system (RFC 1035
   [2], RFC 974 [12], and Section 5 of this document) are used to
   identify the appropriate next-hop destination for a message being
   transported.

   このように、メールメッセージは送信者から最終的に受信者にとどくまでそ
   の経路で多くの中間の中継やゲートウェイホストを通過することがあります。
   ドメインネームシステム (RFC 1035 [2], RFC 974 [12]及び本書の
   Section 5)のメール交換メカニズムはメッセージ転送するために適切な次の
   宛先を示します。

1.2.  History and Context for This Document
1.2.  本文書の過去と背景

   This document is a specification of the basic protocol for the
   Internet electronic mail transport.  It consolidates, updates and
   clarifies, but does not add new or change existing functionality of
   the following:

   本文書はインターネット電子メール配送のための基本的なプロトコルの仕様
   です。次に示す文書を整理、更新して明快にしていますが、新規追加や既存
   の機能性については変更していません。

   o  the original SMTP (Simple Mail Transfer Protocol) specification of
      RFC 821 [1],

   o  domain name system requirements and implications for mail
      transport from RFC 1035 [2] and RFC 974 [12],

   o  the clarifications and applicability statements in RFC 1123 [3],
      and

   o  material drawn from the SMTP Extension mechanisms in RFC 1869
      [13].




Klensin                     Standards Track                     [Page 5]

RFC 5321                          SMTP                      October 2008


   o  Editorial and clarification changes to RFC 2821 [14] to bring that
      specification to Draft Standard.

   It obsoletes RFC 821, RFC 974, RFC 1869, and RFC 2821 and updates RFC
   1123 (replacing the mail transport materials of RFC 1123).  However,
   RFC 821 specifies some features that were not in significant use in
   the Internet by the mid-1990s and (in appendices) some additional
   transport models.  Those sections are omitted here in the interest of
   clarity and brevity; readers needing them should refer to RFC 821.

   RFC 821, RFC 974, RFC 1869, 及び RFC 2821 を廃止して、RFC 1123 を更
   新します(RFC 1123のメール転送の部分を置き替えます)。しかしながら、
   RFC 821 は 1990年代半ばまでのインターネットと(附属書中に)いくつかの
   追加された転送モデルで用いられる有意でない仕様を定めています。本文書
   では簡略化のためにそれらの章は脱落しています。必要とする場合は RFC
   821 を参照してください。

   It also includes some additional material from RFC 1123 that required
   amplification.  This material has been identified in multiple ways,
   mostly by tracking flaming on various lists and newsgroups and
   problems of unusual readings or interpretations that have appeared as
   the SMTP extensions have been deployed.  Where this specification
   moves beyond consolidation and actually differs from earlier
   documents, it supersedes them technically as well as textually.

   それはまた RFC1123 から拡張を必要とするいくつかの追加要素を含みます。
   この要素は複数の方法で特定されました、ほとんどは様々なメーリングリス
   トとニュースグループでのフレーミングと SMTP 拡張の独特の見解や解釈の
   問題です。この仕様が整理を越えて、実際には以前の文章と異なる場合、技
   術的にも文章的にもそれらにとってかわるものです。


   Although SMTP was designed as a mail transport and delivery protocol,
   this specification also contains information that is important to its
   use as a "mail submission" protocol, as recommended for Post Office
   Protocol (POP) (RFC 937 [15], RFC 1939 [16]) and IMAP (RFC 3501
   [17]).  In general, the separate mail submission protocol specified
   in RFC 4409 [18] is now preferred to direct use of SMTP; more
   discussion of that subject appears in that document.

   SMTP はメールの転送と配送プロトコルとして設計されましたが、この仕様
   はポストオフィスプロトコル(POP) (RFC 937 [15], RFC 1939 [16]) と
   IMAP(RFC 3501 [17]) と同じくらい推奨される "メール投函(submission)"
   プロトコルとしてそれを使うための重要な情報も含みます。一般的に、RFC
   4409 [18] で仕様化された、分離したメール投函プロトコルは現状 SMTP の
   直接的な使用を選び、さらなる記載はその文書にあります。

   Section 2.3 provides definitions of terms specific to this document.
   Except when the historical terminology is necessary for clarity, this
   document uses the current 'client' and 'server' terminology to
   identify the sending and receiving SMTP processes, respectively.

   2.3 節には本文章のための言葉の定義を規定してあります。歴史的な専門用
   語をはっきりとさせるために必要な場合をのぞいて、本文章では一般的な
   'client' と 'server' という言葉をそれぞれ SMTP プロセスの送信と受信
   という意味を表わすのに使います。

   A companion document, RFC 5322 [4], discusses message header sections
   and bodies and specifies formats and structures for them.

   仲間の文書である RFC 5322 はメッセージヘッダ部分と本文の形式と構造に
   ついて論じています。

1.3.  Document Conventions
1.3.  文書のしきたり

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [5].  As each
   of these terms was intentionally and carefully chosen to improve the
   interoperability of email, each use of these terms is to be treated
   as a conformance requirement.

   本文書での "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", と "OPTIONAL" というキー
   ワードの解釈は RFC 2119 に記述されています。それぞれ言葉は email の
   相互運用をよりよくするために、必要適用条件として取り扱われ、意図的に
   注意深く選ばれます。

   Because this document has a long history and to avoid the risk of
   various errors and of confusing readers and documents that point to
   this one, most examples and the domain names they contain are
   preserved from RFC 2821.  Readers are cautioned that these are



Klensin                     Standards Track                     [Page 6]

RFC 5321                          SMTP                      October 2008


   illustrative examples that should not actually be used in either code
   or configuration files.

   本文書は長い過去があるので、さまざまな誤解と読者の混乱のリスクを避け
   るために、提示した文書やほとんどの例とそれらが含むドメインネームは
   RFC2821 から維持しています。読者はこれらは実例であり実際にコードや設
   定ファイル中に使用されるべきではないことに注意してください。


2.  The SMTP Model
2.  SMTP モデル

2.1.  Basic Structure
2.1.  基本的な構造

   The SMTP design can be pictured as:
   SMTP の設計を図にすると：

                  +----------+                +----------+
      +------+    |          |                |          |
      | User |<-->|          |      SMTP      |          |
      +------+    |  Client- |Commands/Replies| Server-  |
      +------+    |   SMTP   |<-------------->|    SMTP  |    +------+
      | File |<-->|          |    and Mail    |          |<-->| File |
      |System|    |          |                |          |    |System|
      +------+    +----------+                +----------+    +------+
                   SMTP client                SMTP server

                    +------------+             +----------+
      +--------+    |            |             |          |
      |ユーザ  |<-->|            |    SMTP     |          |
      +--------+    |クライアント|コマンド/応答|サーバ    |
      +--------+    |   SMTP     |<----------->|    SMTP  |    +--------+
      |ファイル|<-->|            |    メール   |          |<-->|ファイル|
      |システム|    |            |             |          |    |システム|
      +--------+    +------------+             +----------+    +--------+
                  SMTP クライアント            SMTP サーバ


   When an SMTP client has a message to transmit, it establishes a two-
   way transmission channel to an SMTP server.  The responsibility of an
   SMTP client is to transfer mail messages to one or more SMTP servers,
   or report its failure to do so.

   SMTP クライアントで転送するメッセージがあるとき、SMTP クライアントは
   SMTP サーバに対して双方向の通信路を確立します。SMTPクライアントの責任
   は一つもしくはそれ以上のSMTP サーバにメールメッセージを転送するか、
   それが失敗したことをレポートすることです。

   The means by which a mail message is presented to an SMTP client, and
   how that client determines the identifier(s) ("names") of the
   domain(s) to which mail messages are to be transferred, is a local
   matter, and is not addressed by this document.  In some cases, the
   designated domain(s), or those determined by an SMTP client, will
   identify the final destination(s) of the mail message.  In other
   cases, common with SMTP clients associated with implementations of
   the POP (RFC 937 [15], RFC 1939 [16]) or IMAP (RFC 3501 [17])
   protocols, or when the SMTP client is inside an isolated transport
   service environment, the domain determined will identify an
   intermediate destination through which all mail messages are to be
   relayed.  SMTP clients that transfer all traffic regardless of the
   target domains associated with the individual messages, or that do
   not maintain queues for retrying message transmissions that initially
   cannot be completed, may otherwise conform to this specification but
   are not considered fully-capable.  Fully-capable SMTP
   implementations, including the relays used by these less capable
   ones, and their destinations, are expected to support all of the
   queuing, retrying, and alternate address functions discussed in this
   specification.  In many situations and configurations, the less-
   capable clients discussed above SHOULD be using the message
   submission protocol (RFC 4409 [18]) rather than SMTP.

   SMTP クライアントメールメッセージを渡す手段と転送されるメールのため
   にクライアントがドメインの識別子("名前")決定する方法はローカルな問題
   であり、本文書では扱いません。あるケースでは、指定されたドメインや、
   SMTP クライアントで決定したドメインは多分そのメールメッセージの最終
   到達地を示すでしょう。それ以外のケースでは、POP(RFC 937 [15], RFC
   1939 [16]) や IMAP(RFC 3501 [17]) プロトコルの実装に併合されていたり、
   SMTP クライアントが転送サービス環境から隔離されているときは、リレー
   されるすべてのメッセージのドメインは中間地点に決定されるでしょう。個々
   のメールの対象ドメインにかかわらず全てのトラフィックを転送する SMTP
   クライアントや、初回に完了することのできなかったメッセージを再送する
   ためのキューを保持しない SMTP クライアントは考慮された
   fully-capable ではない。これらの less capable たちによって使われる中
   継とそれらの到達地を含む、fully-capable な SMTP 実装はキューイング、
   再送、本仕様で述べている代替アドレス機能のすべてを実装することを期待
   します。あらゆる場合と構成で、前述した less-capabe なクライアントは
   SMTP より message submission プロトコル(RFC 4409 [18])を使うべきです。




Klensin                     Standards Track                     [Page 7]

RFC 5321                          SMTP                      October 2008


   The means by which an SMTP client, once it has determined a target
   domain, determines the identity of an SMTP server to which a copy of
   a message is to be transferred, and then performs that transfer, is
   covered by this document.  To effect a mail transfer to an SMTP
   server, an SMTP client establishes a two-way transmission channel to
   that SMTP server.  An SMTP client determines the address of an
   appropriate host running an SMTP server by resolving a destination
   domain name to either an intermediate Mail eXchanger host or a final
   target host.

   SMTP クライアントがいったん対象のドメインを決める方法、メッセージの
   コピーを送信する SMTP サーバを決める方法、送信を実行する方法について
   は本文書で対象とします。SMTP サーバにメールを転送するために SMTP クラ
   イアントは SMTP サーバに対して双方向の通信路を確立します。SMTP クライ
   アントはメール交換ホストか最終ホストどちらかの相手ドメイン名を解決し
   て、SMTP サーバが実行されている適切なホストのアドレスを決定する

   An SMTP server may be either the ultimate destination or an
   intermediate "relay" (that is, it may assume the role of an SMTP
   client after receiving the message) or "gateway" (that is, it may
   transport the message further using some protocol other than SMTP).
   SMTP commands are generated by the SMTP client and sent to the SMTP
   server.  SMTP replies are sent from the SMTP server to the SMTP
   client in response to the commands.

   SMTP サーバは最終的な到達サーバか、中間の "リレー" (メッセージを受信
   後 SMTP クライアントとなるだろう)か "ゲートウェイ"(メッセージを受信
   後はさらに SMTP 以外のプロトコルを使うかもしれない)に分類されるだろ
   う。SMTP コマンドは SMTP クライアントによって生成され、SMTP サーバに
   対して送信されます。SMTP 返答は SMTP サーバから SMTP クライアントに
   対してコマンドに対する応答で送信されます。

   In other words, message transfer can occur in a single connection
   between the original SMTP-sender and the final SMTP-recipient, or can
   occur in a series of hops through intermediary systems.  In either
   case, once the server has issued a success response at the end of the
   mail data, a formal handoff of responsibility for the message occurs:
   the protocol requires that a server MUST accept responsibility for
   either delivering the message or properly reporting the failure to do
   so (see Sections 6.1, 6.2, and 7.8, below).

   言い換えれば、メッセージ転送は元のSMTP送信者と最後のSMTP受信者間のひ
   とつのコネクションの中で行われるか、一連の中間システムを通して行われ
   ます。どちらのケースでも、一度サーバはメールデータの最後に成功応答を
   発行し、それはメッセージに対するの義務としての形式的なハンドオフで、
   プロトコルは、サーバはメッセージを配送するか、配送に失敗したことをレ
   ポートしなければならない(MUST)ことを要求します。

   Once the transmission channel is established and initial handshaking
   is completed, the SMTP client normally initiates a mail transaction.
   Such a transaction consists of a series of commands to specify the
   originator and destination of the mail and transmission of the
   message content (including any lines in the header section or other
   structure) itself.  When the same message is sent to multiple
   recipients, this protocol encourages the transmission of only one
   copy of the data for all recipients at the same destination (or
   intermediate relay) host.

   一度転送チャネルが確立され、最初のハンドシェイクが完了したら、SMTP
   クライアントは通常メールトランザクションを開始します。そのトランザク
   ションはメールの発信者と受信者の指定と、メッセージそれ自身の内容(い
   くつかの行にヘッダセクションやその他の構造を含む)を送信するための一
   連のコマンドから構成されます。同じメッセージを複数の宛先におくるとき、
   同じ宛先(または、中継)ホストの受信者には一つのデータだけ送信すること
   をこのプロトコルは推奨します。

   The server responds to each command with a reply; replies may
   indicate that the command was accepted, that additional commands are
   expected, or that a temporary or permanent error condition exists.
   Commands specifying the sender or recipients may include server-
   permitted SMTP service extension requests, as discussed in
   Section 2.2.  The dialog is purposely lock-step, one-at-a-time,
   although this can be modified by mutually agreed upon extension
   requests such as command pipelining (RFC 2920 [19]).

   サーバはそれぞれのコマンドに応答で答えます。応答はコマンドが受けつけ
   られたか、追加のコマンド待ちか、または一時的または永続的なエラー状態
   になっていることを示しています。2.2節でも論じますが、信者または受信
   者によって指示されるコマンドはサーバが許可する SMTP サービス拡張要求
   も含まれるでしょう。この対話は lock-step させたり one-at-a-time させ
   たりこれは双方の同意によってpipeliningコマンドような拡張リクエストで
   変更することができます(RFC 2920 [19])。

   Once a given mail message has been transmitted, the client may either
   request that the connection be shut down or may initiate other mail



Klensin                     Standards Track                     [Page 8]

RFC 5321                          SMTP                      October 2008


   transactions.  In addition, an SMTP client may use a connection to an
   SMTP server for ancillary services such as verification of email
   addresses or retrieval of mailing list subscriber addresses.

   一度受信したメールメッセージを送信したら、SMTP クライアントは接続の
   切断か、他のメールランザクションを開始どちらかを要求するでしょう。く
   わえて、SMTP クライアントはＥメールアドレスの確認や、メーリングリス
   ト加入者アドレスの検索のような付属サービスのために SMTP サーバに対す
   るコネクションを使うかもしれません。

   As suggested above, this protocol provides mechanisms for the
   transmission of mail.  Historically, this transmission normally
   occurred directly from the sending user's host to the receiving
   user's host when the two hosts are connected to the same transport
   service.  When they are not connected to the same transport service,
   transmission occurs via one or more relay SMTP servers.  A very
   common case in the Internet today involves submission of the original
   message to an intermediate, "message submission" server, which is
   similar to a relay but has some additional properties; such servers
   are discussed in Section 2.3.10 and at some length in RFC 4409 [18].
   An intermediate host that acts as either an SMTP relay or as a
   gateway into some other transmission environment is usually selected
   through the use of the domain name service (DNS) Mail eXchanger
   mechanism.

   上記に提案しているように、このプロトコルはメールの転送の機構を定めま
   す。歴史的に、二つのホストが同じ転送サービスでつながっている場合、通
   常は送信するユーザーのホストから、受信するユーザーのホストヘ直接転送
   を行います。同じ転送サービスでつながっていない場合、転送はひとつ以上
   の SMTP サーバを経由して行われます。今日のインターネットで非常に一般
   的なケースは中間の中継サーバと似ているが、追加機能をもたない、
   Section 2.3.10 とRFC 4409 [18] でくわしく論じている"message
   submission" サーバに送信元のメッセージを配送することを必要としていま
   す。SMTP を中継するか、他の通信環境へ変換するゲートウェイのような中
   間ホストは普通ドメインネームサービス(DNS)の Mail eXchanger 機構を通
   して選択されます。

   Usually, intermediate hosts are determined via the DNS MX record, not
   by explicit "source" routing (see Section 5 and Appendix C and
   Appendix F.2).

   通常、中間ホストは DNS の MX レコードを通して決定され、固定の
   "source" ルーティングにはよりません。

2.2.  The Extension Model
2.2.  拡張モデル

2.2.1.  Background
2.2.1.  背景

   In an effort that started in 1990, approximately a decade after RFC
   821 was completed, the protocol was modified with a "service
   extensions" model that permits the client and server to agree to
   utilize shared functionality beyond the original SMTP requirements.
   The SMTP extension mechanism defines a means whereby an extended SMTP
   client and server may recognize each other, and the server can inform
   the client as to the service extensions that it supports.

   1990年のスタートから努力して、おおよそ RFC821 ができてから 10年間、
   プロトコルはクライアントとサーバが元の SMTP を越えた共通的な機能を使
   うことに同意すれば使うことのできる "service extensions" モデルとして
   修正されてきた。SMTP 拡張メカニズムとは拡張された SMTP クライアント
   とサーバによっておたがいに認識されるこをいいます、そしてサーバはサー
   ビス拡張をサポートしていることをクライアントに報せることができます。

   Contemporary SMTP implementations MUST support the basic extension
   mechanisms.  For instance, servers MUST support the EHLO command even
   if they do not implement any specific extensions and clients SHOULD
   preferentially utilize EHLO rather than HELO.  (However, for
   compatibility with older conforming implementations, SMTP clients and
   servers MUST support the original HELO mechanisms as a fallback.)
   Unless the different characteristics of HELO must be identified for
   interoperability purposes, this document discusses only EHLO.

   現代の SMTP 実装は基本的な拡張メカニズムをサポートしなければなりませ
   ん(MUST)。例えば、サーバはなにも拡張を実装していなくとも EHLO コマン
   ドをサポートしなければなりません(MUST)、そしてクライアントは HELO よ
   りも EHLO を優先的に使うべきです(SHOUD)。(しかしながら、古き良き実装
   との互換性のために、SMTP クライアントとサーバは古い HELO メカニズム
   もサポートしなければなりません。(MUST))互換性のたに区別しなければな
   らない変わった HELO の性質がない限り、本文書では EHLO のみを論じてい
   ます。
   

   SMTP is widely deployed and high-quality implementations have proven
   to be very robust.  However, the Internet community now considers
   some services to be important that were not anticipated when the
   protocol was first designed.  If support for those services is to be



Klensin                     Standards Track                     [Page 9]

RFC 5321                          SMTP                      October 2008


   added, it must be done in a way that permits older implementations to
   continue working acceptably.  The extension framework consists of:

   SMTP は広範に配備されていて、よくできた実装はとても堅牢です。しかし
   ながら、インターネットコミュニティでは今日、プロトコルが最初に設計さ
   れたときに考えられていなかったいくつかの重要なサービスを検討します。
   もしそれらのサービスのためのサポートがくわえられても、どうにかして古
   い実装でも動作しつづけるように許容しなければなりません。拡張フレーム
   ワークは以下により構成されます。

   o  The SMTP command EHLO, superseding the earlier HELO,

      SMTP コマンドの EHLO は HELO 前に優先する

   o  a registry of SMTP service extensions,

      SMTP サービス拡張の登録

   o  additional parameters to the SMTP MAIL and RCPT commands, and

      SMTP の MAIL および RCPT コマンドへのパラメータの追加

   o  optional replacements for commands defined in this protocol, such
      as for DATA in non-ASCII transmissions (RFC 3030 [20]).

      DATA の non-ASCII 転送(RFC 3030 [20])のようなこのプロトコルで定義
      された任意のコマンドの代替。

   SMTP's strength comes primarily from its simplicity.  Experience with
   many protocols has shown that protocols with few options tend towards
   ubiquity, whereas protocols with many options tend towards obscurity.

   SMTP の強みは第一にそれ自身がの単純であることです。多くのプロトコル
   の経験は、それらの 2、3のオプションはよくつかわれる傾向にあるが、ほ
   とんどのオプションは知られていないことを学ばせてくれた。


   Each and every extension, regardless of its benefits, must be
   carefully scrutinized with respect to its implementation, deployment,
   and interoperability costs.  In many cases, the cost of extending the
   SMTP service will likely outweigh the benefit.

   ありとあらゆる拡張は、利益に無頓着で、実装、配備、相互運用のコストに
   関しては注意しなければなりません。ほとんどのケースで SMTP サービス拡
   張のコストは利益を生まないように思われます。

2.2.2.  Definition and Registration of Extensions
2.2.2.  拡張の定義と登録

   The IANA maintains a registry of SMTP service extensions.  A
   corresponding EHLO keyword value is associated with each extension.
   Each service extension registered with the IANA must be defined in a
   formal Standards-Track or IESG-approved Experimental protocol
   document.  The definition must include:

   IANA は SMTP サービス拡張の登録を主張しています。EHLO キーワードに一
   致した値はそれぞれの拡張関連付けられています。IANAに登録したサービス
   拡張は標準化過程文書か IESG 承認の実験的なプロトコル文書に記述されて
   いなければなりません。その記述には以下が含まれていなければなりません、
  
   o  the textual name of the SMTP service extension;

      その SMTP サービス拡張の正式な名前

   o  the EHLO keyword value associated with the extension;

      その拡張に関連づけた EHLO キーワードの値

   o  the syntax and possible values of parameters associated with the
      EHLO keyword value;

      EHLO キーワードの値のシンタックスと有効なパラメータ値


   o  any additional SMTP verbs associated with the extension
      (additional verbs will usually be, but are not required to be, the
      same as the EHLO keyword value);

      その拡張によって追加するSMTPの動詞(追加する動詞は通常あるが、
      EHLO キーワードの値のように必要としない場合もあります。)

   o  any new parameters the extension associates with the MAIL or RCPT
      verbs;

      MAIL または RCPT コマンドの動詞 に関係する新しいパラメータ拡張

   o  a description of how support for the extension affects the
      behavior of a server and client SMTP; and

      SMTP サーバとクライアントの動作に影響を及ぼす拡張をどのような方
      法でサポートするかの記述。





Klensin                     Standards Track                    [Page 10]

RFC 5321                          SMTP                      October 2008


   o  the increment by which the extension is increasing the maximum
      length of the commands MAIL and/or RCPT, over that specified in
      this Standard.

      この拡張により本標準内で定められた長さを超える MAIL と/または
      RCPT コマンドの最大長の増加量。
     

   In addition, any EHLO keyword value starting with an upper or lower
   case "X" refers to a local SMTP service extension used exclusively
   through bilateral agreement.  Keywords beginning with "X" MUST NOT be
   used in a registered service extension.  Conversely, keyword values
   presented in the EHLO response that do not begin with "X" MUST
   correspond to a Standard, Standards-Track, or IESG-approved
   Experimental SMTP service extension registered with IANA.  A
   conforming server MUST NOT offer non-"X"-prefixed keyword values that
   are not described in a registered extension.

   さらに、大文字か小文字の "X" ではじまるいくつかの EHLO キーワード値
   は互いの合意を通して独自にMTP サービス拡張で、ローカルで参照されます。
   "X" ではじまるキーワードは登録されたサービス拡張で使用してはいけませ
   ん(MUST NOT)。逆に、 EHLO の応答で表現される "X" ではじまらないキー
   ワード値は IANA の 標準文書か、標準化過程文書か、IESG 承認の実験的な
   プロトコル文書の登録と一致しなければなりません(MUST)。良いサーバは登
   録された拡張で述べられていない頭に"X"がつかないキーワード値を提示し
   てはいけません(MUST NOT)。

   Additional verbs and parameter names are bound by the same rules as
   EHLO keywords; specifically, verbs beginning with "X" are local
   extensions that may not be registered or standardized.  Conversely,
   verbs not beginning with "X" must always be registered.

   追加する動詞とパラメータ名は EHLO キーワードと同じルールによってしば
   られる、とくに "X"ではじまる登録または標準化されていないであろう動詞
   はローカル拡張です。逆に "X" ではじまらない動詞は常に登録されたもの
   でなければいけません。

2.2.3.  Special Issues with Extensions
2.2.3.  拡張の特別な問題


   Extensions that change fairly basic properties of SMTP operation are
   permitted.  The text in other sections of this document must be
   understood in that context.  In particular, extensions can change the
   minimum limits specified in Section 4.5.3, can change the ASCII
   character set requirement as mentioned above, or can introduce some
   optional modes of message handling.

   SMTP 動作の基本的な性質を相当変更する拡張は許されます。本文書の他の
   章での文は背景を踏まえて理解されなければならない。とりわけ拡張は最小
   限の Section 4.5.3 の仕様に限り変更することができる、前述したように
   ASCII 文字セットの条件を変更したり、メッセージハンドリングのいくつか
   のオプションモードを導入することができます。

   In particular, if an extension implies that the delivery path
   normally supports special features of that extension, and an
   intermediate SMTP system finds a next hop that does not support the
   required extension, it MAY choose, based on the specific extension
   and circumstances, to requeue the message and try later and/or try an
   alternate MX host.  If this strategy is employed, the timeout to fall
   back to an unextended format (if one is available) SHOULD be less
   than the normal timeout for bouncing as undeliverable (e.g., if
   normal timeout is three days, the requeue timeout before attempting
   to transmit the mail without the extension might be one day).

   とりわけ、ある拡張が配送経路が通常拡張の特別な機能を通常サポートして
   いることを要求する場合、中間のSMTPシステムは要求された拡張をサポート
   していない次のホップを見つけた場合、拡張の仕様やその時の状況で、メッ
   セージをリキューしてあとで再送を試みるか(試みてさらに)代理の MX ホス
   トに再送を試みてることを選択しても構いません(MAY)。この方法を採用す
   る場合、拡張されていないフォーマット(ある意味では有効ではあるけれど)に
   戻すタイムアウトは通常の配送不能のバウンスするためタイムアウトより短
   かくなるべきです(SHOULD)。(例えば通常のタイムアウトが３日の場合、再
   送キューの拡張なしでのメールの送信するまでのタイムアウトは１日にして
   もいい)

2.3.  SMTP Terminology
2.3.  SMTP の専門用語

2.3.1.  Mail Objects
2.3.1.  メールオブジェクト

   SMTP transports a mail object.  A mail object contains an envelope
   and content.
   SMTP メールオブジェクトを転送します。メールオブジェクトはエンベロープ
   とメール文面を含む。

   The SMTP envelope is sent as a series of SMTP protocol units
   (described in Section 3).  It consists of an originator address (to



Klensin                     Standards Track                    [Page 11]

RFC 5321                          SMTP                      October 2008


   which error reports should be directed), one or more recipient
   addresses, and optional protocol extension material.  Historically,
   variations on the reverse-path (originator) address specification
   command (MAIL) could be used to specify alternate delivery modes,
   such as immediate display; those variations have now been deprecated
   (see Appendix F and Appendix F.6).

   SMTP エンベロープは SMTP プロトコル郡一連の流れで送信されます。
   (Section 3に記述されている)それは発信元アドレス(エラーレポートを配送
   するため)、受信者アドレス、オプションプロトコル拡張です。歴史的に、
   コマンド(MAIL)で指定された元に戻す経路(発信元)アドレスのバリエーショ
   ンは配送モードにより使いわけることができる、すぐに表示できるような、
   それらのバリエーションは現在では推奨されていない(Appendix F と
   Appendix F.6 を見てください)。


   The SMTP content is sent in the SMTP DATA protocol unit and has two
   parts: the header section and the body.  If the content conforms to
    other contemporary standards, the header section consists of a
   collection of header fields, each consisting of a header name, a
   colon, and data, structured as in the message format specification
   (RFC 5322 [4]); the body, if structured, is defined according to MIME
   (RFC 2045 [21]).  The content is textual in nature, expressed using
   the US-ASCII repertoire [6].  Although SMTP extensions (such as
   "8BITMIME", RFC 1652 [22]) may relax this restriction for the content
   body, the content header fields are always encoded using the US-ASCII
   repertoire.  Two MIME extensions (RFC 2047 [23] and RFC 2231 [24])
   define an algorithm for representing header values outside the US-
   ASCII repertoire, while still encoding them using the US-ASCII
   repertoire.

   SMTP メール文面は SMTP DATA プロトコルユニットで送信され、ヘッダとボ
   ディの2つの部分があります。もしその文面が他の今の標準に一致している
   なれば、ヘッダ部分はそれぞれがメッセージ形式仕様(RFC 5322 [4])で構造
   化されたヘッダ名、コロン、データからなるヘッダフィールドの集合で構成
   され、ボディ部分は構造化されているならば、MIME(RFC 2045 [21]) によっ
   て定義されています。文面は普通のテキストで、US-ASCII をつかって表現
   されます。SMTP拡張(RFC 1652 [22] の"8BITMIME"のような) は文面に関し
   てはこの制限をゆるくするかもしれませんが、ヘッダフィールは常に
   US-ASCII で表現されています。ふたつの MIME 拡張(RFC 2047 [23] and
   RFC 2231 [24])はヘッダフィールドをみかけ上 US-ASCII で表現するための
   アルゴリズムを定義しています。


2.3.2.  Senders and Receivers
2.3.2.  送信者と受信者

   In RFC 821, the two hosts participating in an SMTP transaction were
   described as the "SMTP-sender" and "SMTP-receiver".  This document
   has been changed to reflect current industry terminology and hence
   refers to them as the "SMTP client" (or sometimes just "the client")
   and "SMTP server" (or just "the server"), respectively.  Since a
   given host may act both as server and client in a relay situation,
   "receiver" and "sender" terminology is still used where needed for
   clarity.

   RFC 821 では、SMTPトランザクションに関わるふたつのホストを
   "SMTP-sender" と "SMTP-receiver" と表現していました。本文書では現状
   の業界用語やこれからのことも考慮して "SMTP client"(ときどきただの
   "the client")と"SMTP server"(ときどきただの"the server")とそれぞれ変
   更しています。中継する状況で、サーバとクライアント両方として動作する
   ようなホストがあるときは、"receiver" と "sender" という用語は明確に
   するために依然使用されています。

2.3.3.  Mail Agents and Message Stores
2.3.3.  メールエージェントとメッセージの保存

   Additional mail system terminology became common after RFC 821 was
   published and, where convenient, is used in this specification.  In
   particular, SMTP servers and clients provide a mail transport service
   and therefore act as "Mail Transfer Agents" (MTAs).  "Mail User
   Agents" (MUAs or UAs) are normally thought of as the sources and
   targets of mail.  At the source, an MUA might collect mail to be
   transmitted from a user and hand it off to an MTA; the final
   ("delivery") MTA would be thought of as handing the mail off to an
   MUA (or at least transferring responsibility to it, e.g., by
   depositing the message in a "message store").  However, while these
   terms are used with at least the appearance of great precision in
   other environments, the implied boundaries between MUAs and MTAs
   often do not accurately match common, and conforming, practices with



Klensin                     Standards Track                    [Page 12]

RFC 5321                          SMTP                      October 2008


   Internet mail.  Hence, the reader should be cautious about inferring
   the strong relationships and responsibilities that might be implied
   if these terms were used elsewhere.

   RFC821 後に一般的になった追加のメールシステム用語は本文書で適宜つかっ
   ています。とりわけ SMTP サーバとクライアントはメール転送サービスを提
   供します、すなわち "Mail Transfer Agents"(MTA) として動作します。
   "Mail User Agents"(UA or AU)は通常メールの出処と、目的地として考えら
   れます。出処では、MUA はユーザーから送信するメールを受信して、MTA に
   それを渡し、最終的な(配送) MTA は MUA (もしくは、少なくともメッセー
   ジを移譲しなければならない、例えば "メッセージ格納庫" にメッセージを
   保存するなど)にメールをわたすと考えられます。しかしながら、これらの
   言葉がほかの環境で非常に正確につかわれていても、示された MUAs と
   MTAs の境界が正確には一般的な意味と一致してないことや適合していない
   ことが、インターネットメールではよくあります。それゆえに、読者は他の
   どこかでこれらの言葉が使われているばあい、文脈とつかわれかたに注意す
   べきです。

2.3.4.  Host
2.3.4.  ホスト

   For the purposes of this specification, a host is a computer system
   attached to the Internet (or, in some cases, to a private TCP/IP
   network) and supporting the SMTP protocol.  Hosts are known by names
   (see the next section); they SHOULD NOT be identified by numerical
   addresses, i.e., by address literals as described in Section 4.1.2.

   この仕様書では、ホストはインターネット(もしくは、あるケースでは、プ
   ラベートな TCP/IP ネットワーク)に接続されているコンピュータシステム
   で、SMTP プロトコルをサポートしているものとします。ホストたちは名前
   で知られている(次の節を見てください)それらは数値のアドレスで識別する
   べきではありません(SHOULD NOT)。すなわち Section 4.1.2 に記述してあ
   るようなアドレスリテラルによって識別すべきです。

2.3.5.  Domain Names
2.3.5.  ドメイン名

   A domain name (or often just a "domain") consists of one or more
   components, separated by dots if more than one appears.  In the case
   of a top-level domain used by itself in an email address, a single
   string is used without any dots.  This makes the requirement,
   described in more detail below, that only fully-qualified domain
   names appear in SMTP transactions on the public Internet,
   particularly important where top-level domains are involved.  These
   components ("labels" in DNS terminology, RFC 1035 [2]) are restricted
   for SMTP purposes to consist of a sequence of letters, digits, and
   hyphens drawn from the ASCII character set [6].  Domain names are
   used as names of hosts and of other entities in the domain name
   hierarchy.  For example, a domain may refer to an alias (label of a
   CNAME RR) or the label of Mail eXchanger records to be used to
   deliver mail instead of representing a host name.  See RFC 1035 [2]
   and Section 5 of this specification.

   ドメイン名(よくただの"ドメイン"といわれる)はドットがある場合、ドット
   によって区切られたひとつ以上のコンポーネントから構成されます。 トッ
   プレベルドメインが電子メールアドレスで使われている場合、一語がドット
   なしで使われます。詳細は後述しますが、これはインターネット上の SMTP
   トランザクションでは完全修飾ドメイン名だけが使われることを要件としま
   す。とりわけ重要なのはトップレベルドメンを必要とすることです。これら
   のコンポーネント(RFC 1035 [2] の DNS 用語では"labels")は SMTP のため
   に ASCII 文字セット[6]のアルファベット文字、数字、ハイフンに制限され
   ています。ドメイン名はホストとその他のドメイン名階層のエンティティと
   してつかわれています。例えばドメインはメールを配送するのにホスト名の
   代わりにつかわれます、別名を参照する(CNAMEレコード)か Mail
   eXchanger レコードを問いあわせるでしょう。RFC 1035 [2] と本書の
   Section 5 を見てください。


   The domain name, as described in this document and in RFC 1035 [2],
   is the entire, fully-qualified name (often referred to as an "FQDN").
   A domain name that is not in FQDN form is no more than a local alias.
   Local aliases MUST NOT appear in any SMTP transaction.

   RFC 1035 [2] と 本文書内で述べられているドメイン名はすべて、完全修飾
   名です(よく"FQDN"といわれる)。FQDN形式でないドメイン名はローカルの別
   名にすぎません。ローカルの別名はどんな SMTP トランザクションでも使わ
   れてはいけません(MUST NOT)。

   Only resolvable, fully-qualified domain names (FQDNs) are permitted
   when domain names are used in SMTP.  In other words, names that can
   be resolved to MX RRs or address (i.e., A or AAAA) RRs (as discussed
   in Section 5) are permitted, as are CNAME RRs whose targets can be
   resolved, in turn, to MX or address RRs.  Local nicknames or
   unqualified names MUST NOT be used.  There are two exceptions to the
   rule requiring FQDNs:

   唯一解決できるのは、完全修飾ドメイン名 (FQDN) はドメイン名が SMTP で
   つかわれるときに許容されます。いいかえれば、MX レコードやアドレス(A
   か AAAA)レコード(Section 5で論じてます)で解決することのできる名前は
   許容されます。MX やアドレスレコードに解決できる CNAME レコードも同じ
   く許容されます。ローカルなニックネームとか不完全な名前は使用してはい
   けません(MUST NOT)。FQDN が求めるルールには二つ例外があります。


   o  The domain name given in the EHLO command MUST be either a primary
      host name (a domain name that resolves to an address RR) or, if
      the host has no name, an address literal, as described in
      Section 4.1.3 and discussed further in the EHLO discussion of
      Section 4.1.4.

      EHLO コマンドで与えられるドメイン名はプリマリホスト名(アドレスレ
      コードで解決)もしくは、ホストに名前がない場合、Section 4.1.3 とさ
      らに先の Section 4.1.4 の EHLO についての議論でも論じているアドレ
      スリテラルでなければならない(MUST)。



Klensin                     Standards Track                    [Page 13]

RFC 5321                          SMTP                      October 2008


   o  The reserved mailbox name "postmaster" may be used in a RCPT
      command without domain qualification (see Section 4.1.1.3) and
      MUST be accepted if so used.

      メールボックスの名前として予約された "postmaster" は RCPT コマン
      ドでドメイン修飾なしに (Section 4.1.1.3を見てください)つかわれる
      かもしれない、そしてもしそのように使用されるのであれば受け入れな
      ければなりません。


2.3.6.  Buffer and State Table
2.3.6.  バッファと状態表

   SMTP sessions are stateful, with both parties carefully maintaining a
   common view of the current state.  In this document, we model this
   state by a virtual "buffer" and a "state table" on the server that
   may be used by the client to, for example, "clear the buffer" or
   "reset the state table", causing the information in the buffer to be
   discarded and the state to be returned to some previous state.

   SMTP セッションは両方の当事者による現状の共通の見解を持っているステー
   トフル。本文書では、われわれはクライアントによって使われるであろうサー
   バー上の仮想的な"バッファ"と"状態テーブル"にモデルづけしています。た
   とえば、"バッファのクリアする" や "状態テーブルをリセットする"は、バッ
   ファ中の情報を破棄することと、状態がいくつか前の状態にもどることを意
   味しています。


2.3.7.  Commands and Replies
2.3.7.  コマンドと応答

   SMTP commands and, unless altered by a service extension, message
   data, are transmitted from the sender to the receiver via the
   transmission channel in "lines".

   SMTP コマンド と (サービス拡張によって変更されないかぎり)メッセージ
   データは送信者から受信者へ伝送チャネルを通して "行" 単位で送信されま
   す。

   An SMTP reply is an acknowledgment (positive or negative) sent in
   "lines" from receiver to sender via the transmission channel in
   response to a command.  The general form of a reply is a numeric
   completion code (indicating failure or success) usually followed by a
   text string.  The codes are for use by programs and the text is
   usually intended for human users.  RFC 3463 [25], specifies further
   structuring of the reply strings, including the use of supplemental
   and more specific completion codes (see also RFC 5248 [26]).

   SMTP の応答はコマンドに応えて受信者から送信者へ伝送チャネルを通して
   行単位でおくられ受領確認(肯定または否定)です。応答の一般的な形式は数
   値の終了コード(失敗か成功かを示す)に通常はテキスト文字列がつづきます。
   終了コードはプログラムで使われ、テキストは通常人間を対象としたもので
   す。 RFC 3463 [25] ではさらに補足的な使用方法とより明確な終了コード
   (RFC 5248[26] も見てください)などの返信文字列の構造の仕様を定めてい
   ます。

2.3.8.  Lines
2.3.8.  行

   Lines consist of zero or more data characters terminated by the
   sequence ASCII character "CR" (hex value 0D) followed immediately by
   ASCII character "LF" (hex value 0A).  This termination sequence is
   denoted as <CRLF> in this document.  Conforming implementations MUST
   NOT recognize or generate any other character or character sequence
   as a line terminator.  Limits MAY be imposed on line lengths by
   servers (see Section 4).

   行は ASCII 文字の "CR" (16進数で 0D) の直後に "LF"(16進数で 0A)の文
   字列で終端している０文字以上のから構成されます。この終端文字列は本文
   書では <CRLF> と表示しています。適合した実装は他の文字や文字列を行の
   終端として解釈したり、使用してはいけません(MUST NOT)。

   In addition, the appearance of "bare" "CR" or "LF" characters in text
   (i.e., either without the other) has a long history of causing
   problems in mail implementations and applications that use the mail
   system as a tool.  SMTP client implementations MUST NOT transmit
   these characters except when they are intended as line terminators
   and then MUST, as indicated above, transmit them only as a <CRLF>
   sequence.

   加えて、本文中に "そのまま" の "CR" や "LF" 文字の表現(すなわち、ど
   ちらか片方のみ)はメールの実装とツールとしてメールシステムを使うアプ
   リケーションに問題をもたらしている長い過去があります。前述したように、
   SMTP クライアントの実装はそれらが意図して行の終端となる場合を除いて
   これらの文字を 送信してはならない(MUST NOT)、そして <CRLF> の順序で
   だけそれらを送信しなければいけません(MUST)。






Klensin                     Standards Track                    [Page 14]

RFC 5321                          SMTP                      October 2008


2.3.9.  Message Content and Mail Data
2.3.9.  メッセージ内容 と メールデータ

   The terms "message content" and "mail data" are used interchangeably
   in this document to describe the material transmitted after the DATA
   command is accepted and before the end of data indication is
   transmitted.  Message content includes the message header section and
   the possibly structured message body.  The MIME specification (RFC
   2045 [21]) provides the standard mechanisms for structured message
   bodies.

   "メッセージ内容" と "メールデータ" は本文書では DATA コマンドが受け
   付けられ、そしてデータの終了指示が送信されるまでの要素として記述され、
   同じ意味で使われています。メッセージ内容はメッセージヘッダ部分、(場
   合によっては構造化された)メッセージ本文を含んでいます。MIME 仕様
   (RFC 2045 [21)では構造化されたメッセージ本文のための標準的なメカニズ
   ムを規定しています。


2.3.10.  Originator, Delivery, Relay, and Gateway Systems
2.3.10.  発信、配信、中継、およびゲートウェイシステム

   This specification makes a distinction among four types of SMTP
   systems, based on the role those systems play in transmitting
   electronic mail.  An "originating" system (sometimes called an SMTP
   originator) introduces mail into the Internet or, more generally,
   into a transport service environment.  A "delivery" SMTP system is
   one that receives mail from a transport service environment and
   passes it to a mail user agent or deposits it in a message store that
   a mail user agent is expected to subsequently access.  A "relay" SMTP
   system (usually referred to just as a "relay") receives mail from an
   SMTP client and transmits it, without modification to the message
   data other than adding trace information, to another SMTP server for
   further relaying or for delivery.

   本仕様では電子メール送信におけるそれぞれのシステムの役割に基づいて
   SMTP システムを４つの型に分類しています。"発信" システムは(ときどき
   SMTP 発信元と言われる)メールをインターネット、より一般的に、転送サー
   ビス環境へと導入します。"配送" SMTP システムは転送サービス環境からメー
   ルをうけとり、メールユーザーエージェントに渡すか、メールユーザーエー
   ジェントが後でアクセスするであろうメッセージ格納庫に保存するものです。
   "中継" SMTP システム(通常ただの"リレー"といわれる)は SMTP クライアン
   トからメールを受け取ってそれをトレース情報以外にメッセージデータを変
   更せずに、さらに中継するか、もしくは配信する他の SMTP サーバに送信し
   ます。
   

   A "gateway" SMTP system (usually referred to just as a "gateway")
   receives mail from a client system in one transport environment and
   transmits it to a server system in another transport environment.
   Differences in protocols or message semantics between the transport
   environments on either side of a gateway may require that the gateway
   system perform transformations to the message that are not permitted
   to SMTP relay systems.  For the purposes of this specification,
   firewalls that rewrite addresses should be considered as gateways,
   even if SMTP is used on both sides of them (see RFC 2979 [27]).

   "ゲートウェイ" SMTP システムは(通常ただの"ゲートウェイ"とよばれる)は
   メールをある転送環境のクラアントシステムから受信し、その他の転送環境
   のサーバシステムへ送信します。転送環境間でプロトコルもしくはメッセー
   ジ記号の相違はゲートウェイのどちらかの側で SMTP 中継システムに許容さ
   れないメッセージのためにゲートウェシステムが変換することが必要でしょ
   う。本仕様の意図するところとして、たとえSMTP がそれらの両サイドで使
   われていたとしても(RFC 2979 [27] を見てください)、アドレスを書き換え
   ると考えられるようなファイアーウォールはゲートウェイとみなすべきです。

2.3.11.  Mailbox and Address
2.3.11.  メールボックスとアドレス

   As used in this specification, an "address" is a character string
   that identifies a user to whom mail will be sent or a location into
   which mail will be deposited.  The term "mailbox" refers to that
   depository.  The two terms are typically used interchangeably unless
   the distinction between the location in which mail is placed (the
   mailbox) and a reference to it (the address) is important.  An
   address normally consists of user and domain specifications.  The
   standard mailbox naming convention is defined to be
   "local-part@domain"; contemporary usage permits a much broader set of
   applications than simple "user names".  Consequently, and due to a
   long history of problems when intermediate hosts have attempted to

   



Klensin                     Standards Track                    [Page 15]

RFC 5321                          SMTP                      October 2008


   optimize transport by modifying them, the local-part MUST be
   interpreted and assigned semantics only by the host specified in the
   domain part of the address.

   本仕様で仕様されている"アドレス"とはメールが送られるであろうユーザー
   やメールが保存されるであろう場所を示す文字列です。"メールボックス"と
   いう言葉は保管場所のことを言っています。二つの言葉はメールが置かれる
   場所(メールボックス)とそれへの参照(アドレス)の区別が重要でない限り一
   般的に区別なく使われます。アドレスは普通ユーザーとドメイン指定で構成
   されています。標準のメールボックス命名規則は"local-part@domain" とし
   て定義され、現代の使用法はシンプルな"ユーザー名"より広範囲に一連の用
   途を許可します。その結果と、中間のホストがそれらを変更することにより
   配送するときの長い過去の問題のために、アドレスのドメイン部分で示され
   たホストだけによってローカルパートは解釈され、意味を割りあてられなけ
   ればいけません(MUST)。

2.4.  General Syntax Principles and Transaction Model
2.4.  一般的な構文の指針とトランザクションモデル

   SMTP commands and replies have a rigid syntax.  All commands begin
   with a command verb.  All replies begin with a three digit numeric
   code.  In some commands and replies, arguments are required following
   the verb or reply code.  Some commands do not accept arguments (after
   the verb), and some reply codes are followed, sometimes optionally,
   by free form text.  In both cases, where text appears, it is
   separated from the verb or reply code by a space character.  Complete
   definitions of commands and replies appear in Section 4.

   SMTP コマンドと応答は固定された構文です。すべてのコマンドはコマンド
   動詞で始まります。すべての応答は三桁の数値コードで始まります。いくつ
   かのコマンドと応答は、動詞か応答コードにつづく引数を必要とします。い
   くつかのコマンドは(動詞の後の)引数を受け付けません。そして、たまにオ
   プションとして、いくつかの応答コードに自由な形式の文がつづきます。文
   が現われたとき、両方のケースでそれはスペース文字で動詞または応答コー
   ドと分離されます。コマンドと応答の完全な定義は Section 4 に記載して
   います。

   Verbs and argument values (e.g., "TO:" or "to:" in the RCPT command
   and extension name keywords) are not case sensitive, with the sole
   exception in this specification of a mailbox local-part (SMTP
   Extensions may explicitly specify case-sensitive elements).  That is,
   a command verb, an argument value other than a mailbox local-part,
   and free form text MAY be encoded in upper case, lower case, or any
   mixture of upper and lower case with no impact on its meaning.  The
   local-part of a mailbox MUST BE treated as case sensitive.
   Therefore, SMTP implementations MUST take care to preserve the case
   of mailbox local-parts.  In particular, for some hosts, the user
   "smith" is different from the user "Smith".  However, exploiting the
   case sensitivity of mailbox local-parts impedes interoperability and
   is discouraged.  Mailbox domains follow normal DNS rules and are
   hence not case sensitive.

   動詞と引数の値(例えば、RCPT コマンドと拡張名前キーワードでの"TO:" や
   "to:")は大文字、小文字を区別しません。本仕様で唯一の例外はメールボッ
   クスのローカルパートです(SMTP 拡張は大文字小文字を区別する要素を定義
   しているかもしれません)。コマンド動詞、メールボックスのローカルパー
   ト以外の引数、そして自由な形式のテキストはそれ自身の意味に影響はない
   が、大文字または小文字、大文字と小文字が混ざった状態で符号化される可
   能性があります(MAY)。メールボックスのローカルパートは大文字、小文字
   を区別しなければいけません(MUST)。よって SMTP の実装はメールボックス
   のローカルパートの大文字/小文字を保つことに気をつけなければなりませ
   ん(MUST)。具体的には、あるホストでは、ユーザー "smith" と"Smith" は
   異なるユーザーです。しかしながらメールボックスのローカルパートで大文
   字、小文字を区別して利用することは相互運用の妨げになるので推奨されま
   せん。メールボックスのドメインは通常の DNS ルールに従います、よって
   大文字、小文字を区別しません。

   A few SMTP servers, in violation of this specification (and RFC 821)
   require that command verbs be encoded by clients in upper case.
   Implementations MAY wish to employ this encoding to accommodate those
   servers.

   本仕様(もしくは RFC 821)に違反の、ごく少数の SMTP サーバはクライアン
   トにコマンド動詞を大文字で符号化することを要求します。実装はそれらの
   サーバにも適応する符号化を採用したほうがいいかもしれません(MAY)。

   The argument clause consists of a variable-length character string
   ending with the end of the line, i.e., with the character sequence
   <CRLF>.  The receiver will take no action until this sequence is
   received.

   引数節は行の最後の文字列、すなわち <CRLF> を含む可変長文字列から成り
   ます。受信者はこのシーケンスを受信しないかぎり作動しないでしょう。

   The syntax for each command is shown with the discussion of that
   command.  Common elements and parameters are shown in Section 4.1.2.

   それぞれのコマンドの構文はそのコマンドの考察で示されています。共通的
   な要素とパラメータは Section 4.1.2. で示されています。

   Commands and replies are composed of characters from the ASCII
   character set [6].  When the transport service provides an 8-bit byte
   (octet) transmission channel, each 7-bit character is transmitted,
   right justified, in an octet with the high-order bit cleared to zero.
   More specifically, the unextended SMTP service provides 7-bit



Klensin                     Standards Track                    [Page 16]

RFC 5321                          SMTP                      October 2008


   transport only.  An originating SMTP client that has not successfully
   negotiated an appropriate extension with a particular server (see the
   next paragraph) MUST NOT transmit messages with information in the
   high-order bit of octets.  If such messages are transmitted in
   violation of this rule, receiving SMTP servers MAY clear the high-
   order bit or reject the message as invalid.  In general, a relay SMTP
   SHOULD assume that the message content it has received is valid and,
   assuming that the envelope permits doing so, relay it without
   inspecting that content.  Of course, if the content is mislabeled and
   the data path cannot accept the actual content, this may result in
   the ultimate delivery of a severely garbled message to the recipient.
   Delivery SMTP systems MAY reject such messages, or return them as
   undeliverable, rather than deliver them.  In the absence of a server-
   offered extension explicitly permitting it, a sending SMTP system is
   not permitted to send envelope commands in any character set other
   than US-ASCII.  Receiving systems SHOULD reject such commands,
   normally using "500 syntax error - invalid character" replies.

   コマンドと応答は ASCII 文字セット [6] からの文字から成っています。転
   送サービスが 8-bit バイト(オクテット) 伝送チャネルを準備してても、右
   ぞろえの高位ビットがゼロクリアされて 7-bit 文字が送信されます。具体
   的に言うと、拡張されていない SMTP サービスは 7bit の転送だけを備えて
   います。特定のサーバ(つぎの段落を見てください)に適切な拡張を取り決
   めするのに成功しなかった送信元の SMTP クライアントはオクテットの高位
   ビットの情報を含んだメッセージを送信してはいけません(MUST NOT)。もし
   このようなメッセージがルールに違反して送信された場合、受信した SMTP
   サーバは高位ビットをクリアしたり、無効としてメッセージを拒絶しても構
   いません(MAY)。一般的に中継 SMTP は 受信したメッセージ内容を有効とみ
   なし、エンベロープはそうすることを許可すると仮定して、内容を検査する
   ことなしに中継するべきです(SHOULD)。内容が不正で、データの経路が実際
   の内容を受け入れることができなければ、もちろん、これは結果的に受信者
   に対してのひどくゆがめられたメッセージの最終的な配送をもたらすでしょ
   う。配送SMTP システムはそれらを配送するようりもむしろ拒否したり、配
   送不可として返送したほうがよい(MAY)。サーバが提供した拡張にあきら
   かにそれが無い場合、送信 SMTP システムは US-ASCII 以外にどんな文字セッ
   トのエンベロープコマンドを送ることを許可しない。受信システムはそのよ
   うなコマンドを拒絶すべきで(SHOULD)、通常 "500 syntax error -
   invalid character" の応答が用いられます。


   8-bit message content transmission MAY be requested of the server by
   a client using extended SMTP facilities, notably the "8BITMIME"
   extension, RFC 1652 [22]. 8BITMIME SHOULD be supported by SMTP
   servers.  However, it MUST NOT be construed as authorization to
   transmit unrestricted 8-bit material, nor does 8BITMIME authorize
   transmission of any envelope material in other than ASCII. 8BITMIME
   MUST NOT be requested by senders for material with the high bit on
   that is not in MIME format with an appropriate content-transfer
   encoding; servers MAY reject such messages.

   8-bit のメッセージ内容の送信はクライアントが RFC 1652 [22] の
   "8BITMIME"として知られる拡張された SMTP 機能を使用することによってサー
   バーに指示するでしょう(MAY)。8BITMIME は SMTP サーバによってサポート
   されるべきです(SHOULD)。しかしながら、それは無制限に 8-bit 要素を送
   信すること対する許可としても 8BITMIME が ASCII 以外でのどんなエンベ
   ロープ要素の送信を許可することと、とらえるべきではありません(MUST
   NOT)。8BITMIME は 適切な content-transfer エンコーディングをもつ
   MIME フォーマットなしに、高位ビットを持つ要素のために送信者によって
   要求されてはいけません(MUST NOT)、そしてサーバはそのようなメッセー
   ジを拒絶しても構いません(MAY)。

   The metalinguistic notation used in this document corresponds to the
   "Augmented BNF" used in other Internet mail system documents.  The
   reader who is not familiar with that syntax should consult the ABNF
   specification in RFC 5234 [7].  Metalanguage terms used in running
   text are surrounded by pointed brackets (e.g., <CRLF>) for clarity.
   The reader is cautioned that the grammar expressed in the
   metalanguage is not comprehensive.  There are many instances in which
   provisions in the text constrain or otherwise modify the syntax or
   semantics implied by the grammar.

   本書でのメタ言語の表記法は他のインネットメールシステムの文書で使用さ
   れる "Augmented BNF" に相当するものものを使用しています。構文に精通
   していない読者は RFC 5234 [7] の ABNF の仕様を参考にしてください。本
   文で使用されるメタ言語は明確にするために角括弧でくくられている(たと
   えば、<CRLF>)。読者はメタ言語で表された文法が包括的でないことに注意
   してください。テキストでの条件を制約したり、文法によって構文や記号の
   変更が指示される多くの事例があります。
   

3.  The SMTP Procedures: An Overview
3.  SMTP 手順 : 概要

   This section contains descriptions of the procedures used in SMTP:
   session initiation, mail transaction, forwarding mail, verifying
   mailbox names and expanding mailing lists, and opening and closing
   exchanges.  Comments on relaying, a note on mail domains, and a
   discussion of changing roles are included at the end of this section.
   Several complete scenarios are presented in Appendix D.

   本 Section は SMTP で用いられる手順、セッションの始動、メールトラン
   ザクション、メールの転送、メールボックス名と拡張メーリングリストの比
   較、及び交換の始めと終りについての説明を含んでいます。中継について解
   説、メールドメインについての記述、そして役割を変更することについての
   考察は本 Section の後半に含まれます。いくつかのシナリオ一式は
   Appendix D に記載されています。

   





Klensin                     Standards Track                    [Page 17]

RFC 5321                          SMTP                      October 2008


3.1.  Session Initiation
3.1.  セッションの始動

   An SMTP session is initiated when a client opens a connection to a
   server and the server responds with an opening message.

   SMTP セッションはクライアントがサーバに対するコネクションを開き、サー
   バーが開始メッセージで応答したときに始動されます。

   SMTP server implementations MAY include identification of their
   software and version information in the connection greeting reply
   after the 220 code, a practice that permits more efficient isolation
   and repair of any problems.  Implementations MAY make provision for
   SMTP servers to disable the software and version announcement where
   it causes security concerns.  While some systems also identify their
   contact point for mail problems, this is not a substitute for
   maintaining the required "postmaster" address (see Section 4).

   SMTP サーバ実装はより効率的単離といくつかの問題の修正するために 220
   コード後の接続グリーティングにそれらのソフトウェアの識別子とバージョ
   ン情報を含んでも構いません(MAY)。実装はセキュリティの懸念によりソフ
   トウェアとバージョンの告知を無効にするSMTPサーバを用意しても構いま
   せん(MAY)。いくつかのシステムもまたメール問題のための連絡窓口を決め
   ていますが、これは必要とされる "postmaster" アドレスを主張することの
   代わりになるものではありません(Section 4を見てください)。

   The SMTP protocol allows a server to formally reject a mail session
   while still allowing the initial connection as follows: a 554
   response MAY be given in the initial connection opening message
   instead of the 220.  A server taking this approach MUST still wait
   for the client to send a QUIT (see Section 4.1.1.10) before closing
   the connection and SHOULD respond to any intervening commands with
   "503 bad sequence of commands".  Since an attempt to make an SMTP
   connection to such a system is probably in error, a server returning
   a 554 response on connection opening SHOULD provide enough
   information in the reply text to facilitate debugging of the sending
   system

   SMTP プロトコルは 初期コネクションを許可するまでの間に正式にメールセッ
   ションを次のとおり拒絶することを許容します。初期接続開始メッセージで
   554 の応答を 220 の代わりとして言いわたしても構いません(MAY)。この手
   法とるサーバはクライアントがコネクションをクローズする以前に送信する
   QUIT(Section 4.1.1.10を見てください)を待たなければなりません(MUST)。
   そして、どんな中間のコマンドにも"503 bad sequence of commands"で応答
   すべきです(SHOULD)。高い確率でエラーとなるようなシステムに対して
   SMTP コネクションを開こうと試行するので、サーバはコネクション開始
   時に 554 応答を返すときに送信システムのデバッグを容易にするためその
   応答テキストに十分な情報を備えるべきです(SHOULD)。



3.2.  Client Initiation
3.2.  クライアントの初期化

   Once the server has sent the greeting (welcoming) message and the
   client has received it, the client normally sends the EHLO command to
   the server, indicating the client's identity.  In addition to opening
   the session, use of EHLO indicates that the client is able to process
   service extensions and requests that the server provide a list of the
   extensions it supports.  Older SMTP systems that are unable to
   support service extensions, and contemporary clients that do not
   require service extensions in the mail session being initiated, MAY
   use HELO instead of EHLO.  Servers MUST NOT return the extended EHLO-
   style response to a HELO command.  For a particular connection
   attempt, if the server returns a "command not recognized" response to
   EHLO, the client SHOULD be able to fall back and send HELO.

   一度サーバがグリーティング(ようこそ)メッセージを送信して、クライアン
   トがそれを受け取ったならば、クライアントはサーバに対してアイデンティ
   ティを示すために通常 EHLO コマンド を送信します。セッションを開始す
   ることに続いて、EHLO を使用することはクライアントがサービス拡張を処
   理することができることと、サーバがサポートする拡張のリストを提供す
   ることを要求することを示します。サービス拡張をサポートすることのでき
   ないより古い SMTP システムとメールセッション開始時にサービス拡張を要
   求しない同時期のクライアントは EHLO の代わりに HELO を用いても構いま
   せん(MAY)。サーバは HELO コマンドに対して拡張 EHLO スタイルの応答
   を返してはいけません(MUST NOT)。特定の接続試行で、サーバが EHLO に
   対して "command not recognized" の応答を返したら、クライアントは撤回
   することができ、HELO を送信するべきです(SHOULD)。

   In the EHLO command, the host sending the command identifies itself;
   the command may be interpreted as saying "Hello, I am <domain>" (and,
   in the case of EHLO, "and I support service extension requests").

   EHLO コマンドでは、ホストは自身を確認するコマンドを送信し、そのコマ
   ンドは "やあ、私は <domain> です"(そして、EHLO の場合 "私はサービス
   拡張要求をサポートします。") というように解釈されるだろう。







Klensin                     Standards Track                    [Page 18]

RFC 5321                          SMTP                      October 2008


3.3.  Mail Transactions
3.3.  メールトランザクション

   There are three steps to SMTP mail transactions.  The transaction
   starts with a MAIL command that gives the sender identification.  (In
   general, the MAIL command may be sent only when no mail transaction
   is in progress; see Section 4.1.4.)  A series of one or more RCPT
   commands follows, giving the receiver information.  Then, a DATA
   command initiates transfer of the mail data and is terminated by the
   "end of mail" data indicator, which also confirms the transaction.

   SMTP メールトランザクションには３ステップあります。トランザクション
   は送信者の識別をあたえる MAIL コマンドで開始します。(一般的に、MAIL
   コマンドは進行中のメールトランザクションがないときだけ送信されます
   Section 4.1.4. を見てください)。受信者情報をあたえる一つ以上の RCPT
   コマンドがつづきます。その次に DATA コマンドがメールデータの転送を開
   始して、トランザクションを確定する "メール終端" のデータ識別子で終了
   させます。

   The first step in the procedure is the MAIL command.

   手順の最初のステップはメールコマンドです。

      MAIL FROM:<reverse-path> [SP <mail-parameters> ] <CRLF>

   This command tells the SMTP-receiver that a new mail transaction is
   starting and to reset all its state tables and buffers, including any
   recipients or mail data.  The <reverse-path> portion of the first or
   only argument contains the source mailbox (between "<" and ">"
   brackets), which can be used to report errors (see Section 4.2 for a
   discussion of error reporting).  If accepted, the SMTP server returns
   a "250 OK" reply.  If the mailbox specification is not acceptable for
   some reason, the server MUST return a reply indicating whether the
   failure is permanent (i.e., will occur again if the client tries to
   send the same address again) or temporary (i.e., the address might be
   accepted if the client tries again later).  Despite the apparent
   scope of this requirement, there are circumstances in which the
   acceptability of the reverse-path may not be determined until one or
   more forward-paths (in RCPT commands) can be examined.  In those
   cases, the server MAY reasonably accept the reverse-path (with a 250
   reply) and then report problems after the forward-paths are received
   and examined.  Normally, failures produce 550 or 553 replies.

   このコマンドは SMTP-receiver にあたらしいメールトランザクションが開
   始していること及び、そして全ての SMTP-receiver の状態テーブルとどん
   な宛先およびメールデータを含むバッファを初期化することを伝えます。最
   初または唯一の引数は <reverse-path> 部分であり、送信元のメールボック
   ス("<"と">" 括弧の間に)を含み、エラーを報告するのに用いることができ
   ます(エラー報告の記述については Section 4.2 を見てください)。もし受
   け入れられたのなら、SMTPサーバは "250 OK" の応答を返します。もしメー
   ルボックスの仕様がなんらかの理由で受けいれられないのであれば、サーバ
   はその失敗が永続的なもの(すなわち、クライアントが同じアドレスに再び
   送信を試みても発生するだろう)なのか一時的なもの(すなわち、後で再送す
   れば受けいれられるかもしれない)なのかを示す応答を返さなければなりま
   せん(MUST)。この要求の明らかな範囲にかかわらず、一つかそれ以上の
   forward-paths (RCPT コマンドで)が検査することのできるまで
   reverse-path を受けいれることができるかどうか決定できないかもしれな
   い状況があります。そのようなケースでは、サーバは reverse-pathを(250
   の応答で) 当然受け入れ、そしてforward-paths が受信され、検査された後
   に問題を報告しても構わない(MAY)。通常、失敗は 550 または 553 の応答
   を発行します。

   Historically, the <reverse-path> was permitted to contain more than
   just a mailbox; however, contemporary systems SHOULD NOT use source
   routing (see Appendix C).

   歴史的に、<reverse-path> はメールボックス以上を含むのを許可されてい
   ました、しかしながら、現在のシステムはソースルーティングを使用すべき
   ではありません(SHOULD NOT)。(Appendix C を見てください)

   The optional <mail-parameters> are associated with negotiated SMTP
   service extensions (see Section 2.2).

   オプションの <mail-parameters> は 取り決めた SMTP サービス拡張に関連
   づけられます(Section 2.2 を見てください)。

   The second step in the procedure is the RCPT command.  This step of
   the procedure can be repeated any number of times. 

   手順の二番目のステップ RCPT コマンドです。手順においてこのステップは
   何回か繰り返すことが可能です。

      RCPT TO:<forward-path> [ SP <rcpt-parameters> ] <CRLF>

   The first or only argument to this command includes a forward-path
   (normally a mailbox and domain, always surrounded by "<" and ">"
   brackets) identifying one recipient.  If accepted, the SMTP server
   returns a "250 OK" reply and stores the forward-path.  If the



Klensin                     Standards Track                    [Page 19]

RFC 5321                          SMTP                      October 2008


   recipient is known not to be a deliverable address, the SMTP server
   returns a 550 reply, typically with a string such as "no such user -
   " and the mailbox name (other circumstances and reply codes are
   possible).

   このコマンドの最初もしくは唯一の引数は一つの受信者を示す
   forward-path (通常メールボックスとドメインで、常に "<" と ">" 括弧に
   よりくくられる)を含んでいます。もし受けいれられれば、 SMTP サーバは
   "250 OK" の応答をして forward-path に保存します。もし受信者が配送で
   きるアドレスでないことを知っているならば、SMTP サーバは通常 "no
   such user" とメールボックス名のような文字列と一緒に 550 の応答を返し
   ます(他の詳細と応答コードも可能)。

   The <forward-path> can contain more than just a mailbox.
   Historically, the <forward-path> was permitted to contain a source
   routing list of hosts and the destination mailbox; however,
   contemporary SMTP clients SHOULD NOT utilize source routes (see
   Appendix C).  Servers MUST be prepared to encounter a list of source
   routes in the forward-path, but they SHOULD ignore the routes or MAY
   decline to support the relaying they imply.  Similarly, servers MAY
   decline to accept mail that is destined for other hosts or systems.
   These restrictions make a server useless as a relay for clients that
   do not support full SMTP functionality.  Consequently, restricted-
   capability clients MUST NOT assume that any SMTP server on the
   Internet can be used as their mail processing (relaying) site.  If a
   RCPT command appears without a previous MAIL command, the server MUST
   return a 503 "Bad sequence of commands" response.  The optional
   <rcpt-parameters> are associated with negotiated SMTP service
   extensions (see Section 2.2).

   <forward-path> はただのメールボックス以上のものを含むことができます。
   歴史的に、 <forward-path> はホストのソースルーティングのリストと宛先
   のメールボックスを含むことを許可されていました。しかしながら今日の
   SMTP クライアントではソースルート(Appendix C を見てください)を利用す
   べきではありません(SHOULD NOT)。サーバは forward-path の中でソースルー
   トのリストに遭遇する準備ができていなければなりません(MUST)、しかしサー
   バはルートを無視すべき(SHOULD)、もしくはそれらを示めした中継をサポー
   トすることを拒否しても構いません(MAY)。同じように、サーバは他のホス
   トやシステムに向かうメールを受けつけることを拒否しても構まいません。
   これらの制限はサーバをすべての SMTP 機能性をサポートしていないクライ
   アントに中継として使用できなくさせます。その結果、制限された機能のク
   ライアントはどのインターネット上の SMTP サーバもそれらのメールを処理
   (中継)する場所として使用できるとみなしてはいけません(MUST NOT)。もし
   RCPT コマンドが前の MAIL コマンドなしに現われた場合、サーバは503
   "Bad sequence of commands" 応答を返さなければいけません(MUST)。オプ
   ションの<rcpt-parameters> は取り決めた SMTP サービス拡張に関連づけら
   れます(Section 2.2 を見てください)。


   Since it has been a common source of errors, it is worth noting that
   spaces are not permitted on either side of the colon following FROM
   in the MAIL command or TO in the RCPT command.  The syntax is exactly
   as given above.

   エラーの共通の原因があるとき、スペースは MAIL コマンドの FROM または、
   RCPT コマンドの TO に続くコロンのどちらの側でも許容されていないこと
   に注目する価値があります。

   The third step in the procedure is the DATA command (or some
   alternative specified in a service extension).

   手順の３つめのステップは DATA コマンド (もしくはなにかサービス拡張で
   決められてそれにかわるもの)です。

      DATA <CRLF>

   If accepted, the SMTP server returns a 354 Intermediate reply and
   considers all succeeding lines up to but not including the end of
   mail data indicator to be the message text.  When the end of text is
   successfully received and stored, the SMTP-receiver sends a "250 OK"
   reply.

   もし受け入れられたのならば、SMTP サーバは 354 中間応答を返し、すべて
   の後に続く行をメッセージテキストとして見なしますが、メールデータの最
   後の指示は含みません。文の終わりが受信され、保存に成功したとき、
   SMTP-receiver は "250 OK" を応答します。

   Since the mail data is sent on the transmission channel, the end of
   mail data must be indicated so that the command and reply dialog can
   be resumed.  SMTP indicates the end of the mail data by sending a
   line containing only a "." (period or full stop).  A transparency
   procedure is used to prevent this from interfering with the user's
   text (see Section 4.5.2).

   メールデータが伝送チャネルで送信されてから、メールデータの最後はコマ
   ンドと応答の会話が再び開始することができるようにするために示されなけ
   ればなりません。SMTP はメールデータの最後を "." だけの行を送信するこ
   とによって示します。透過性手順はユーザのテキストで阻害することからこ
   れを防止するのに使われます(Section 4.5.2を見てください)。

   The end of mail data indicator also confirms the mail transaction and
   tells the SMTP server to now process the stored recipients and mail





Klensin                     Standards Track                    [Page 20]

RFC 5321                          SMTP                      October 2008


   data.  If accepted, the SMTP server returns a "250 OK" reply.  The
   DATA command can fail at only two points in the protocol exchange:

   メールデータの最後のインディケータもまたメールトランザクションを確定
   し、SMTPサーバに現在の処理が受信者とメールデータを保管するように伝
   えます。もし受け入れられれば SMTP サーバは "250 OK" の応答を返します。
   DATA コマンドはプロトコル交換の２点でだけ失敗することができます。

   If there was no MAIL, or no RCPT, command, or all such commands were
   rejected, the server MAY return a "command out of sequence" (503) or
   "no valid recipients" (554) reply in response to the DATA command.
   If one of those replies (or any other 5yz reply) is received, the
   client MUST NOT send the message data; more generally, message data
   MUST NOT be sent unless a 354 reply is received.

   MAIL および RCPT コマンドがない、またはすべてのそのようなコマンド拒
   否された場合、サーバは "command out of sequence" (503) または
   "novalid recipients" (554) の応答をデータコマンドに対する応答で返し
   ても構いません(MAY)。もしそれらの応答の一つ (もしくはどんな 5yz のリ
   プライ)受信された場合、クライアントはメッセージデータを送信してはい
   けません(MUST NOT)。より一般的に、354 の応答を受信することなしにメッ
   セージデータを送信してはいけません(MUST NOT)。


   If the verb is initially accepted and the 354 reply issued, the DATA
   command should fail only if the mail transaction was incomplete (for
   example, no recipients), if resources were unavailable (including, of
   course, the server unexpectedly becoming unavailable), or if the
   server determines that the message should be rejected for policy or
   other reasons.

   もし動詞が当初は受け入れられ、354 応答を発行した場合、DATA コマンド
   は メールトランザクションが不完全な場合 (例えば、受信者がいないな
   ど)や、リソースが利用できない(もちろんサーバが予期せずに利用できない
   状態になるのを含む)場合、もしくは サーバが メッセージをポリシーまた
   はその他の理由で拒否すべきか決定する場合にだけ失敗すべきです。

   However, in practice, some servers do not perform recipient
   verification until after the message text is received.  These servers
   SHOULD treat a failure for one or more recipients as a "subsequent
   failure" and return a mail message as discussed in Section 6 and, in
   particular, in Section 6.1.  Using a "550 mailbox not found" (or
   equivalent) reply code after the data are accepted makes it difficult
   or impossible for the client to determine which recipients failed.

   しかしながら、実際、いくつかのサーバで受信者の確認はメッセージテキ
   ストを受信するまで動作しません。これらのサーバは ひとつまたはそれ以
   上の受信者に対する失敗を "subsequent failure" として扱い、そしてメー
   ルメッセージを Section 6 (詳細は Section 6.1) で 考察したように返す
   べきです(SHOULD)。データを受信した後の "550 mail box not found" 応
   答コード(もしくは同等のもの) の使用はクライアントが受信者が障害になっ
   たかどうかを判断するのを不可能にしたり、難解にしたります。


   When the RFC 822 format ([28], [4]) is being used, the mail data
   include the header fields such as those named Date, Subject, To, Cc,
   and From.  Server SMTP systems SHOULD NOT reject messages based on
   perceived defects in the RFC 822 or MIME (RFC 2045 [21]) message
   header section or message body.  In particular, they MUST NOT reject
   messages in which the numbers of Resent-header fields do not match or
   Resent-to appears without Resent-from and/or Resent-date.

   RFC 822 形式([28],[4])では Date、Subject、To、Cc 及び From と呼ばれ
   るようなヘッダフィールドが含まれたメールデータが使われています。サー
   バ SMTP システムは RFC 822 や MIME (RFC 2045[21) メッセージヘッダも
   しくはメッセージ本文の異常を検知することで拒否すべきではありません
   (SHOULD NOT)。具体的に、それらはResent-header フィールドの数が一致し
   なかったり、Resent-to が Resent-from や Resent-date なしで現われたり
   するメッセージを拒否してはいけません(MUST NOT)。

   Mail transaction commands MUST be used in the order discussed above.

   メールトランザクションコマンドは前述した順番で使用されなければなりま
   せん(MUST)。

3.4.  Forwarding for Address Correction or Updating
3.4.  アドレスの変更や更新のための転送

   Forwarding support is most often required to consolidate and simplify
   addresses within, or relative to, some enterprise and less frequently
   to establish addresses to link a person's prior address with a
   current one.  Silent forwarding of messages (without server
   notification to the sender), for security or non-disclosure purposes,
   is common in the contemporary Internet.

   転送サポートはいくつかの内部および関連するいくつかの企業でアドレスの
   合併や単純化のためとたまに現在の優先アドレスにリンクするようなアドレ
   スをつくるために最もよく必要とされます。セキュリティまたは非公開目的
   のために、寡黙なメッセージの転送(送信者へのサーバ通知なしの)は今日の
   インターネットではよく知られています。
  
   In both the enterprise and the "new address" cases, information
   hiding (and sometimes security) considerations argue against exposure
   of the "final" address through the SMTP protocol as a side effect of
   the forwarding activity.  This may be especially important when the



Klensin                     Standards Track                    [Page 21]

RFC 5321                          SMTP                      October 2008


   final address may not even be reachable by the sender.  Consequently,
   the "forwarding" mechanisms described in Section 3.2 of RFC 821, and
   especially the 251 (corrected destination) and 551 reply codes from
   RCPT must be evaluated carefully by implementers and, when they are
   available, by those configuring systems (see also Section 7.4).

   企業と "新アドレス" 両方で、SMTP プロトコルを通して "最後の" アドレ
   スの露出に対する情報隠蔽(ときどきセキュリティ)の考慮は転送動作の副作
   用として議論されます。最終アドレスが送信者によって到達可能でさえない
   かもしれないときにこれは特に重要です。その結果として、"転送"メカニズ
   ムは RFC 821 の Section 3.2 で述べられていて、 特に RCPT からの
   251(修正された宛て先) と 551 の応答コードは実装者、および可能である
   ならばシステムを設定しているそれらの人によって気をつけて判断されなけ
   ればいけません。

   In particular:
   とりわけ

   o  Servers MAY forward messages when they are aware of an address
      change.  When they do so, they MAY either provide
      address-updating information with a 251 code, or may forward
      "silently" and return a 250 code.  However, if a 251 code is
      used, they MUST NOT assume that the client will actually update
      address information or even return that information to the user.

      サーバがアドレス変更を承知しているとき、サーバはメッセージを転送
      しても構いません(MAY)。そのとき、サーバは 251 コードでアドレスを
      更新することをしてもいいし、もしくは "無言で" 転送して 250 コード
      を返してもよい(MAY)。しかしながら、251 コードが用いる場合、サーバ
      はクライアントが実際にアドレス情報を更新したり、もしくはユーザー
      に情報を返すことを前提としてはいけない(MUST NOT)。


   Alternately,
   かわりに

   o  Servers MAY reject messages or return them as non-deliverable when
      they cannot be delivered precisely as addressed.  When they do so,
      they MAY either provide address-updating information with a 551
      code, or may reject the message as undeliverable with a 550 code
      and no address-specific information.  However, if a 551 code is
      used, they MUST NOT assume that the client will actually update
      address information or even return that information to the user.

      サーバはメッセージを正確な宛先に配送することができないとき、配送
      不能のとしてメッセージを拒否しても、もしくはそれらを返しても構い
      ません(MAY)。そのとき、サーバは 551 コードでアドレス更新情報を示
      すか、もしくは 550 コードとアドレスの詳細な情報はなしに配送不能と
      してメッセージを拒否しても構いません(MAY)。

   SMTP server implementations that support the 251 and/or 551 reply
   codes SHOULD provide configuration mechanisms so that sites that
   conclude that they would undesirably disclose information can disable
   or restrict their use.

   251 や 551 応答コードをサポートする SMTP サーバ実装はそれらの情報公
   開することを望ましくないだろう、と結論づけたサイトがそれらの使用を無
   効もしくは制限することができるように、設定メカニズムを用意すべきです
   (SHOULD)。


3.5.  Commands for Debugging Addresses
3.5.  アドレスをデバッグするのためのコマンド

3.5.1.  Overview
3.5.1.  概要

   SMTP provides commands to verify a user name or obtain the content of
   a mailing list.  This is done with the VRFY and EXPN commands, which
   have character string arguments.  Implementations SHOULD support VRFY
   and EXPN (however, see Section 3.5.2 and Section 7.3).

   SMTP はユーザー名を確認したり、メーリングリストの内容を得るコマンド
   を用意します。これは文字列の引数を持った VRFY と EXPN コマンドで実現
   されます。実装は VRFY と EXPN をサポートするべきです(SHOLD)(でも、
   Section 3.5.2 と Section 7.3をみてください)。

   For the VRFY command, the string is a user name or a user name and
   domain (see below).  If a normal (i.e., 250) response is returned,
   the response MAY include the full name of the user and MUST include
   the mailbox of the user.  It MUST be in either of the following
   forms:

   VRFY コマンドにとって文字列はユーザー名、もしくはユーザー名とドメイ
   ンです(下記参照)。もし通常(すなわち 250)の応答が返されたら、応答はユー
   ザのフルネームを含んでも構わない(MAY)、そしてユーザーのメールボック
   スを含まなければいけません(MUST)。以下の形式のどちらかでなければいけ
   ません(MUST)。

      User Name <local-part@domain>
      local-part@domain




Klensin                     Standards Track                    [Page 22]

RFC 5321                          SMTP                      October 2008


   When a name that is the argument to VRFY could identify more than one
   mailbox, the server MAY either note the ambiguity or identify the
   alternatives.  In other words, any of the following are legitimate
   responses to VRFY:

   VRFY のための引数が一つのメールボックス以上を確認することができたと
   き、サーバはあいまいと注意しても、選択肢を示してもどちらでも構いませ
   ん(MAY)。いいかえれば、以下はどれも合法的な応答です。

      553 User ambiguous

   or

      553- Ambiguous; Possibilities are
      553-Joe Smith <jsmith@foo.com>
      553-Harry Smith <hsmith@foo.com>
      553 Melvin Smith <dweep@foo.com>

   or

      553-Ambiguous; Possibilities
      553- <jsmith@foo.com>
      553- <hsmith@foo.com>
      553 <dweep@foo.com>

   Under normal circumstances, a client receiving a 553 reply would be
   expected to expose the result to the user.  Use of exactly the forms
   given, and the "user ambiguous" or "ambiguous" keywords, possibly
   supplemented by extended reply codes, such as those described in RFC
   3463 [25], will facilitate automated translation into other languages
   as needed.  Of course, a client that was highly automated or that was
   operating in another language than English might choose to try to
   translate the response to return some other indication to the user
   than the literal text of the reply, or to take some automated action
   such as consulting a directory service for additional information
   before reporting to the user.

   通常の状況下で、553 応答を受信しているクライアントはユーザーに結果を
   見せると思われます。正確な形式を使用することと、 "user ambiguous" も
   しくは "ambigous" キーワードを使用することはおそらく RFC3463 [25] に
   記載されているような拡張応答コードによって補足されます。それは、自動
   化された他の言語への翻訳が必要ならば簡単にするでしょう。もちろん、高
   度に自動化されたもしくは英語以外で運転しているクライアントは応答を翻
   訳したり、ユーザーに対して応答テキスト以外の通知を返したり、もしくは
   ユーザーに報告する前に情報を追加するのにディレクトリサービスのような
   ものに問い合わせるような自動化された処理を選択しても構いません。


   For the EXPN command, the string identifies a mailing list, and the
   successful (i.e., 250) multiline response MAY include the full name
   of the users and MUST give the mailboxes on the mailing list.

   EXPN コマンドにとって文字列はメーリングリストを示します、そして、成
   功した(すなわち、250)複数行応答はユーザーのフルネームを含んでも構い
   ません(MAY)、そしてメーリングリスト上のメールボックスを与えなければ
   なりません(MUST)。


   In some hosts, the distinction between a mailing list and an alias
   for a single mailbox is a bit fuzzy, since a common data structure
   may hold both types of entries, and it is possible to have mailing
   lists containing only one mailbox.  If a request is made to apply
   VRFY to a mailing list, a positive response MAY be given if a message
   so addressed would be delivered to everyone on the list, otherwise an
   error SHOULD be reported (e.g., "550 That is a mailing list, not a
   user" or "252 Unable to verify members of mailing list").  If a
   request is made to expand a user name, the server MAY return a





Klensin                     Standards Track                    [Page 23]

RFC 5321                          SMTP                      October 2008


   positive response consisting of a list containing one name, or an
   error MAY be reported (e.g., "550 That is a user name, not a mailing
   list").

   いくらかのホストでは、両方の登録の型が共通のデータ構造をもつかもしれ
   ず、メーリグリストを一つだけのメールボックスでもつことが可能であるこ
   とから、一つのメールボックスに対するメーリングリストと別名の区別が少
   しあいまいです。要求がメーリングリストへの VRFY の適用だった場合、肯
   定的な応答で配送されるであろうリスト全員に宛てられていると仮定したメッ
   セージを与えても構いません(MAY)、そうでなければエラーを報告すべきで
   す(SHOLD)(例えば、 "550 That is a mailing list, not a user" や"252
   Unable to verify members of mailing list")。  もし要求がユーザー名へ
   の expand の場合、サーバは肯定的な一人の名前を含むリストから成る応答
   を返しても、エラーを報告しても構いません(MAY)(例えば "550 That is a
   user name, not a mailing list")。




   In the case of a successful multiline reply (normal for EXPN),
   exactly one mailbox is to be specified on each line of the reply.
   The case of an ambiguous request is discussed above.

   成功した複数行の応答(EXPNでは通常)の場合、正確にひとつのメールボック
   スはそれぞれの応答の行で示されます。あいまいな要求の場合は前述したと
   おりです。

   "User name" is a fuzzy term and has been used deliberately.  An
   implementation of the VRFY or EXPN commands MUST include at least
   recognition of local mailboxes as "user names".  However, since
   current Internet practice often results in a single host handling
   mail for multiple domains, hosts, especially hosts that provide this
   functionality, SHOULD accept the "local-part@domain" form as a "user
   name"; hosts MAY also choose to recognize other strings as "user
   names".

   "ユーザー名" は あいまいな言葉で意図的につかわれていました。VRFY も
   しくは EXPN コマンドの実装はすくなくとも"ユーザー名"としてのローカル
   のメールボックスの認識を含まなければなりません(MUST)。しかしながら、
   今日のインターネットの実際ではよく ひとつのホストが複数のドメイン、
   ホスト、本機能を供給する特定のホストを扱っているので、
   "local-part@domain" 形式も "username" と同じように受け入れるべきです
   (SHOULD)。



   The case of expanding a mailbox list requires a multiline reply, such
   as:
   メールボックスリストの展開は複数行の応答をこのように要求します。

      C: EXPN Example-People
      S: 250-Jon Postel <Postel@isi.edu>
      S: 250-Fred Fonebone <Fonebone@physics.foo-u.edu>
      S: 250 Sam Q. Smith <SQSmith@specific.generic.com>

   or

      C: EXPN Executive-Washroom-List
      S: 550 Access Denied to You.

   The character string arguments of the VRFY and EXPN commands cannot
   be further restricted due to the variety of implementations of the
   user name and mailbox list concepts.  On some systems, it may be
   appropriate for the argument of the EXPN command to be a file name
   for a file containing a mailing list, but again there are a variety
   of file naming conventions in the Internet.  Similarly, historical
   variations in what is returned by these commands are such that the
   response SHOULD be interpreted very carefully, if at all, and SHOULD
   generally only be used for diagnostic purposes.

   VRFY と EXPN コマンドの文字列引数はユーザー名とメールボックスリスト
   の概念の実装による相違があるので、さらに制限することはできません。い
   くつかのシステムでは、メーリングリストを含んだファイル名は EXPN コマ
   ンドの引数に適切かもしれません、しかしインターネットで通常使われてい
   るファイルの命名には様々な種類があります。同様にそのようなこれらのコ
   マンドによって返される古い種類がそうであり、その応答はとても注意深く
   解釈すべきです(SHOULD)、そして一般的に診断の目的のみで使用されるべき
   です(SHOULD)。
   

3.5.2.  VRFY Normal Response
3.5.2.  VRFY の通常応答

   When normal (2yz or 551) responses are returned from a VRFY or EXPN
   request, the reply MUST include the <Mailbox> name using a
   "<local-part@domain>" construction, where "domain" is a fully-
   qualified domain name.  In circumstances exceptional enough to
   justify violating the intent of this specification, free-form text
   MAY be returned.  In order to facilitate parsing by both computers



Klensin                     Standards Track                    [Page 24]

RFC 5321                          SMTP                      October 2008


   and people, addresses SHOULD appear in pointed brackets.  When
   addresses, rather than free-form debugging information, are returned,
   EXPN and VRFY MUST return only valid domain addresses that are usable
   in SMTP RCPT commands.  Consequently, if an address implies delivery
   to a program or other system, the mailbox name used to reach that
   target MUST be given.  Paths (explicit source routes) MUST NOT be
   returned by VRFY or EXPN.

   通常の (2yz や 551) 応答が VRFY もしくは EXPN 要求から返されるとき、
   応答は "<local-part@domain>" の構造をつかっている <Mailbox> 名を含ま
   なければいけません(MUST)。ここで "domain" は 完全修飾ドメイン名です。
   例外として、本仕様の意図に反する正当な行為として自由な形式のテキスト
   が返されるかもしれません(MAY)。コンピュータや人による解析を楽にする
   ために、アドレスは角括弧(注:<>)の中にあるべき(SHOULD)です。自由な形
   式のデバッグ情報はよりはむしろ、アドレスが返されるとき、 EXPN と
   VRFY は SMTP RCPT コマンドで使うことができる有効なドメインアドレスだ
   けを返さなければいけません(MUST)。その結果、アドレスがプログラムもし
   くはその他のシステムへ配達されることを示している場合、目的地に到達す
   るために用いられるメールボックス名は与えられなくてはいけません
   (MUST)。経路(つまりソースルート)は VRFY もしくは EXPN によって返され
   てはいけません(MUST NOT)。


   Server implementations SHOULD support both VRFY and EXPN.  For
   security reasons, implementations MAY provide local installations a
   way to disable either or both of these commands through configuration
   options or the equivalent (see Section 7.3).  When these commands are
   supported, they are not required to work across relays when relaying
   is supported.  Since they were both optional in RFC 821, but VRFY was
   made mandatory in RFC 1123 [3], if EXPN is supported, it MUST be
   listed as a service extension in an EHLO response.  VRFY MAY be
   listed as a convenience but, since support for it is required, SMTP
   clients are not required to check for its presence on the extension
   list before using it.

   サーバ実装は VRFY とEXPN 両方ともサポートすべきです(SHOULD)。安全上
   の理由から、実装は設定オプションもしくは同等のものを通して(Section
   7.3 を見てください)これらのコマンドのどちらか、もしくは両方を無効に
   するような、ローカルインストール方法を提供したほうがよいです(MAY)。
   これらのコマンドがサポートされている場合、中継がサポートされていても
   中継をまたいで要求されません。RFC 821 では両方ともオプションであるが、
   VRFY は RFC 1123 [3] では義務化され、EXPN がサポートされるならば、
   EHLO の応答にサービス拡張としてリストされなければならない(MUST)。サ
   ポートする必要であれば、VRFY は便宜上リストされても構わない(MAY)が、
   SMTP クライアントはそれを使用する前に拡張リスト上でそれの存在をチェッ
   クすること求められない。

3.5.3.  Meaning of VRFY or EXPN Success Response
3.5.3.  VRFY もしくは EXPN の成功応答の意味

   A server MUST NOT return a 250 code in response to a VRFY or EXPN
   command unless it has actually verified the address.  In particular,
   a server MUST NOT return 250 if all it has done is to verify that the
   syntax given is valid.  In that case, 502 (Command not implemented)
   or 500 (Syntax error, command unrecognized) SHOULD be returned.  As
   stated elsewhere, implementation (in the sense of actually validating
   addresses and returning information) of VRFY and EXPN are strongly
   recommended.  Hence, implementations that return 500 or 502 for VRFY
   are not in full compliance with this specification.

   サーバは実際にアドレスを確認することをしないで VRFY もしくは EXPN へ
   の応答で 250 コードを返してはいけません(MUST NOT)。特に、サーバは与
   えられた構文が有効であることを確かめたことが全てならば 250 を返して
   はいけません(MUST NOT)。そのようなケースでは、502 (Command not
   implemented) もしくは 500(Syntax error, command unrecognized) を返す
   べきです (SHOULD)。別記の通り、VRFY と EXPN の実装(実際に有効なアド
   レスで、情報を返すという意味)は強く推奨されます。よって、VRFY で
   500 もしくは 502 を返す実装は本仕様に全面準拠していません。

   There may be circumstances where an address appears to be valid but
   cannot reasonably be verified in real time, particularly when a
   server is acting as a mail exchanger for another server or domain.
   "Apparent validity", in this case, would normally involve at least
   syntax checking and might involve verification that any domains
   specified were ones to which the host expected to be able to relay
   mail.  In these situations, reply code 252 SHOULD be returned.  These
   cases parallel the discussion of RCPT verification in Section 2.1.
   Similarly, the discussion in Section 3.4 applies to the use of reply
   codes 251 and 551 with VRFY (and EXPN) to indicate addresses that are
   recognized but that would be forwarded or rejected were mail received
   for them.  Implementations generally SHOULD be more aggressive about
   address verification in the case of VRFY than in the case of RCPT,
   even if it takes a little longer to do so.

   アドレスは有効であるように思われますが、とりわけサーバがその他のサー
   バやドメインのメールエクスチェンジャーとして動作しているときに、リア
   ルタイムで無理なく確認されることができない状況があるかもしれません。
   このケースでは、"明らかな有効性"は通常すくなくとも構文のチェックを含
   み、いくつかの示されたドメインはメールを中継することが予想されるホス
   トの一つであることの確認を含むでしょう。これらの状況で、252 のリプラ
   イコードは返されるべきです(SHOULD)。これらのケースは Section 2.1 で
   の RCPT 確認の記述と同等です。同じように、解釈されたが転送もしくは拒
   否された受信したメールのアドレスに対する VRFY(とEXPN)で251 と 551 応
   答コードの使用は 3.4 での記述が適用されます。実装は通常アドレス確認
   について、少々時間をとられたとしても RCPT より VRFY で積極的であるべ
   きです(SHOULD)。







Klensin                     Standards Track                    [Page 25]

RFC 5321                          SMTP                      October 2008


3.5.4.  Semantics and Applications of EXPN
3.5.4.  EXPN の構文と応用

   EXPN is often very useful in debugging and understanding problems
   with mailing lists and multiple-target-address aliases.  Some systems
   have attempted to use source expansion of mailing lists as a means of
   eliminating duplicates.  The propagation of aliasing systems with
   mail on the Internet for hosts (typically with MX and CNAME DNS
   records), for mailboxes (various types of local host aliases), and in
   various proxying arrangements has made it nearly impossible for these
   strategies to work consistently, and mail systems SHOULD NOT attempt
   them.

   EXPN はデバッグでメーリングリストと複数の対象としてアドレスの別名の
   問題を理解するのにはとても有効です。いくつかのシステムは重複を取り除
   く手段としてメーリングリストの拡張を用いることを試みます。ホスト名
   (通常、MX と CNAME の DNS レコードでの)やメールボックス(ローカルホス
   ト別名の様々な種類)、及び、様々な代理処理内でインターネット上のメー
   ルと一体になった別名システムが広がってしまうことは、これらの戦略にとっ
   て矛盾のない動作をほぼ不可能にします、そしてメールシステムはそれらを
   試すべきではありません(SHOULD NOT)。


3.6.  Relaying and Mail Routing
3.6.  中継とメールルーティング

3.6.1.  Source Routes and Relaying
3.6.1.  ソースルートと中継

   In general, the availability of Mail eXchanger records in the domain
   name system (RFC 1035 [2], RFC 974 [12]) makes the use of explicit
   source routes in the Internet mail system unnecessary.  Many
   historical problems with the interpretation of explicit source routes
   have made their use undesirable.  SMTP clients SHOULD NOT generate
   explicit source routes except under unusual circumstances.  SMTP
   servers MAY decline to act as mail relays or to accept addresses that
   specify source routes.  When route information is encountered, SMTP
   servers MAY ignore the route information and simply send to the final
   destination specified as the last element in the route and SHOULD do
   so.  There has been an invalid practice of using names that do not
   appear in the DNS as destination names, with the senders counting on
   the intermediate hosts specified in source routing to resolve any
   problems.  If source routes are stripped, this practice will cause
   failures.  This is one of several reasons why SMTP clients MUST NOT
   generate invalid source routes or depend on serial resolution of
   names.

   一般的には、ドメインネームシステム(RFC 1035 [2], RFC 974 [12])でのメー
   ルエクスチェンジャレコードの活用はインターネットメールシステムでの明
   示的なソースルートの使用を不必要にします。多くの明示的なソースルート
   の解釈からくる歴史的な問題がそれらを望ましくないものにしました。
   SMTP クライアントは特殊な状況を除き明示的なソースルートを発生される
   べきではありません(SHOULD NOT)。SMTP サーバは中継として動作すること
   やソースルートを指定しているアドレスを受けいれることを拒否しても構い
   ません(MAY)。ルート情報にでくわしたとき、SMTP サーバはルート情報を無
   視することができ(MAY)、そして単にルート情報の最後の要素で示された最
   終到達地へ送信すべきです(SHOULD)。何かの問題を解決するためのソールルー
   トで示された中間ホストを期待している送信者と同じで、到達地の名前とし
   て DNS に出てきていない名前を使うのは無効な動作です。もしソースルー
   トが取り除かれたならば、この動作は失敗するでしょう。これはSMTP クラ
   イアントが無効なソースルートを生成、もしくは連続した名前の解決に頼っ
   てしてはいけない(MUST NOT)の理由のうちの一つです。

   When source routes are not used, the process described in RFC 821 for
   constructing a reverse-path from the forward-path is not applicable
   and the reverse-path at the time of delivery will simply be the
   address that appeared in the MAIL command.

   ソースルートが用いられないとき、 RFC 821 で記述された forward-path
   から reverse-path を生成する手順は適用せず、配送時の reverse-path は
   単に MAIL コマンドで表わされたアドレスです。

3.6.2.  Mail eXchange Records and Relaying
3.6.2.  メールエクスチェンジレコードと中継

   A relay SMTP server is usually the target of a DNS MX record that
   designates it, rather than the final delivery system.  The relay
   server may accept or reject the task of relaying the mail in the same
   way it accepts or rejects mail for a local user.  If it accepts the
   task, it then becomes an SMTP client, establishes a transmission
   channel to the next SMTP server specified in the DNS (according to
   the rules in Section 5), and sends it the mail.  If it declines to


Klensin                     Standards Track                    [Page 26]

RFC 5321                          SMTP                      October 2008


   relay mail to a particular address for policy reasons, a 550 response
   SHOULD be returned.

   中継 SMTP サーバは通常、最終的な配送システムよりも、指定されたDNS の
   MX レコードが対象です。中継サーバはメールの中継をローカルユーザに対
   するそれと同じ方法で受け入れるか、拒否するでしょう。もしメールが受け
   入れられたら、それは SMTP クライアントになり、DNS(Section 5 でのルー
   ルによると)により示された次の SMTP サーバに対して伝送チャネルを確立
   し、SMTP サーバにメールを送ります。もしポリシー的な理由で特定のアド
   レスへのメールの中継を拒否した場合、550 の応答が返されるべきです
   (SHOULD)。

   This specification does not deal with the verification of return
   paths for use in delivery notifications.  Recent work, such as that
   on SPF [29] and DKIM [30] [31], has been done to provide ways to
   ascertain that an address is valid or belongs to the person who
   actually sent the message.  A server MAY attempt to verify the return
   path before using its address for delivery notifications, but methods
   of doing so are not defined here nor is any particular method
   recommended at this time.

   本仕様は配送通知に用いるための返信パスの確認には対応していません。
   SPF [29] や DKIM [30] のような最近の動作はアドレスが有効であること、
   もしくは実際にメッセージを送信した人の所有物であることを確実にする方
   法を規定しています。サーバは配送通知のためにそのアドレスが用いられる
   以前にリターンパスを確認することを試しても構いません(MAY)。しかし、
   今回はここでそれをすることの方法を定義することも、特定の方法を薦める
   こともしていません。


3.6.3.  Message Submission Servers as Relays
3.6.3.  中継としてのメッセージサブミッションサーバ

   Many mail-sending clients exist, especially in conjunction with
   facilities that receive mail via POP3 or IMAP, that have limited
   capability to support some of the requirements of this specification,
   such as the ability to queue messages for subsequent delivery
   attempts.  For these clients, it is common practice to make private
   arrangements to send all messages to a single server for processing
   and subsequent distribution.  SMTP, as specified here, is not ideally
   suited for this role.  A standardized mail submission protocol has
   been developed that is gradually superseding practices based on SMTP
   (see RFC 4409 [18]).  In any event, because these arrangements are
   private and fall outside the scope of this specification, they are
   not described here.

   特に POP3 もしくは IMAP によってメールを受信する機能を合併している多
   くのメール送信クライアントが存在しています。それらは次の送信のために
   メッセージをキューイングするような本仕様の要求のいくつかをサポートす
   る限定された機能を持っています。これらのクライアントにとってすべての
   メッセージを、メールを処理して次の送信を行うひとつのサーバに送信する
   という特定の用途向けに処理された共通の動作があります。本書で仕様づけ
   られた SMTP はこの役割のためには理想的ではありません。規格化されたメー
   ルサブミッションプロトコルがあります(RFC 4409[18]を見てください)。ど
   のみち、これらの処理は特定の用途向けであり、本仕様の範囲からはずれる
   ので、それらはここでは記載されていません。
   
   It is important to note that MX records can point to SMTP servers
   that act as gateways into other environments, not just SMTP relays
   and final delivery systems; see Sections 3.7 and 5.

   MX レコードがただの SMTP 中継だけでなく最終の配信システムである他の
   環境へのゲートウェイとして動作する SMTP サーバを指すことができること
   に言及するのは重要です。Section 3.7 と 5を見てください。

   If an SMTP server has accepted the task of relaying the mail and
   later finds that the destination is incorrect or that the mail cannot
   be delivered for some other reason, then it MUST construct an
   "undeliverable mail" notification message and send it to the
   originator of the undeliverable mail (as indicated by the reverse-
   path).  Formats specified for non-delivery reports by other standards
   (see, for example, RFC 3461 [32] and RFC 3464 [33]) SHOULD be used if
   possible.

   もし SMTP サーバがメール中継の仕事を受け入れ、あとで到達地が正しくな
   い、もしくはメールが何らかの理由で配送されることができないとわかった
   とき、"配送不可能メール" 通知メッセージを生成し、配送不可能メール
   (reverse-path によって示されている)を送信元に送らなくてはいけません
   (MUST)。配送不可レポートの形式は他の標準で定められた(例えば RFC
   3461 [32] と RFC 3464 [33] を見てください)を可能であれば用いられるべ
   きです(SHOULD)。

   This notification message must be from the SMTP server at the relay
   host or the host that first determines that delivery cannot be
   accomplished.  Of course, SMTP servers MUST NOT send notification
   messages about problems transporting notification messages.  One way
   to prevent loops in error reporting is to specify a null reverse-path
   in the MAIL command of a notification message.  When such a message
   is transmitted, the reverse-path MUST be set to null (see



Klensin                     Standards Track                    [Page 27]

RFC 5321                          SMTP                      October 2008


   Section 4.5.5 for additional discussion).  A MAIL command with a null
   reverse-path appears as follows:

   この通知メッセージは SMTP 中継ホストもしくは最初に配送ができないと決
   定したホストで生成するはずです。もちろん、SMTP サーバは通知メッセー
   ジの転送の問題については通知メッセージを送信してはいけません(MUST
   NOT)。エラー報告でループを防止する一つの方法は通知メッセージのMAIL
   コマンドにおいて reverse-path にヌルを指定することです。そのようなメッ
   セージが送信されたとき、reverse-path はヌルに設定されなくてはいけま
   せん(MUST)(詳細はSection 4.5.5 を見てください)。ヌル reverse-path の
   MAIL コマンドは以下のように表わされます。

      MAIL FROM:<>

   As discussed in Section 6.4, a relay SMTP has no need to inspect or
   act upon the header section or body of the message data and MUST NOT
   do so except to add its own "Received:" header field (Section 4.4)
   and, optionally, to attempt to detect looping in the mail system (see
   Section 6.3).  Of course, this prohibition also applies to any
   modifications of these header fields or text (see also Section 7.9).

   Section 6.4 に記述があるように、中継 SMTP は ヘッダ部分やメッセージ
   の本文を検査する必要や、影響を受ける必要はありません。そして、自身の
   "Received:" ヘッダフィールド (Section 4.4と)と、オプションでメールシ
   ステムでのループを検出しようとする(Section 6.3 を見てください)ことを
   除いてそうしてはいけません(MUST NOT)。もちろん、この規制はヘッダフィー
   ルドやテキストのどんな変更することにも適用されます(Section 7.9も見て
   ください)。


3.7.  Mail Gatewaying
3.7.  メールゲートウェイング

   While the relay function discussed above operates within the Internet
   SMTP transport service environment, MX records or various forms of
   explicit routing may require that an intermediate SMTP server perform
   a translation function between one transport service and another.  As
   discussed in Section 2.3.10, when such a system is at the boundary
   between two transport service environments, we refer to it as a
   "gateway" or "gateway SMTP".

   上記で述べた中継機能はインターネットの SMTP 転送サービス環境の中で動
   作します。MX レコードやいろいろな決められたルーティングの形式はある
   転送サービスと、もう一つのそれの間で翻訳機能を持つ中間の SMTP サーバ
   を必要とするでしょう。Section 2.3.10 で述べられたように、そのような
   二つの転送サービス環境間の境界にあるシステムの場合、我々はそれを "ゲー
   トウェイ" もしくは "ゲートウェイ SMTP" と呼びます。

   Gatewaying mail between different mail environments, such as
   different mail formats and protocols, is complex and does not easily
   yield to standardization.  However, some general requirements may be
   given for a gateway between the Internet and another mail
   environment.

   そのようにメール形式とプロトコルが異なるメール環境間でのメールをゲー
   トウェイすることは複雑で容易に標準化できない。しかしながら、インター
   ネットとその他の環境間のゲートウェイに対するいくらかの一般的な要求が
   あるでしょう。

3.7.1.  Header Fields in Gatewaying
3.7.1.  ゲートウェイングでのヘッダフィールド

   Header fields MAY be rewritten when necessary as messages are
   gatewayed across mail environment boundaries.  This may involve
   inspecting the message body or interpreting the local-part of the
   destination address in spite of the prohibitions in Section 6.4.

   ヘッダフィールドはメール環境の境界をまたぐときに必要であるならば上書
   きされても構いません(MAY)。これは Section 6.4 での禁止事項にかかわら
   ずメッセージ本文を検査したりもしくは宛て先アドレスのローカルパートを
   解釈したりすることを必要とするだろう。
   
   Other mail systems gatewayed to the Internet often use a subset of
   the RFC 822 header section or provide similar functionality with a
   different syntax, but some of these mail systems do not have an
   equivalent to the SMTP envelope.  Therefore, when a message leaves
   the Internet environment, it may be necessary to fold the SMTP
   envelope information into the message header section.  A possible
   solution would be to create new header fields to carry the envelope
   information (e.g., "X-SMTP-MAIL:" and "X-SMTP-RCPT:"); however, this
   would require changes in mail programs in foreign environments and
   might risk disclosure of private information (see Section 7.2).

   その他のインターネットへゲートウェイされるメールシステムはよく RFC
   822 ヘッダ部分のサブセットを用いるか、もしくは異なる構文で似たような
   機能を規定する、しかしこれらのメールシステムのいくつかは SMTP のエン
   ベロープと同等のものを持っていません。それ故に、メッセージがインター
   ネット環境から出ていくとき、それはメッセージヘッダ部分へ SMTP エンベ
   ロープ情報を組み込む必要があるでしょう。ありうる解決方法はエンベロー
   プ情報を運ぶための新しいメッセージヘッダを生成することである(たとえ
   ば "X-SMTP-MAIL" と "X-SMTP-RCPT")、しかしながら、この方法は外部環境
   のメールプログラムを変更する必要があるでしょう。そして、内部の情報
   (Section 7.2 を見てください)の公開する危険があります。






Klensin                     Standards Track                    [Page 28]

RFC 5321                          SMTP                      October 2008


3.7.2.  Received Lines in Gatewaying
3.7.2.  ゲートウェイで受信した行

   When forwarding a message into or out of the Internet environment, a
   gateway MUST prepend a Received: line, but it MUST NOT alter in any
   way a Received: line that is already in the header section.

   メッセージをインターネット環境の中もしくは外に転送するとき、ゲートウェ
   イは Received: 行を追加しなければならない(MUST)が、どのような方法で
   もすでにヘッダ部分にある Received: 行を変更してはいけません(MUST
   NOT)。

   "Received:" header fields of messages originating from other
   environments may not conform exactly to this specification.  However,
   the most important use of Received: lines is for debugging mail
   faults, and this debugging can be severely hampered by well-meaning
   gateways that try to "fix" a Received: line.  As another consequence
   of trace header fields arising in non-SMTP environments, receiving
   systems MUST NOT reject mail based on the format of a trace header
   field and SHOULD be extremely robust in the light of unexpected
   information or formats in those header fields.

   他の環境から発生したメッセージの "Received:" ヘッダフィールドは本仕
   様とは正確に一致はしないでしょう。しかしながら、最も重要な
   Received: 行の利用法はメールの失敗をデバッグすることにあるでしょう。
   そしてこのデバッグは Received: 行を"修正"しようとする善意あるゲート
   ウェイによって大幅に妨害されるでしょう。SMTP ではない環境で生じる追
   跡ヘッダフィールドのもう一つの重要なこととして、受信システムは追跡ヘッ
   ダフィールドの形式に基づいてメールを拒否してはいけません(MUST NOT)、
   そしてそれらのヘッダフィールドの中の予期しない情報や形式の兆しには極
   めて頑丈であるべきです(SHOULD)。

   The gateway SHOULD indicate the environment and protocol in the "via"
   clauses of Received header field(s) that it supplies.

   ゲートウェイは自身が付与する Received ヘッダフィールドの "via" 節で
   環境とプロトコルを示すべきです(SHOULD)。

3.7.3.  Addresses in Gatewaying
3.7.3.  ゲートウェイでのアドレス

   From the Internet side, the gateway SHOULD accept all valid address
   formats in SMTP commands and in the RFC 822 header section, and all
   valid RFC 822 messages.  Addresses and header fields generated by
   gateways MUST conform to applicable standards (including this one and
   RFC 5322 [4]).  Gateways are, of course, subject to the same rules
   for handling source routes as those described for other SMTP systems
   in Section 3.3.

   インターネット側から、ゲートウェイは SMTP コマンドでの有効なアドレス
   形式と RFC 822 ヘッダ部分、全ての有効な RFC 822 のメッセージ、はすべ
   て受け入れるべきです(SHOULD)。ゲートウェイによって生成されるアドレス
   とヘッダフィールドは適用される標準に従わなけらばいけません(MUST)(本
   書と RFC 5322 [4]を含みます)。もちろんSection 3.3 でその他の SMTP シ
   ステムについて説明したように、ゲートウェイではソースルートの取り扱い
   については同じルールが科せられます。

3.7.4.  Other Header Fields in Gatewaying
3.7.4.  ゲートウェイでのその他のヘッダフィールド

   The gateway MUST ensure that all header fields of a message that it
   forwards into the Internet mail environment meet the requirements for
   Internet mail.  In particular, all addresses in "From:", "To:",
   "Cc:", etc., header fields MUST be transformed (if necessary) to
   satisfy the standard header syntax of RFC 5322 [4], MUST reference
   only fully-qualified domain names, and MUST be effective and useful
   for sending replies.  The translation algorithm used to convert mail
   from the Internet protocols to another environment's protocol SHOULD
   ensure that error messages from the foreign mail environment are
   delivered to the reverse-path from the SMTP envelope, not to an
   address in the "From:", "Sender:", or similar header fields of the
   message.

   ゲートウェイはインターネットメール環境へ転送するメッセージの全ヘッダ
   フィールドがインターネットメールの条件に対応していることを保証しなけ
   ればいけません(MUST)。特に"From:"、"To:"、"Cc:" などのヘッダフィール
   ドの全てのアドレスは(必要ならば) RFC 5322 [4] の標準ヘッダ構文を満た
   すために翻訳されなければならず(MUST)、完全修飾ドメイン名だけを参照し
   なけばけません(MUST)、そして返信の送信に対して有効で役立たなければな
   りません(MUST)。 インターネットプロトコルからもう一方の環境へのプロ
   トコルへメールを変換するのに用いられる翻訳アルゴリズム外部環境プロト
   コルからのエラーメッセージがメッセージの "From:" や "Sender:" もしく
   は類似したヘッダフィールドのアドレスではなく、SMTP エンベロープから
   reverse-path へ配送されることをは保証すべきです(SHOULD)。







Klensin                     Standards Track                    [Page 29]

RFC 5321                          SMTP                      October 2008


3.7.5.  Envelopes in Gatewaying
3.7.5.  ゲートウェイでのエンベロープ

   Similarly, when forwarding a message from another environment into
   the Internet, the gateway SHOULD set the envelope return path in
   accordance with an error message return address, if supplied by the
   foreign environment.  If the foreign environment has no equivalent
   concept, the gateway must select and use a best approximation, with
   the message originator's address as the default of last resort.

   同様に、その他の環境からインターネットへメッセージを送信するときは、
   ゲートウェイはエラーメッセージの返送アドレスに従ってエンベロープの返
   送パスを設定すべきです(SHOULD)。もし外部環境に同様の概念がないのであ
   れば、ゲートウェイは最も近い方法を選択し、最終手段のデフォルトとして
   はメッセージの送信元アドレスを用いなければなりません。


3.8.  Terminating Sessions and Connections
3.8.  セッションと接続の終了

   An SMTP connection is terminated when the client sends a QUIT
   command.  The server responds with a positive reply code, after which
   it closes the connection.

   SMTP 接続はクライアントが QUIT コマンドを送信したときに終了します。
   サーバは肯定的な応答コードで応答し、その後コネクションを閉じます。

   An SMTP server MUST NOT intentionally close the connection under
   normal operational circumstances (see Section 7.8) except:

   SMTP サーバは通常に運転している状況(Section 7.8 を見てください)でわ
   ざとコネクションを閉じてはいけません(MUST NOT)。以下を除いて、

   o  After receiving a QUIT command and responding with a 221 reply.

      QUIT コマンド受信し、221 応答で応答した後

   o  After detecting the need to shut down the SMTP service and
      returning a 421 response code.  This response code can be issued
      after the server receives any command or, if necessary,
      asynchronously from command receipt (on the assumption that the
      client will receive it after the next command is issued).

     SMTP サービスが シャットダウンする必要があると検出し、421 応答コー
     ドを返した後。この応答コードはサーバがなにかコマンドを受信および、
     必要ならば、コマンド受信とは非同期に(想定では次のコマンドを発行さ
     れた後にクライアイントは受信するだろう)発行することができます。

   o  After a timeout, as specified in Section 4.5.3.2, occurs waiting
      for the client to send a command or data.

     Section 4.5.3.2 での仕様のように、コマンドやデータを送るクライアン
     ト待ちのタイムアウトが発生した後。

      

   In particular, a server that closes connections in response to
   commands that are not understood is in violation of this
   specification.  Servers are expected to be tolerant of unknown
   commands, issuing a 500 reply and awaiting further instructions from
   the client.

   とりわけ、理解できなかったコマンドへの応答でコネクションを閉じたサー
   バーは本仕様への違反です。サーバはしらないコマンドへ耐性があることが
   期待されます、それは 500 応答を発行してさらなるクライアントの指示を
   待つということです。

   An SMTP server that is forcibly shut down via external means SHOULD
   attempt to send a line containing a 421 response code to the SMTP
   client before exiting.  The SMTP client will normally read the 421
   response code after sending its next command.

   外的な手段で強制的にシャットダウンされる SMTP サーバは終了する前に
   SMTP クライアントへ 421 応答コードの送信を試みるべきです(SHOULD)。
   SMTP クライアントは通常、次のコマンドを送信した後に 421 応答コードを
   読みとるでしょう。

   SMTP clients that experience a connection close, reset, or other
   communications failure due to circumstances not under their control
   (in violation of the intent of this specification but sometimes
   unavoidable) SHOULD, to maintain the robustness of the mail system,
   treat the mail transaction as if a 451 response had been received and
   act accordingly.

   コントロールが及ばない状況(本仕様の意図には違反だが、たまに避けられ
   ない)で接続が閉じたり、リセットされたり、その他の通信障害を経験した
   SMTP クライアントは メールシステムの強固性を維持するために、あたかも
   451 応答を受信していたかのようにメールトランザクションを扱うべきです
   (SHOULD)。


Klensin                     Standards Track                    [Page 30]

RFC 5321                          SMTP                      October 2008


3.9.  Mailing Lists and Aliases
3.9.  メーリングリストと別名

   An SMTP-capable host SHOULD support both the alias and the list
   models of address expansion for multiple delivery.  When a message is
   delivered or forwarded to each address of an expanded list form, the
   return address in the envelope ("MAIL FROM:") MUST be changed to be
   the address of a person or other entity who administers the list.
   However, in this case, the message header section (RFC 5322 [4]) MUST
   be left unchanged; in particular, the "From" field of the header
   section is unaffected.

   SMTP を実装しているホストは別名と複数配送のためのアドレス展開のメー
   リングリスト方式をサポートすべきです(SHOULD)。メッセージがメーリング
   リスト形式を展開したそれぞれのアドレスに対して配送や転送されるとき、
   エンベロープ("MAIL FROM:")でのリターンアドレスは特定の人もしくは他の
   実在するそのリストの管理者のアドレスへ変更されなければいけません
   (MUST)。しかし、このようなケースで、メッセージヘッダ部分(RFC 5322
   [4])は変更しないままでなければいけません(MUST)、特に、ヘッダの
   "From" フィールドは影響をうけてはいけません(MUST)。

   An important mail facility is a mechanism for multi-destination
   delivery of a single message, by transforming (or "expanding" or
   "exploding") a pseudo-mailbox address into a list of destination
   mailbox addresses.  When a message is sent to such a pseudo-mailbox
   (sometimes called an "exploder"), copies are forwarded or
   redistributed to each mailbox in the expanded list.  Servers SHOULD
   simply utilize the addresses on the list; application of heuristics
   or other matching rules to eliminate some addresses, such as that of
   the originator, is strongly discouraged.  We classify such a pseudo-
   mailbox as an "alias" or a "list", depending upon the expansion
   rules.

   重要なメールの機能は疑似的なメールボックスアドレスを到達メールボック
   スアドレスのリストに変換(もしくは、"展開"、や "バラバラに")すること
   によって一つのメッセージの複数宛先への配送のための機構です。メッセー
   ジがそのような擬似的なメールボックス(時に "エクスプローダ" と呼ばれ
   る)に送られるとき、メッセージのコピーは展開されたリストのそれぞれの
   メールボックスに転送または再分配されます。サーバは単純にリスト上のア
   ドレスを利用するべき(SHOULD)であり、アプリケーションは学習やその他の
   一致ルールで、送信者のようないくつかのアドレスを削除することは強くや
   めるべきでしょう。我々は擬似的なメールボックスを展開ルールによって"
   別名" または "リスト" に分類します。

3.9.1.  Alias
3.9.1.  別名

   To expand an alias, the recipient mailer simply replaces the pseudo-
   mailbox address in the envelope with each of the expanded addresses
   in turn; the rest of the envelope and the message body are left
   unchanged.  The message is then delivered or forwarded to each
   expanded address.

   別名を展開することというのは、受信メーラーは単に擬似的なメールボック
   スアドレスを順々に展開されたアドレスをそれぞれエンベロープとして置き
   変えることです。他のエンベロープとメッセージ本文は変更しません。メッ
   セージはすぐに展開されたアドレスそれぞれに対して配送もしくは転送され
   ます。

3.9.2.  List
3.9.2.  リスト

   A mailing list may be said to operate by "redistribution" rather than
   by "forwarding".  To expand a list, the recipient mailer replaces the
   pseudo-mailbox address in the envelope with each of the expanded
   addresses in turn.  The return (backward-pointing) address in the
   envelope is changed so that all error messages generated by the final
   deliveries will be returned to a list administrator, not to the
   message originator, who generally has no control over the contents of
   the list and will typically find error messages annoying.  Note that
   the key difference between handling aliases (Section 3.9.1) and
   forwarding (this subsection) is the change to the backward-pointing
   address in this case.  When a list constrains its processing to the
   very limited set of modifications and actions described here, it is
   attempting to emulate an MTA; such lists can be treated as a
   continuation in email transit.

   メーリングリストは"転送"動作というよりは"再分解可能な"動作と言うこと
   ができるでしょう。リストを展開することは、受信メーラーは擬似的なメー
   ルボックスアドレスを順々に展開されたアドレスをそれぞれエンベロープと
   して置き変えることです。エンベロープのリターン(逆方向をさす)アドレス
   は最終の配送で発生した全てのエラーメッセージはメッセージの送信者では
   なくリストの管理者へ返るように変更されます。メッセージの送信者は一般
   的にメーリングリストの内容をコントロールできず、普通はエラーメッセー
   ジをうっとうしく思うであろう。別名の扱い(Section 3.9.1)と、このケー
   スで逆方向を指すアドレスを変更して転送(このサブセクション)することの
   重要な違いに注意してください。メーリングリストがとても限られた一連の
   変更と、本書に記述されている処理を強制するとき、それは MTA を模倣す
   ることを試みて、そのようなリストが電子メールの運搬でつづきとして扱わ
   れるでしょう。




Klensin                     Standards Track                    [Page 31]

RFC 5321                          SMTP                      October 2008


   There exist mailing lists that perform additional, sometimes
   extensive, modifications to a message and its envelope.  Such mailing
   lists need to be viewed as full MUAs, which accept a delivery and
   post a new message.

   追加やときどき拡張でメッセージやエンベロープの変更をするメーリングリ
   ストが存在します。そのようなメーリングリストは配送を受けいれ、新しい
   メッセージをポストする完全な MUA として見られることを必要とします。

4.  The SMTP Specifications
4.  SMTP 仕様

4.1.  SMTP Commands
4.1.  SMTP コマンド

4.1.1.  Command Semantics and Syntax
4.1.1.  コマンドの意味と構文

   The SMTP commands define the mail transfer or the mail system
   function requested by the user.  SMTP commands are character strings
   terminated by <CRLF>.  The commands themselves are alphabetic
   characters terminated by <SP> if parameters follow and <CRLF>
   otherwise.  (In the interest of improved interoperability, SMTP
   receivers SHOULD tolerate trailing white space before the terminating
   <CRLF>.)  The syntax of the local part of a mailbox MUST conform to
   receiver site conventions and the syntax specified in Section 4.1.2.
   The SMTP commands are discussed below.  The SMTP replies are
   discussed in Section 4.2.

   SMTP コマンドはユーザーによって必要とされるメール送信およびメールシ
   ステムの機能を定義しています。SMTP コマンドは <CRLF> で終端される文
   字列です。コマンドそれ自身は、パラメータがある場合 <SP> で区切られ、
   そうでなければ <CRLF> で終端するアルファベットの文字です(相互運用の
   改善に関心があるなら、 SMTP 受信者は <CRLF> で終端する以前の空白は寛
   大に取り扱うべきです(SHOULD))。メールボックスのローカルパートの構文
   は受信者側の慣例と Section 4.1.2 で定義される構文に従わなければいけ
   ません(MUST)。SMTP コマンドはこれ以降で述べられています。SMTP 応答は
   Section 4.2 で述べています。

   A mail transaction involves several data objects that are
   communicated as arguments to different commands.  The reverse-path is
   the argument of the MAIL command, the forward-path is the argument of
   the RCPT command, and the mail data is the argument of the DATA
   command.  These arguments or data objects must be transmitted and
   held, pending the confirmation communicated by the end of mail data
   indication that finalizes the transaction.  The model for this is
   that distinct buffers are provided to hold the types of data objects;
   that is, there is a reverse-path buffer, a forward-path buffer, and a
   mail data buffer.  Specific commands cause information to be appended
   to a specific buffer, or cause one or more buffers to be cleared.

   メールトランザクションは引数として異なるコマンドに伝えられるいくつか
   のデータオブジェクトを含んでいます。reverse-path は MAIL コマンドの
   引数で、 foward-path は RCPT コマンドの引数です。そして、メールデー
   タは DATA コマンドの引数です。これらの引数やデータオブジェクトは伝達
   されて、トランザクションを終わらせるメールデータの識別子が伝えられる
   のを確認するまでの間、保持されるはずです。このモデルではデータオブジェ
   クトの種類のために異なるバッファが用意されます、それはつまり
   reverse-path バッファであったり forward-path バッファ そして メール
   データバッファです。特定のコマンドは情報を特定のバッファへ追加したり、
   一つ以上のバッファをクリアしたりします。

   Several commands (RSET, DATA, QUIT) are specified as not permitting
   parameters.  In the absence of specific extensions offered by the
   server and accepted by the client, clients MUST NOT send such
   parameters and servers SHOULD reject commands containing them as
   having invalid syntax.

   いくつかのコマンド(RSET, DATA, QUIT)にはパラメータがありません。サー
   バーによって提供される特定の拡張があり、クライアントによって受け入れ
   らているのでなければ、クライアントどのようなパラメータも送信してはい
   けません(MUST NOT)し、サーバはそれらを含んだコマンドを無効な構文で
   あるとして拒否するべきです(SHOULD)。



4.1.1.1.  Extended HELLO (EHLO) or HELLO (HELO)
4.1.1.1.  拡張された HELLO (EHLO) や HELLO (HELO)

   These commands are used to identify the SMTP client to the SMTP
   server.  The argument clause contains the fully-qualified domain name
   of the SMTP client, if one is available.  In situations in which the
   SMTP client system does not have a meaningful domain name (e.g., when
   its address is dynamically allocated and no reverse mapping record is




Klensin                     Standards Track                    [Page 32]

RFC 5321                          SMTP                      October 2008


   available), the client SHOULD send an address literal (see
   Section 4.1.3).

   これらのコマンドは SMTP サーバによって SMTP クライアントを識別するた
   めに使われます。引数節は可能であれば SMTP クライアントの完全修飾ドメ
   イン名を含みます。SMTP クライアントシステムが意味のあるドメン名を持っ
   ていない場合(例えば、そのアドレスが動的に割り当てあられたものである
   とか、逆引きレコードが有効でないなど)、クライアントはアドレスリテラ
   ルを送信すべきです(Section 4.1.3 を見てください)。

   RFC 2821, and some earlier informal practices, encouraged following
   the literal by information that would help to identify the client
   system.  That convention was not widely supported, and many SMTP
   servers considered it an error.  In the interest of interoperability,
   it is probably wise for servers to be prepared for this string to
   occur, but SMTP clients SHOULD NOT send it.

   RFC 2821 といくつかの初期の非公式な慣例では、リテラルの後にクライア
   ントシステムを識別することに役立つ情報をすすめていました。その慣例は
   広くサポートされませんでした、そして多くの SMTP サーバがそれをエラー
   トみなしました。識別するための文字列を用意することはサーバにとって
   は恐らく賢明ではあるのですが、相互運用の観点では、SMTP クライアント
   はそれを送信すべきではありません(SHOULD NOT)。

   The SMTP server identifies itself to the SMTP client in the
   connection greeting reply and in the response to this command.

   SMTP サーバは SMTP クライアントにコネクショングリーティング応答と
   本コマンドの応答で自分自身を識別させます。

   A client SMTP SHOULD start an SMTP session by issuing the EHLO
   command.  If the SMTP server supports the SMTP service extensions, it
   will give a successful response, a failure response, or an error
   response.  If the SMTP server, in violation of this specification,
   does not support any SMTP service extensions, it will generate an
   error response.  Older client SMTP systems MAY, as discussed above,
   use HELO (as specified in RFC 821) instead of EHLO, and servers MUST
   support the HELO command and reply properly to it.  In any event, a
   client MUST issue HELO or EHLO before starting a mail transaction.

   クライアントの SMTP は EHLO コマンドを発行することにより SMTP セッショ
   ンを開始するべきです(SHOULD)。 SMTP サーバが SMTP サービス拡張をサ
   ポートしている場合、成功の応答か失敗の応答、もしくはエラーの応答を返
   すでしょう。もし SMTP サーバが本仕様に違反し、一つも SMTP サービス
   もサポートしていない場合はエラー応答を返すでしょう。より古いクライア
   ントの SMTP システムは前述したように、EHLO の替わりに HELO (RFC 821
   で定義されています) を用いるかもしれません(MAY)、そしてサーバは
   HELO コマンドをサポートし、それに対して適切に応答しなければなりませ
   ん(MUST)。どのみち、クライアントはメールトランザクションを開始する前
   に HELO もしくは EHLO を発行しなくてはいけません(MUST)。

   These commands, and a "250 OK" reply to one of them, confirm that
   both the SMTP client and the SMTP server are in the initial state,
   that is, there is no transaction in progress and all state tables and
   buffers are cleared.

   これらのコマンド、およびそれらの一つに対する "250 OK" 応答は SMTP ク
   ライアントと SMTP サーバの両方が初期状態になっていることを確実にしま
   す。すなわちそれは進行中のトランザクションがなく、全ての状態テーブル
   とバッファがクリアされたということです。


   Syntax:
   構文:

   ehlo           = "EHLO" SP ( Domain / address-literal ) CRLF

   helo           = "HELO" SP Domain CRLF

   Normally, the response to EHLO will be a multiline reply.  Each line
   of the response contains a keyword and, optionally, one or more
   parameters.  Following the normal syntax for multiline replies, these
   keywords follow the code (250) and a hyphen for all but the last
   line, and the code and a space for the last line.  The syntax for a
   positive response, using the ABNF notation and terminal symbols of
   RFC 5234 [7], is:

   通常、EHLO に対する応答は複数行にわたるでしょう。応答のそれぞれの行
   はキーワードと、オプションで、一つないしそれ以上のパラメータを含みま
   す。下記の複数行応答の通常構文は、これらのキーワードがコード(250)と
   最終行を除きハイフンにつづき、最終行ではコードと一つのスペースにつづ
   きます。

   
   ehlo-ok-rsp    = ( "250" SP Domain [ SP ehlo-greet ] CRLF )
                    / ( "250-" Domain [ SP ehlo-greet ] CRLF
                    *( "250-" ehlo-line CRLF )
                    "250" SP ehlo-line CRLF )





Klensin                     Standards Track                    [Page 33]

RFC 5321                          SMTP                      October 2008


   ehlo-greet     = 1*(%d0-9 / %d11-12 / %d14-127)
                    ; string of any characters other than CR or LF

   ehlo-line      = ehlo-keyword *( SP ehlo-param )

   ehlo-keyword   = (ALPHA / DIGIT) *(ALPHA / DIGIT / "-")
                    ; additional syntax of ehlo-params depends on
                    ; ehlo-keyword

   ehlo-param     = 1*(%d33-126)
                    ; any CHAR excluding <SP> and all
                    ; control characters (US-ASCII 0-31 and 127
                    ; inclusive)

   Although EHLO keywords may be specified in upper, lower, or mixed
   case, they MUST always be recognized and processed in a case-
   insensitive manner.  This is simply an extension of practices
   specified in RFC 821 and Section 2.4.

   EHLO キーワドは大文字、小文字、もしくは混ざっているかもしれませんが、
   それらは大文字小文字を区別しないやり方で解釈され、処理されなればなり
   ません(MUST)。これは RFC 821 と Section 2.4 で論じたやり方を拡張した
   ものです。

   The EHLO response MUST contain keywords (and associated parameters if
   required) for all commands not listed as "required" in Section 4.5.1
   excepting only private-use commands as described in Section 4.1.5.
   Private-use commands MAY be listed.

   EHLO 応答は Section 4.1.5 で論じている内部使用のコマンド除いて、
   Section 4.5.1 で"必要"リストされていない全てのコマンドに対するキーワー
   ド(必要であるならばパラメータも一緒に)を含まなればいけません(MUST)。
   内部使用のコマンドはリストされても構いません(MAY)。



4.1.1.2.  MAIL (MAIL)
4.1.1.2.  メール(MAIL)

   This command is used to initiate a mail transaction in which the mail
   data is delivered to an SMTP server that may, in turn, deliver it to
   one or more mailboxes or pass it on to another system (possibly using
   SMTP).  The argument clause contains a reverse-path and may contain
   optional parameters.  In general, the MAIL command may be sent only
   when no mail transaction is in progress, see Section 4.1.4.

   このコマンドはメールデータが SMTP サーバヘ運ばれるメールトランザクショ
   ン、いいかえれば、メールデータをひとつないしそれ以上のメールボックス
   に配送したり、もう一つのシステムに渡したり(可能であれば SMTP をつかっ
   て)するのを始めるのに用いられます。引数節は reverse-path を含み、オ
   プションパラメータを含むかもしれません。一般的に、メールコマンドはメー
   ルトランザクションが実行中でないときにのみ送信されるでしょう。
   aSection 4.1.4 をみてください。

   The reverse-path consists of the sender mailbox.  Historically, that
   mailbox might optionally have been preceded by a list of hosts, but
   that behavior is now deprecated (see Appendix C).  In some types of
   reporting messages for which a reply is likely to cause a mail loop
   (for example, mail delivery and non-delivery notifications), the
   reverse-path may be null (see Section 3.6).

   reverse-path は送信者のメールボックスで構成されます。歴史的には、メー
   ルボックスはホストのリストより古く、選択されてもよかったのですが、そ
   の動作は現在は推奨されていません。応答がメールのループを引き起こし得
   ます、ある種の報告メッセージ(例えば、メール配送や配送不可通知)、
   reverse-path は null になるでしょう(Section 3.6を見てください)。


   This command clears the reverse-path buffer, the forward-path buffer,
   and the mail data buffer, and it inserts the reverse-path information
   from its argument clause into the reverse-path buffer.

   本コマンドは reverse-path バッファ、 forward-path バッファ、メールデー
   タバッファをクリアして、引数節の reverse-path 情報をreverse-path バッ
   ファに書き込みます。

   If service extensions were negotiated, the MAIL command may also
   carry parameters associated with a particular service extension.

   もしサービス拡張が取り決められていたならば、MAIL コマンドはまた特定
   のサービス拡張に関連するパラメータを伝えても構いません。





Klensin                     Standards Track                    [Page 34]

RFC 5321                          SMTP                      October 2008


   Syntax:
   構文:

   mail = "MAIL FROM:" Reverse-path
                                       [SP Mail-parameters] CRLF

4.1.1.3.  RECIPIENT (RCPT)
4.1.1.3.  受信者 (RCPT)

   This command is used to identify an individual recipient of the mail
   data; multiple recipients are specified by multiple uses of this
   command.  The argument clause contains a forward-path and may contain
   optional parameters.

   本コマンドはメールデータの個別の受信者を示すのに用いられます、複数の
   受信者は本コマンドを複数回使うことにより指定されます。引数節は
   forward-path を含み、オプションのパラメータを含むかもしれません。

   The forward-path normally consists of the required destination
   mailbox.  Sending systems SHOULD NOT generate the optional list of
   hosts known as a source route.  Receiving systems MUST recognize
   source route syntax but SHOULD strip off the source route
   specification and utilize the domain name associated with the mailbox
   as if the source route had not been provided.

   forward-path は通常宛先のメールボックスで構成されます。送信システム
   はソースルートとして知られるホストのリストをオプションで生成すべきで
   はありません(SHOULD NOT)。受信システムはソースルートの構文を解釈しな
   ければなりませんが(MUST)、あたかもソースルートが用意されていなかった
   かのように、ソースルートの指定を取り除き、メールボックスに関連づけら
   れているドメイン名をを利用すべきです。

   Similarly, relay hosts SHOULD strip or ignore source routes, and
   names MUST NOT be copied into the reverse-path.  When mail reaches
   its ultimate destination (the forward-path contains only a
   destination mailbox), the SMTP server inserts it into the destination
   mailbox in accordance with its host mail conventions.

   同様に、中継ホストは ソースルートを取り除くか無視すべき(SHOULD)で、
   名前は reverse-path へコピーされてはいけません(MUST NOT)。メールが最
   終的な到達地(forward-path は 宛先のメールボックスのみを含んでいます)に
   到達するとき、SMTP サーバはメールをそのホストのメールの慣習に従って、
   宛先メールボックスに書き込みます。

   This command appends its forward-path argument to the forward-path
   buffer; it does not change the reverse-path buffer nor the mail data
   buffer.

   本コマンドはその forward-path 引数を forward-path バッファに追加しま
   す、そして reverse-path バッファやメールデータバッファを変更しません。

   For example, mail received at relay host xyz.com with envelope
   commands

   例えば、リレーホスト xyz.com でこのようなエンベロープコマンドでメー
   ルを受信した場合、

      MAIL FROM:<userx@y.foo.org>
      RCPT TO:<@hosta.int,@jkl.org:userc@d.bar.org>

   will normally be sent directly on to host d.bar.org with envelope
   commands

   通常は次のようなエンベロープコマンドで直接 d.bar.org に送信されるでしょう。

      MAIL FROM:<userx@y.foo.org>
      RCPT TO:<userc@d.bar.org>

   As provided in Appendix C, xyz.com MAY also choose to relay the
   message to hosta.int, using the envelope commands

   Appendix C にもあるように次のエンベロープコマンドを使って xyz.com も
   またメッセージを中継するために hosta.int 選択しても構いません(MAY)。
   

      MAIL FROM:<userx@y.foo.org>
      RCPT TO:<@hosta.int,@jkl.org:userc@d.bar.org>





Klensin                     Standards Track                    [Page 35]

RFC 5321                          SMTP                      October 2008


   or to jkl.org, using the envelope commands
   もしくは次のエンベロープコマンドで jkl.org を選択しても構いません(MAY)。

      MAIL FROM:<userx@y.foo.org>
      RCPT TO:<@jkl.org:userc@d.bar.org>

   Attempting to use relaying this way is now strongly discouraged.
   Since hosts are not required to relay mail at all, xyz.com MAY also
   reject the message entirely when the RCPT command is received, using
   a 550 code (since this is a "policy reason").

   この方法で中継を使おうとすることは、現在では強く思いとどまるよう薦め
   ます。ホストがメールを中継する必要が全くないとき、xyz.com は RCPT コ
   マンドを受けとった時点で、550 コード(これは "ポリシーによる理由" と
   して)メッセージを完全に拒否しても構いません(MAY)。


   If service extensions were negotiated, the RCPT command may also
   carry parameters associated with a particular service extension
   offered by the server.  The client MUST NOT transmit parameters other
   than those associated with a service extension offered by the server
   in its EHLO response.

   もしサービス拡張が取り決めされていたなら、RCPT コマンドもまたサーバ
   によって提供されている特定のサービス拡張に関するパラメータを伝えても
   構わない。クライアント EHLO 応答でサーバによって提供されたサービス拡
   張に関連づけられている以外のパラメータをは伝えてはいけません。

   Syntax:
   構文:

      rcpt = "RCPT TO:" ( "<Postmaster@" Domain ">" / "<Postmaster>" /
                  Forward-path ) [SP Rcpt-parameters] CRLF

                  Note that, in a departure from the usual rules for
                  local-parts, the "Postmaster" string shown above is
                  treated as case-insensitive.

                  留意すべきは、通常のルールから脱却するがローカルパー
                  トでの、上記の "Postmaster"という文字列は 大文字小文
                  字を区別しないように扱うことです。
                  

4.1.1.4.  DATA (DATA)
4.1.1.4.  データ(DATA)

   The receiver normally sends a 354 response to DATA, and then treats
   the lines (strings ending in <CRLF> sequences, as described in
   Section 2.3.7) following the command as mail data from the sender.
   This command causes the mail data to be appended to the mail data
   buffer.  The mail data may contain any of the 128 ASCII character
   codes, although experience has indicated that use of control
   characters other than SP, HT, CR, and LF may cause problems and
   SHOULD be avoided when possible.

   受信者は DATA に対して通常 354 応答を送信する、そしてコマンドに続く
   行(Section 2.3.7 でも論じたように、<CRLF> で文字列は終端する)を送信
   者からのメールデータとして扱う。本コマンドはメールデータをメールデー
   タバッファに追加することをもたらします。メールデータは 128 のASCII
   文字コードのいずれかを含みます。経験上 SP, HT, CR, や LF 以外のコン
   トロール文字の使用は問題を引き起こすかもしれないで、できる限り避ける
   べきです(SHOULD)。

   The mail data are terminated by a line containing only a period, that
   is, the character sequence "<CRLF>.<CRLF>", where the first <CRLF> is
   actually the terminator of the previous line (see Section 4.5.2).
   This is the end of mail data indication.  The first <CRLF> of this
   terminating sequence is also the <CRLF> that ends the final line of
   the data (message text) or, if there was no mail data, ends the DATA
   command itself (the "no mail data" case does not conform to this
   specification since it would require that neither the trace header
   fields required by this specification nor the message header section
   required by RFC 5322 [4] be transmitted).  An extra <CRLF> MUST NOT
   be added, as that would cause an empty line to be added to the
   message.  The only exception to this rule would arise if the message



Klensin                     Standards Track                    [Page 36]

RFC 5321                          SMTP                      October 2008


   body were passed to the originating SMTP-sender with a final "line"
   that did not end in <CRLF>; in that case, the originating SMTP system
   MUST either reject the message as invalid or add <CRLF> in order to
   have the receiving SMTP server recognize the "end of data" condition.

   メールデータはピリオドだけの行によって終端される、つまり文字順は
   "<CRLF>.<CRLF>" です、最初の<CRLF>は実際に前の行の終端です(Section
   4.5.2を見てください)。これはメールデータの終了通知です。メールデータ
   がなかった場合、この終了文字列の最初の <CRLF> も 最終データ行(メッセー
   ジ文) の終りの <CRLF> です、もしくはデータコマンド自身の終了の
   <CRLF>となります("メールデータがない"ケースというのは、本仕様に準拠
   しません、なぜなら、本仕様で必要とされている追跡ヘッダフィールドも
   RFC 5322 [4] で必要とされているメッセージヘッダ部分も伝えられる必要
   があるからです。)。余計な <CRLF> は付け加えてはいけません(MUST NOT)、
   それはメッセージに空行を付け加えることになってしまいます。このルール
   の例外は、メッセージ本文が送信元の SMTP-sender から<CRLF>がない最終
   行を渡された場合です。このケースでは送信元の SMTP システムは無効なメッ
   セージとして拒否するか、 受信 SMTP サーバが"データの終わり" の状態を
   解釈するために <CRLF> を加えるかのどちらかをしなければなりません
   (MUST)。
   
   The custom of accepting lines ending only in <LF>, as a concession to
   non-conforming behavior on the part of some UNIX systems, has proven
   to cause more interoperability problems than it solves, and SMTP
   server systems MUST NOT do this, even in the name of improved
   robustness.  In particular, the sequence "<LF>.<LF>" (bare line
   feeds, without carriage returns) MUST NOT be treated as equivalent to
   <CRLF>.<CRLF> as the end of mail data indication.

   いくつかの UNIX システムでは部分的に準拠していない動作を許容ような、
   <LF> だけで終っている行を受信したときの慣習は、それを解決するよりも
   さらなる相互運用上の問題を引き起こすということが判明しています、です
   ので SMTP サーバシステムは改良された頑強性の名のもとにおいても、これ
   を行ってはいけません(MUST NOT)。特に、"<LF>.<LF>"(復帰改行なしの生の
   改行) の順番はメールデータの終了通知として <CRLF>.<CRLF> と同等に扱っ
   てはいけません(MUST NOT)。

   Receipt of the end of mail data indication requires the server to
   process the stored mail transaction information.  This processing
   consumes the information in the reverse-path buffer, the forward-path
   buffer, and the mail data buffer, and on the completion of this
   command these buffers are cleared.  If the processing is successful,
   the receiver MUST send an OK reply.  If the processing fails, the
   receiver MUST send a failure reply.  The SMTP model does not allow
   for partial failures at this point: either the message is accepted by
   the server for delivery and a positive response is returned or it is
   not accepted and a failure reply is returned.  In sending a positive
   "250 OK" completion reply to the end of data indication, the receiver
   takes full responsibility for the message (see Section 6.1).  Errors
   that are diagnosed subsequently MUST be reported in a mail message,
   as discussed in Section 4.4.

   メールデータの終了通知受信は メールトランザクション情報を保存の処理
   をすることをサーバに要求します。この処理は reverse-path バッファ、
   forward-path バッファ、メールデータバッファの情報を消費し、本コマン
   ドの完了はこれらのバッファをクリアします。処理が成功したら、受信者は
   OK 応答 を送信しなければならりません(MUST)。失敗したならば、受信者は
   失敗応答を返さなければならない(MUST)。SMTP モデルはこの時点での不完
   全な失敗を許可しません、配送のためにメッセージがサーバによって受け入
   れられ肯定的な応答が返されても、受け入れられず失敗の応答が返されたと
   してもです。データの終了通知に対して肯定的な "250 OK" 完了応答を送信
   することは、受信者はそのメッセージに対して全ての責任を負うということ
   です(Section 6.1 を見てください)。Section 4.4 でも述べているように、
   エラーは診断されその後にメールメッセージで報告されなければいけません
   (MUST)。
   
   When the SMTP server accepts a message either for relaying or for
   final delivery, it inserts a trace record (also referred to
   interchangeably as a "time stamp line" or "Received" line) at the top
   of the mail data.  This trace record indicates the identity of the
   host that sent the message, the identity of the host that received
   the message (and is inserting this time stamp), and the date and time
   the message was received.  Relayed messages will have multiple time
   stamp lines.  Details for formation of these lines, including their
   syntax, is specified in Section 4.4.

   SMTP サーバが中継でも最終的な配送でもメッセージを受信したとき、追
   跡レコード(または "タイムスタンプ行"や "Received" 行 と言われる)をメー
   ルデータの先頭に挿入します。この追跡レコードはメッセージを送信したホス
   トの識別、メッセージ(そして、このタイムスタンプが挿入される)を受信し
   たホストの識別、そしてそのメッセージを受信した日付と時間です。中継さ
   れたメッセージには複数のタイムスタンプ行があるでしょう。構文を含む、
   これらの行の形式の詳細は Section 4.4 で規定されています。

   Additional discussion about the operation of the DATA command appears
   in Section 3.3.

   DATA コマンドの動作についてのさらなる考察は Section 3.3 でしています。

   Syntax:

      data = "DATA" CRLF







Klensin                     Standards Track                    [Page 37]

RFC 5321                          SMTP                      October 2008


4.1.1.5.  RESET (RSET)
4.1.1.5.  リセット (RSET)

   This command specifies that the current mail transaction will be
   aborted.  Any stored sender, recipients, and mail data MUST be
   discarded, and all buffers and state tables cleared.  The receiver
   MUST send a "250 OK" reply to a RSET command with no arguments.  A
   reset command may be issued by the client at any time.  It is
   effectively equivalent to a NOOP (i.e., it has no effect) if issued
   immediately after EHLO, before EHLO is issued in the session, after
   an end of data indicator has been sent and acknowledged, or
   immediately before a QUIT.  An SMTP server MUST NOT close the
   connection as the result of receiving a RSET; that action is reserved
   for QUIT (see Section 4.1.1.10).

   このコマンドは現在のメールトランザクションを中止されるように定めてい
   ます。保存している送信者、受信者、メールデータは破棄され、すべてのバッ
   ファと状態テーブルをクリアされなければいけません(MUST)。受信者は引数
   なしの RSET コマンドに対して "250 OK" の応答を送信しなければいけませ
   ん(MUST)。リセットコマンドはクライアントによっていつでも発行されるか
   もしれません。それは事実上、 EHLO 直後、そのセッションのやEHLO の前、
   データ終端通知が送信されて認識された後、もしくは QUIT 直前 のNOOP と
   同じことです(すなわち、効果がありません)。SMTP サーバはRSET の受信の
   結果としてコネクションを閉じてはいけません(MUST NOT)、その動作は
   QUIT(Section 4.1.1.10 を見てください。)で行います。

   Since EHLO implies some additional processing and response by the
   server, RSET will normally be more efficient than reissuing that
   command, even though the formal semantics are the same.

   EHLO が サーバによって追加の処理と応答を伝える場合、RSET は通常、コ
   マンドを再発行するよりも効率的です。正式な構文であったとしてもそれは
   同じことです。

   There are circumstances, contrary to the intent of this
   specification, in which an SMTP server may receive an indication that
   the underlying TCP connection has been closed or reset.  To preserve
   the robustness of the mail system, SMTP servers SHOULD be prepared
   for this condition and SHOULD treat it as if a QUIT had been received
   before the connection disappeared.

   本仕様の規定に反して、 SMTP サーバが下位の TCP コネクションが閉じら
   れたり、リセット されたという通知を受信する状況があるでしょう。メー
   ルシステムの強固性を保つには、SMTP サーバはこの状況に対して備えるべ
   きで(SHOULD)、コネクションが無効になる前にあたかも QUIT コマンドを受
   信したかのようにそれを扱うべきです(SHOULD)。

   Syntax:
   構文:

      rset = "RSET" CRLF

4.1.1.6.  VERIFY (VRFY)
4.1.1.6.  確認(VRFY)

   This command asks the receiver to confirm that the argument
   identifies a user or mailbox.  If it is a user name, information is
   returned as specified in Section 3.5.

   本コマンドは引数で指し示したユーザーやメールボックスを確認することを
   受信者に求めます。それがユーザー名の場合、Section 3.5 で定めた情報が
   返されます。

   This command has no effect on the reverse-path buffer, the forward-
   path buffer, or the mail data buffer.

   本コマンドは reverse-path バッファ、forward-path バッファ、メールデー
   タバッファには影響は与えません。

   Syntax:
   構文:

      vrfy = "VRFY" SP String CRLF










Klensin                     Standards Track                    [Page 38]

RFC 5321                          SMTP                      October 2008


4.1.1.7.  EXPAND (EXPN)
4.1.1.7.  展開(EXPN)

   This command asks the receiver to confirm that the argument
   identifies a mailing list, and if so, to return the membership of
   that list.  If the command is successful, a reply is returned
   containing information as described in Section 3.5.  This reply will
   have multiple lines except in the trivial case of a one-member list.

   本コマンドは引数で指し示したメーリングリストを確認することを受信者に
   求めます、そして確認されたなら、そのメーリングリストのメンバが返され
   ます。コマンドが成功した場合、応答は Section 3.5 で記述したような情
   報を含んで返されます。この応答は一人のメーリングリストというささいな
   場合を除いて複数行でしょう。

   This command has no effect on the reverse-path buffer, the forward-
   path buffer, or the mail data buffer, and it may be issued at any
   time.

   本コマンドは reverse-path バッファ、forward-path バッファ、メールデー
   タバッファには影響は与えません。そしていつでも発行しても構いません。

   Syntax:
   構文:

      expn = "EXPN" SP String CRLF

4.1.1.8.  HELP (HELP)
4.1.1.8.  おたすけ (HELP)

   This command causes the server to send helpful information to the
   client.  The command MAY take an argument (e.g., any command name)
   and return more specific information as a response.

   本コマンドはサーバがクライアントに対して役に立つ情報を送ります。コマ
   ンドは引数(例えば、コマンド名)をとっても、応答としてより詳細な情報を
   返しても構いません(MAY)。

   This command has no effect on the reverse-path buffer, the forward-
   path buffer, or the mail data buffer, and it may be issued at any
   time.

   本コマンドは reverse-path バッファ、forward-path バッファ、メールデー
   タバッファには影響は与えません。そしていつでも発行しても構いません。


   SMTP servers SHOULD support HELP without arguments and MAY support it
   with arguments.

   SMTP サーバは引数なしの HELP をサポートすべきです(SHOULD)。そして、
   引数ありのものはサポートしても構いません(MAY)。

   Syntax:
   構文:

      help = "HELP" [ SP String ] CRLF



















Klensin                     Standards Track                    [Page 39]

RFC 5321                          SMTP                      October 2008


4.1.1.9.  NOOP (NOOP)
4.1.1.9.  無作用 (NOOP)

   This command does not affect any parameters or previously entered
   commands.  It specifies no action other than that the receiver send a
   "250 OK" reply.

   本コマンドはどんなパラメータや以前に入力されたコマンドにも影響しませ
   ん。受信者が "250 OK" を返すこと以外はなにも行わないことを定めていま
   す。

   This command has no effect on the reverse-path buffer, the forward-
   path buffer, or the mail data buffer, and it may be issued at any
   time.  If a parameter string is specified, servers SHOULD ignore it.


   本コマンドは reverse-path バッファ、forward-path バッファ、メールデー
   タバッファには影響は与えません。そしていつでも発行しても構いません。
   パラメータが指定されていた場合、サーバはそれを無視すべき(SHOULD)です。

   Syntax:

      noop = "NOOP" [ SP String ] CRLF

4.1.1.10.  QUIT (QUIT)
4.1.1.10.  終了 (QUIT)

   This command specifies that the receiver MUST send a "221 OK" reply,
   and then close the transmission channel.

   本コマンドは受信者が "221 OK" を返さなければならず(MUST)、その伝送チャ
   ネルを閉じるように規定されています。


   The receiver MUST NOT intentionally close the transmission channel
   until it receives and replies to a QUIT command (even if there was an
   error).  The sender MUST NOT intentionally close the transmission
   channel until it sends a QUIT command, and it SHOULD wait until it
   receives the reply (even if there was an error response to a previous
   command).  If the connection is closed prematurely due to violations
   of the above or system or network failure, the server MUST cancel any
   pending transaction, but not undo any previously completed
   transaction, and generally MUST act as if the command or transaction
   in progress had received a temporary error (i.e., a 4yz response).

   受信者は QUIT コマンドを受信して、応答するまでは(エラーがあったとし
   ても)故意に伝送チャネルを閉じてはいけません(MUST NOT)。送信者は
   QUIT コマンドを送信するまでは故意に通信チャネルを閉じてはいけません
   (MUST NOT)、そして、その応答を受信するのを(以前のコマンドに対するエ
   ラーの応答があったとしても)待つべき(SHOULD)です。もしコネクションが
   前述したことに違反したり、システムやネットワークの障害により早く閉じ
   られてしまった場合、サーバはどんな未決のトランザクションを取り消すべ
   きです(MUST)。しかし以前の完了したトランザクションは取り消せません。
   そして一般的に実行中のコマンドやトランザクションは一時的なエラー(す
   なわち 4yz の応答)を受信したかのように動作しなければなりません
   (MUST)。

   The QUIT command may be issued at any time.  Any current uncompleted
   mail transaction will be aborted.

   QUIT コマンドはどんなときでも発行されるでしょう。どんな進行中の完了
   していないメールトランザクションでも中止させられるでしょう。

   Syntax:
   構文:

      quit = "QUIT" CRLF

4.1.1.11.  Mail-Parameter and Rcpt-Parameter Error Responses
4.1.1.11.  Mail-Parameter と Rcpt-Parameter のエラー応答

   If the server SMTP does not recognize or cannot implement one or more
   of the parameters associated with a particular MAIL FROM or RCPT TO
   command, it will return code 555.

   サーバの SMTP が特に MAIL FROM や RCPT TO コマンドに関連したひとつな
   いしそれ以上のパラメータを解釈しない、もしくは実装することができない
   場合、コード 555 を返すでしょう。

   If, for some reason, the server is temporarily unable to accommodate
   one or more of the parameters associated with a MAIL FROM or RCPT TO
   command, and if the definition of the specific parameter does not
   mandate the use of another code, it should return code 455.

   もしなんらかの理由で、サーバが一時的にMAIL FROM や RCPT TO コマンド
   に関連したひとつないしそれ以上のパラメータに対応することができなかっ
   たとき、パラメータ仕様上の定義にその他のコードを使うような規定がない
   ならば、コード 455 を返すべきです。




Klensin                     Standards Track                    [Page 40]

RFC 5321                          SMTP                      October 2008


   Errors specific to particular parameters and their values will be
   specified in the parameter's defining RFC.

   特定のパラメータとそれらの値のためのエラー仕様はそのパラメータを定義
   している RFC で規定されているでしょう。

4.1.2.  Command Argument Syntax
4.1.2.  コマンド引数の構文

   The syntax of the argument clauses of the above commands (using the
   syntax specified in RFC 5234 [7] where applicable) is given below.
   Some of the productions given below are used only in conjunction with
   source routes as described in Appendix C.  Terminals not defined in
   this document, such as ALPHA, DIGIT, SP, CR, LF, CRLF, are as defined
   in the "core" syntax in Section 6 of RFC 5234 [7] or in the message
   format syntax in RFC 5322 [4].

   上記のコマンド()引数節の構文は以下に示す(構文は適用できるのであれば
   RFC 5234 [7] で定義されているものを使用している)。下記に示されたうち
   いつかは Appendix C で記載されているようなソースルートと一緒に使われ
   るだけのものがあります。本書で定義されていない、ALPHA, DIGIT, SP,
   CR, LF, CRLF のような終端は RFC 5234 [7] の Section 6 中に "core" 構
   文で、もしくは RFC 5322 [4] 中にメッセージフォーマット形式で定義され
   ています。

   Reverse-path   = Path / "<>"

   Forward-path   = Path

   Path           = "<" [ A-d-l ":" ] Mailbox ">"

   A-d-l          = At-domain *( "," At-domain )
                  ; Note that this form, the so-called "source
                  ; route", MUST BE accepted, SHOULD NOT be
                  ; generated, and SHOULD be ignored.

                  ;この形式はいわゆる "ソースルート"です、受け入れられ
                  ;なくてはなりません(MUST)が生成するべきではなく
                  ;(SHOULD NOT)、無視すべき(SHOULD)ということに留意して
                  ;ください。

   At-domain      = "@" Domain

   Mail-parameters  = esmtp-param *(SP esmtp-param)

   Rcpt-parameters  = esmtp-param *(SP esmtp-param)

   esmtp-param    = esmtp-keyword ["=" esmtp-value]

   esmtp-keyword  = (ALPHA / DIGIT) *(ALPHA / DIGIT / "-")

   esmtp-value    = 1*(%d33-60 / %d62-126)
                  ; any CHAR excluding "=", SP, and control
                  ; characters.  If this string is an email address,
                  ; i.e., a Mailbox, then the "xtext" syntax [32]
                  ; SHOULD be used.

                  ; "=", SP と制御文字を除く CHAR です。もしこの文字が
                  ; メールアドレス、すなわちメールボックスであれば、
                  ; "xtext" 構文 [32] を用いるべきです(SHOULD)。

   Keyword        = Ldh-str

   Argument       = Atom

   Domain         = sub-domain *("." sub-domain)






Klensin                     Standards Track                    [Page 41]

RFC 5321                          SMTP                      October 2008


   sub-domain     = Let-dig [Ldh-str]

   Let-dig        = ALPHA / DIGIT

   Ldh-str        = *( ALPHA / DIGIT / "-" ) Let-dig

   address-literal  = "[" ( IPv4-address-literal /
                    IPv6-address-literal /
                    General-address-literal ) "]"
                    ; See Section 4.1.3

                    ; Section 4.1.3 を見てください

   Mailbox        = Local-part "@" ( Domain / address-literal )

   Local-part     = Dot-string / Quoted-string
                  ; MAY be case-sensitive

                  ; 大文字/小文字を区別しても構いません(MAY)


   Dot-string     = Atom *("."  Atom)

   Atom           = 1*atext

   Quoted-string  = DQUOTE *QcontentSMTP DQUOTE

   QcontentSMTP   = qtextSMTP / quoted-pairSMTP

   quoted-pairSMTP  = %d92 %d32-126
                    ; i.e., backslash followed by any ASCII
                    ; graphic (including itself) or SPace

                    ; すなわち、バックスラッシュの後ろに表示可能 ASCII
                    ; (自身も含む)やスペース(SP)

   qtextSMTP      = %d32-33 / %d35-91 / %d93-126
                  ; i.e., within a quoted string, any
                  ; ASCII graphic or space is permitted
                  ; without blackslash-quoting except
                  ; double-quote and the backslash itself.

                  ; すなわち、ダブルクォートとそれ自身のバックスラッシュ
                  ; を除いてクォートされた文字列を含む、表示可能 ASCII
                  ; 文字やスペースはバックスラッシュなしで許容されます。

   String         = Atom / Quoted-string

   While the above definition for Local-part is relatively permissive,
   for maximum interoperability, a host that expects to receive mail
   SHOULD avoid defining mailboxes where the Local-part requires (or
   uses) the Quoted-string form or where the Local-part is case-
   sensitive.  For any purposes that require generating or comparing
   Local-parts (e.g., to specific mailbox names), all quoted forms MUST
   be treated as equivalent, and the sending system SHOULD transmit the
   form that uses the minimum quoting possible.

   最大限の相互運用性のために、Local-part について前述した定義は比較的
   自由です、メールを受信するのを期待するホストは Local-part が
   Quoted-string 形式を要求(もしくは使う)もしくは Local-part が大文字/
   小文字を区別するメールボックスを定義することを避けるべきです
   (SHOULD)。Local-parts の生成や比較を要求する(例えば、メールボックス
   名を特定するため)、いくつかの目的ですべてのクォートされた形式は同等
   に扱われなければいけません(MUST)、そして送信システムはできるかぎり最
   小のクォーティングで変換すべきです(SHOULD)。
   

   Systems MUST NOT define mailboxes in such a way as to require the use
   in SMTP of non-ASCII characters (octets with the high order bit set



Klensin                     Standards Track                    [Page 42]

RFC 5321                          SMTP                      October 2008


   to one) or ASCII "control characters" (decimal value 0-31 and 127).
   These characters MUST NOT be used in MAIL or RCPT commands or other
   commands that require mailbox names.

   システムはどのような方法でも ASCII でない(8ビットの最上位ビットが1に
   設定された)文字やASCII "制御文字"(10進の数値で 0-31 と 127) の SMTP
   で使用を必要とするメールボックスを定義してはいけません。(MUST NOT)
   これらの文字は MAIL や RCPT、 その他のメールボックス名を必要とするコ
   マンドで使用してはいけません(MUST NOT)。

   Note that the backslash, "\", is a quote character, which is used to
   indicate that the next character is to be used literally (instead of
   its normal interpretation).  For example, "Joe\,Smith" indicates a
   single nine-character user name string with the comma being the
   fourth character of that string.

   バックスラッシュ("\")はクォート文字で、次の文字が(通常の解釈の代わり
   に)文字通り使われることを示すということに留意してください。例えば、
   "Joe\,Smith" ではカンマは文字列の４番目の文字で、ひとつの９文字のユー
   ザー名の文字列を示します。

   To promote interoperability and consistent with long-standing
   guidance about conservative use of the DNS in naming and applications
   (e.g., see Section 2.3.1 of the base DNS document, RFC 1035 [2]),
   characters outside the set of alphabetic characters, digits, and
   hyphen MUST NOT appear in domain name labels for SMTP clients or
   servers.  In particular, the underscore character is not permitted.
   SMTP servers that receive a command in which invalid character codes
   have been employed, and for which there are no other reasons for
   rejection, MUST reject that command with a 501 response (this rule,
   like others, could be overridden by appropriate SMTP extensions).

   名前とアプリケーションでの DNS の保守的な使用(例えば、基本的な DNS
   文書の RFC 1035 [2] 中の Section 2.3.1を見てください。)については相
   互運用の進展ため、および、長年にわたって一貫して言っていることですが
   アルファベット、数値、およびハイフン以外の文字は SMTP クライアントや
   サーバでドメイン名ラベルに現われてはいけません(MUST NOT)。特にアンダー
   スコアは許可されていません。無効な文字コードを持つコマンドを受信した
   SMTP サーバは、501 応答(他と同じように、このルールは、適切なSMTP 拡
   張によって上書きすることができる)で拒否しなればいけません(MUST)。

4.1.3.  Address Literals
4.1.3.  アドレスリテラル

   Sometimes a host is not known to the domain name system and
   communication (and, in particular, communication to report and repair
   the error) is blocked.  To bypass this barrier, a special literal
   form of the address is allowed as an alternative to a domain name.
   For IPv4 addresses, this form uses four small decimal integers
   separated by dots and enclosed by brackets such as [123.255.37.2],
   which indicates an (IPv4) Internet Address in sequence-of-octets
   form.  For IPv6 and other forms of addressing that might eventually
   be standardized, the form consists of a standardized "tag" that
   identifies the address syntax, a colon, and the address itself, in a
   format specified as part of the relevant standards (i.e., RFC 4291
   [8] for IPv6).

   時々、ホストはドメインネームシステムに知られておらず、通信(特に報告
   とエラーを修正するための通信)が阻害されます。この阻害を避けるために、
   ドメイン名に代るものとして、アドレスの特別な文字形式が許されています。
   IPv4 アドレスはオクテット並び形式の (IPv4)インターネットアドレスで、
   この形式は [123.255.37.2] のようにドットで区切られ、括弧でくくられた
   小さな 10 進数を使用します。IPv6 とその他のアドレス形式 はようやく標
   準化されました、その形式は検討中の標準(例えば、IPv6 のための RFC
   4291 [8])の一部分として規定されており、アドレスの構文、コロン、アド
   レス自身を識別する標準化された "tag" から成ります。

   Specifically:
   具体的には

   IPv4-address-literal  = Snum 3("."  Snum)

   IPv6-address-literal  = "IPv6:" IPv6-addr

   General-address-literal  = Standardized-tag ":" 1*dcontent

   Standardized-tag  = Ldh-str
                     ; Standardized-tag MUST be specified in a
                     ; Standards-Track RFC and registered with IANA

                     ; 標準化タグは標準化過程 RFC で規定され、IANA に登
                     ; 録されなければいけません(MUST)




Klensin                     Standards Track                    [Page 43]

RFC 5321                          SMTP                      October 2008


   dcontent       = %d33-90 / ; Printable US-ASCII
                  %d94-126 ; excl. "[", "\", "]"

   Snum           = 1*3DIGIT
                  ; representing a decimal integer
                  ; value in the range 0 through 255

                  ; 0?255 までの十進数表記

   IPv6-addr      = IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp

   IPv6-hex       = 1*4HEXDIG

   IPv6-full      = IPv6-hex 7(":" IPv6-hex)

   IPv6-comp      = [IPv6-hex *5(":" IPv6-hex)] "::"
                  [IPv6-hex *5(":" IPv6-hex)]
                  ; The "::" represents at least 2 16-bit groups of
                  ; zeros.  No more than 6 groups in addition to the
                  ; "::" may be present.

                  ; "::" はたった二つで零の 16-bit 集合を表現します。
                  ; "::" があるとき、６グループ以上はない。

   IPv6v4-full    = IPv6-hex 5(":" IPv6-hex) ":" IPv4-address-literal

   IPv6v4-comp    = [IPv6-hex *3(":" IPv6-hex)] "::"
                  [IPv6-hex *3(":" IPv6-hex) ":"]
                  IPv4-address-literal
                  ; The "::" represents at least 2 16-bit groups of
                  ; zeros.  No more than 4 groups in addition to the
                  ; "::" and IPv4-address-literal may be present.

                  ; "::" はたった二つで零の 16-bit 集合を表現します。
                  ; "::" と IPv4アドレス文字列があるとき、４グループ以
                  ; 上はありません。

4.1.4.  Order of Commands
4.1.4.  コマンドの順番

   There are restrictions on the order in which these commands may be
   used.

   これらのコマンドが使用することできる順番には制限があります。

   A session that will contain mail transactions MUST first be
   initialized by the use of the EHLO command.  An SMTP server SHOULD
   accept commands for non-mail transactions (e.g., VRFY or EXPN)
   without this initialization.

   メールトランザクションを含むであろうセッションは最初に EHLO コマンド
   によって初期化されなればいけません(MUST)。SMTP サーバはこの初期化が
   なくてもメールトランザクションではないコマンド(すなわち、VRFY や
   EXPN)は受けいれるべきです(SHOULD)。

   An EHLO command MAY be issued by a client later in the session.  If
   it is issued after the session begins and the EHLO command is
   acceptable to the SMTP server, the SMTP server MUST clear all buffers
   and reset the state exactly as if a RSET command had been issued.  In
   other words, the sequence of RSET followed immediately by EHLO is
   redundant, but not harmful other than in the performance cost of
   executing unnecessary commands.

   EHLO コマンドはクライアントによってセッションの後のほうに発行されて
   も構いません(MAY)。セッションの開始後に発行された場合、 EHLO コマン
   ド は SMTP サーバに受けいれられ、SMTP サーバはまさに RSET コマンドを
   発行されたように、すべてのバッファをクリアし、状態をリセットしなけれ
   ばなりません(MUST)。言い換えれば、EHLO の後の RSET は重複であるとい
   うことです、ただ不要なコマンドの実行というパフォーマンスコスト以外は
   有害ではありません。

   If the EHLO command is not acceptable to the SMTP server, 501, 500,
   502, or 550 failure replies MUST be returned as appropriate.  The



Klensin                     Standards Track                    [Page 44]

RFC 5321                          SMTP                      October 2008


   SMTP server MUST stay in the same state after transmitting these
   replies that it was in before the EHLO was received.

   EHLO コマンドが SMTP サーバに受け入れられない場合、501, 500, 502 も
   しくは 550 の不成功応答が適切に返されなければなりません(MUST)。SMTP
   サーバはこれらの応答を伝えた後も EHLO を受信した以前と同じ状態に留ま
   らなければなりません(MUST)。

   The SMTP client MUST, if possible, ensure that the domain parameter
   to the EHLO command is a primary host name as specified for this
   command in Section 2.3.5.  If this is not possible (e.g., when the
   client's address is dynamically assigned and the client does not have
   an obvious name), an address literal SHOULD be substituted for the
   domain name.

   可能であれば、SMTP クライアントは、Section 2.3.5 で本コマンドに規定
   しているように EHLO コマンドのドメインパラメータが第一優先のホスト名
   であることを保証しなければいけません(MUST)。もしこれが不可能であれば
   (すなわち クライアントアドレスが動的に割りあてられていて、明確な名前
   がない)、アドレス文字列はドメイン名に置換すべきです(SHOULD)。

   An SMTP server MAY verify that the domain name argument in the EHLO
   command actually corresponds to the IP address of the client.
   However, if the verification fails, the server MUST NOT refuse to
   accept a message on that basis.  Information captured in the
   verification attempt is for logging and tracing purposes.  Note that
   this prohibition applies to the matching of the parameter to its IP
   address only; see Section 7.9 for a more extensive discussion of
   rejecting incoming connections or mail messages.

   SMTP サーバは EHLO コマンド引数のドメイン名が実際にそのクライアン
   トの IP アドレスと一致するか確認しても構いません(MAY)。しかし確認が
   失敗したからといって、サーバはそれを基準としてメッセージを受け入れ
   ることを拒否してはいけません(MUST NOT)。確認を試行して得られた情報は
   ロギングして追跡することを目的とします。これは唯一 IP アドレスのパラ
   メータのマッチングに適用することに留意してください。入ってくるコネク
   ションもしくはメールメッセージの拒否についてより広範囲な考察は
   Section 7.9 を見てください。

   The NOOP, HELP, EXPN, VRFY, and RSET commands can be used at any time
   during a session, or without previously initializing a session.  SMTP
   servers SHOULD process these normally (that is, not return a 503
   code) even if no EHLO command has yet been received; clients SHOULD
   open a session with EHLO before sending these commands.

   NOOP,HELP,EXPN,VRFY と RSET コマンドはセッション中、それより前にセッ
   ション初期化しないで、いつでも使用することができます。EHLO コマンド
   をまだ受信していないとしてもSMTP サーバはこれらを普通に(503 コード
   を返さずに)処理すべきです(SHOULD)、ただ、クライアントはこれらのコマ
   ンドの送信以前に EHLO でセッションを開くべきです(SHOULD)。

   If these rules are followed, the example in RFC 821 that shows "550
   access denied to you" in response to an EXPN command is incorrect
   unless an EHLO command precedes the EXPN or the denial of access is
   based on the client's IP address or other authentication or
   authorization-determining mechanisms.

   これらの規則に従うなら、 EHLO コマンドに先行した EXPN 、クライアント
   のIP アドレス、その他の認証、もしくは認証決定メカニズムに基づいたア
   クセス拒否でない限り、EXPN コマンドへ "550 access denied to you" で
   応答する RFC 821 の例は正しくありません。
   

   The MAIL command (or the obsolete SEND, SOML, or SAML commands)
   begins a mail transaction.  Once started, a mail transaction consists
   of a transaction beginning command, one or more RCPT commands, and a
   DATA command, in that order.  A mail transaction may be aborted by
   the RSET, a new EHLO, or the QUIT command.  There may be zero or more
   transactions in a session.  MAIL (or SEND, SOML, or SAML) MUST NOT be
   sent if a mail transaction is already open, i.e., it should be sent
   only if no mail transaction had been started in the session, or if
   the previous one successfully concluded with a successful DATA
   command, or if the previous one was aborted, e.g., with a RSET or new
   EHLO.

   MAIL コマンド (もしくはもう使われていない SEND、 SOML、SAML コマン
   ド)はメールトランザクションを開始します。一度開始されたら、メールト
   ランザクションはトランザクション開始コマンド、一つ以上の RCPT コマン
   ド、DATA コマンドの順で構成されます。メールトランザクションは RSET、
   新しい EHLO、もしくは QUIT コマンドによって中止されるでしょう。MAIL
   (もしくは SEND、SOML、SAML)コマンドは既に開始しているトランザクショ
   ンでは送信してはいけません(MUST NOT) 、すなわち、それはそのセッショ
   ンで開始されたメールトランザクションがない、以前のトランザクションが
   成功した DATA コマンドで成功して終わった、以前のトランザクションが
   (例えば RSET や 新しい EHLOで)中止された場合のみに送信すべきです。

   If the transaction beginning command argument is not acceptable, a
   501 failure reply MUST be returned and the SMTP server MUST stay in
   the same state.  If the commands in a transaction are out of order to
   the degree that they cannot be processed by the server, a 503 failure




Klensin                     Standards Track                    [Page 45]

RFC 5321                          SMTP                      October 2008


   reply MUST be returned and the SMTP server MUST stay in the same
   state.

   トランザクション開始コマンド引数が受け入れられなかった場合、 501 失
   敗の応答が返されるべきで(MUST)、SMTP サーバは同じ状態に留まらなけ
   ればなりません(MUST)。もしトランザクション中のコマンドがサーバによっ
   て処理することができない程不調な場合、 503 失敗の応答が返されるべき
   で(MUST)、SMTP サーバは同じ状態に留まらなければなりません(MUST)。



   The last command in a session MUST be the QUIT command.  The QUIT
   command SHOULD be used by the client SMTP to request connection
   closure, even when no session opening command was sent and accepted.

   セッションの最後のコマンドは QUIT コマンドでなくてはいけません
   (MUST)。たとえセッション開始コマンドが送信や受け入れられていなくても
   QUIT コマンドは SMTP クライアントによってコネクション閉鎖のために使
   用されるべきです(SHOULD)。

4.1.5.  Private-Use Commands
4.1.5.  プライベート使用のコマンド

   As specified in Section 2.2.2, commands starting in "X" may be used
   by bilateral agreement between the client (sending) and server
   (receiving) SMTP agents.  An SMTP server that does not recognize such
   a command is expected to reply with "500 Command not recognized".  An
   extended SMTP server MAY list the feature names associated with these
   private commands in the response to the EHLO command.

   Section 2.2.2 で規定されているように、"X" ではじまるコマンドはクライ
   アント(送信)とサーバ(受信)エージェント２者間の同意によって使用されて
   も構いません。そのようなコマンドを理解しない SMTP サーバは "500
   Command not recognized" で応答することが期待されるでしょう。拡張
   SMTP サーバは EHLO コマンドに対する応答でこれらのプライベートコマン
   ドに関連した特徴的な名前をリストアップしても構いません(MAY)。

   Commands sent or accepted by SMTP systems that do not start with "X"
   MUST conform to the requirements of Section 2.2.2.

   "X" ではじまらない SMTP システムによって送信や受信されるコマンドは
   Section 2.2.2 の条件を満たしていなければなりません(MUST)。

4.2.  SMTP Replies
4.2.  SMTPの応答

   Replies to SMTP commands serve to ensure the synchronization of
   requests and actions in the process of mail transfer and to guarantee
   that the SMTP client always knows the state of the SMTP server.
   Every command MUST generate exactly one reply.

   SMTP コマンドに対する応答は SMTP クライアントが常に SMTP サーバの
   状態を把握するのを保証するためにメール転送処理における要求と動作の同
   期を確かにする役目をします。すべてのコマンドは厳密に一つの応答を生成
   しなければなりません(MUST)。

   The details of the command-reply sequence are described in
   Section 4.3.

   コマンド応答順番の詳細は Section 4.3 に記述されています。

   An SMTP reply consists of a three digit number (transmitted as three
   numeric characters) followed by some text unless specified otherwise
   in this document.  The number is for use by automata to determine
   what state to enter next; the text is for the human user.  The three
   digits contain enough encoded information that the SMTP client need
   not examine the text and may either discard it or pass it on to the
   user, as appropriate.  Exceptions are as noted elsewhere in this
   document.  In particular, the 220, 221, 251, 421, and 551 reply codes
   are associated with message text that must be parsed and interpreted
   by machines.  In the general case, the text may be receiver dependent
   and context dependent, so there are likely to be varying texts for
   each reply code.  A discussion of the theory of reply codes is given
   in Section 4.2.1.  Formally, a reply is defined to be the sequence: a
   three-digit code, <SP>, one line of text, and <CRLF>, or a multiline
   reply (as defined in the same section).  Since, in violation of this
   specification, the text is sometimes not sent, clients that do not
   receive it SHOULD be prepared to process the code alone (with or
   without a trailing space character).  Only the EHLO, EXPN, and HELP
   commands are expected to result in multiline replies in normal



Klensin                     Standards Track                    [Page 46]

RFC 5321                          SMTP                      October 2008


   circumstances; however, multiline replies are allowed for any
   command.

   SMTP 応答は本書の他の場所で規定されていない限り 3桁の数字(3文字の数
   値に変換される)に続いていくつかのテキストから構成されます。数字は機
   械的に次の入力を決めるのに使用し、テキストは人間のユーザーのために使
   用します。3 桁の数値は SMTP クライアントがテキストを調べる必要があり
   ません。十分にコード化された情報を含みます。そしてテキストは必要に応
   じて捨てたり、ユーザーに渡しても構いません。例外は本書の他の場所で記
   述してあります。特に、220、221、251、421、および 551 の応答コードは
   メッセージテキストと関連付けられていて、それは機械によって解析され、
   通訳されなければいけません。大抵の場合、テキストは受信者や状況次第で
   しょう、ですのでそれぞれの応答コードに対してテキストはいろいろ変化す
   る可能性があります。応答コードの理論の考察は Section 4.2.1 でしてい
   ます。形式上、応答は順序が定義されています、３桁のコード,<SP>,１行の
   テキスト、<CRLF>、もしくは複数行の応答(同じセクションで定義されてい
   ます)です。テキストが本仕様に違反して、たまに送信されないのでそれを
   受信しないクライアントはコード単体でも(後に続くスペースがあってもな
   くても)処理するように備えるべきです(SHOULD)。EHLO、EXPN、及びHELP コ
   マンドだけは通常の状況で複数行の応答が生じるでしょう、しかしながら複
   数行の応答はどのコマンドでも認められています。

   In ABNF, server responses are:
   ABNF で サーバの応答は:

   Greeting       = ( "220 " (Domain / address-literal)
                  [ SP textstring ] CRLF ) /
                  ( "220-" (Domain / address-literal)
                  [ SP textstring ] CRLF
                  *( "220-" [ textstring ] CRLF )
                  "220" [ SP textstring ] CRLF )

   textstring     = 1*(%d09 / %d32-126) ; HT, SP, Printable US-ASCII

   Reply-line     = *( Reply-code "-" [ textstring ] CRLF )
                  Reply-code [ SP textstring ] CRLF

   Reply-code     = %x32-35 %x30-35 %x30-39

   where "Greeting" appears only in the 220 response that announces that
   the server is opening its part of the connection.  (Other possible
   server responses upon connection follow the syntax of Reply-line.)

   "Greeting" は サーバがコネクションの一部を開いたことをアナウンスする
   220 応答でだけ現われます。(その他のあり得るコネクション上のサーバ応
   答は Reply-line の構文に従います)

   An SMTP server SHOULD send only the reply codes listed in this
   document.  An SMTP server SHOULD use the text shown in the examples
   whenever appropriate.

   SMTP サーバは本書でリストされている応答コードのみを送信すべきです。
   SMTP サーバは適切なときは例で示したテキストを用いるべきです
   (SHOULD)。
   
   An SMTP client MUST determine its actions only by the reply code, not
   by the text (except for the "change of address" 251 and 551 and, if
   necessary, 220, 221, and 421 replies); in the general case, any text,
   including no text at all (although senders SHOULD NOT send bare
   codes), MUST be acceptable.  The space (blank) following the reply
   code is considered part of the text.  Whenever possible, a receiver-
   SMTP SHOULD test the first digit (severity indication) of the reply
   code.

   SMTP クライアントはその動作をテキストではなく(251 と 551の "アドレス
   の変更" や、必要であれば、220、221と421の応答を除く)応答コードによっ
   てだけで決めなければなりません(MUST)。大抵の場合、どんなテキスト、テ
   キストを全く含んでなくても(送信者は生コードを送信すべきではない
   (SHOULD NOT)けれども)、受け入れることができなくてはいけません(MUST)。
   応答コードにつづくスペース(ブランク)はテキストの一部とみなします。可
   能なときには、受信 SMTP は 応答コードの最初の桁(重要度通知)を検証す
   べきです(SHOULD)。

   The list of codes that appears below MUST NOT be construed as
   permanent.  While the addition of new codes should be a rare and
   significant activity, with supplemental information in the textual
   part of the response being preferred, new codes may be added as the
   result of new Standards or Standards-Track specifications.
   Consequently, a sender-SMTP MUST be prepared to handle codes not
   specified in this document and MUST do so by interpreting the first
   digit only.

   以下にあるコードのリストは永続的なものとして解析されてはいけません
   (MUST NOT)。新規のコードを追加するときは稀で重要な動作であるべきで、
   その応答のテキスト部分における補足情報が提示されます。新規のコードは
   新しい標準もしくは標準過程仕様の結果として追加されるでしょう。その結
   果として、送信者 SMTP は本書で規定されていないコードを扱う準備をしな
   ければなりません(MUST)、そしてそれは最初の桁のみを解釈することによっ
   て行われなければなりません(MUST)。
   

   In the absence of extensions negotiated with the client, SMTP servers
   MUST NOT send reply codes whose first digits are other than 2, 3, 4,




Klensin                     Standards Track                    [Page 47]

RFC 5321                          SMTP                      October 2008


   or 5.  Clients that receive such out-of-range codes SHOULD normally
   treat them as fatal errors and terminate the mail transaction.

   クライアントとの拡張の取り決めがない場合、SMTP サーバは最初の桁が
   2、3、4、5 以外の応答コードを送信してはいけません(MUST NOT)。そのよ
   うな範囲外のコードを自身するクライアントは通常それらを致命的なエラー
   トして扱い、メールトランザクションを終了すべきです(SHOULD)。

4.2.1.  Reply Code Severities and Theory
4.2.1.  応答コードの重要度と理論

   The three digits of the reply each have a special significance.  The
   first digit denotes whether the response is good, bad, or incomplete.
   An unsophisticated SMTP client, or one that receives an unexpected
   code, will be able to determine its next action (proceed as planned,
   redo, retrench, etc.) by examining this first digit.  An SMTP client
   that wants to know approximately what kind of error occurred (e.g.,
   mail system error, command syntax error) may examine the second
   digit.  The third digit and any supplemental information that may be
   present is reserved for the finest gradation of information.

   応答の３桁の数字それぞれはとても重要です。最初の桁は応答が良いか、悪
   いか、もしくは不完全であるかを示す。単純な SMTP クライアント、もしく
   は予期せぬコードを受信する SMTP クライアントは、この最初の桁を評価す
   ることによって、次の動作(計画通りに進む、再実行する、削除するなど)を
   決定することができるでしょう。発生したエラーのおおよその種類(たとえ
   ば、メールシステムのエラーなのか、コマンド構文のエラーなのか)を知り
   たい SMTP クライアントは２桁目を評価するでしょう。３桁目および表示さ
   れているであろういくつかの補足的な情報は、情報の細かい分類のために確
   保されています。
   

   There are four values for the first digit of the reply code:
   応答コードの最初の桁には４つの値がある:

   2yz  Positive Completion reply
      The requested action has been successfully completed.  A new
      request may be initiated.

   2yz  肯定完了応答
      要求された動作が成功して完了しています。新しい要求を始めても構い
      ません。


   3yz  Positive Intermediate reply
      The command has been accepted, but the requested action is being
      held in abeyance, pending receipt of further information.  The
      SMTP client should send another command specifying this
      information.  This reply is used in command sequence groups (i.e.,
      in DATA).

   3yz 肯定中間応答
      コマンドは受け入れられていますが要求動作は途中で中止しています、
      さらなる情報の受信を待っています。SMTP クライアントはこの情報が示
      している他のコマンドを送信すべきです。この応答はコマンド順序の集
      合の中で用いられます。(すなわち DATA コマンドで)


   4yz  Transient Negative Completion reply
      The command was not accepted, and the requested action did not
      occur.  However, the error condition is temporary, and the action
      may be requested again.  The sender should return to the beginning
      of the command sequence (if any).  It is difficult to assign a
      meaning to "transient" when two different sites (receiver- and
      sender-SMTP agents) must agree on the interpretation.  Each reply
      in this category might have a different time value, but the SMTP
      client SHOULD try again.  A rule of thumb to determine whether a
      reply fits into the 4yz or the 5yz category (see below) is that
      replies are 4yz if they can be successful if repeated without any
      change in command form or in properties of the sender or receiver
      (that is, the command is repeated identically and the receiver
      does not put up a new implementation).

   4yz 一時的否定完了応答
      コマンドは受け入れられなかったので、要求された動作は実行しません
      でした。しかし、エラー状態は一時的もので、その動作は再び要求する
      ことができます。(もしあれば)送信者はコマンド順序の最初に戻るべき
      です。二つの異なるサイト(受信と送信の SMTP エージェント) で解釈に
      ついて同意しなければならないので、"一時的な"の意味を割りあてるの
      は難しいです。この区分のそれぞれの応答は異なる時間的価値を持って
      いるでしょう、しかし SMTP クライアントは再度試行すべきです。4yz
      もしくは 5yz(下記参照) どちらの区分に合わせるか決定するルールはコ
      マンド形式 もしくは送信者、受信者の属性の変更を一切せずに繰り返し
      た場合、成功する可能性のある場合、応答は 4yz です(それはつまり、
      コマンドが完全に同じように繰り返され、受信者が新しい実装を提供し
      ないということです)。

    
   5yz  Permanent Negative Completion reply
      The command was not accepted and the requested action did not
      occur.  The SMTP client SHOULD NOT repeat the exact request (in
      the same sequence).  Even some "permanent" error conditions can be
      corrected, so the human user may want to direct the SMTP client to



Klensin                     Standards Track                    [Page 48]

RFC 5321                          SMTP                      October 2008


      reinitiate the command sequence by direct action at some point in
      the future (e.g., after the spelling has been changed, or the user
      has altered the account status).

   5yz  恒久的否定完了応答
      コマンドは受け入れられなかったので、要求された動作は実行しません
      でした。SMTP クライアントは強引に要求(同じ並びの中で)を繰り返すべ
      きではありません(SHOULD NOT)。よければ将来のある時点で、いくらか
      の"恒久的な"エラー状態でさえ修正することができます、人間ユーザー
      が SMTP クライアントに直接的な動作によってコマンド順を再初期化す
      るを命令してください(例えば、綴りを変えたり、ユーザーのアカウント
      状態を変えたりしたあと)。

   It is worth noting that the file transfer protocol (FTP) [34] uses a
   very similar code architecture and that the SMTP codes are based on
   the FTP model.  However, SMTP uses a one-command, one-response model
   (while FTP is asynchronous) and FTP's 1yz codes are not part of the
   SMTP model.

   ファイル転送プロトコル(FTP) [34]はとても似たコード形態を使います、な
   ぜなら SMTP コードは FTP のモデルに基づいているからです。そのことは
   注目する価値があります。しかしながら、SMTP では 一コマンド、一応答モ
   デル(FTP は非同期です)を用いており、そして FTP の 1yz コードは SMTP
   モデルにはありません。


   The second digit encodes responses in specific categories:
   ２桁目は固有の分類で応答を符号化します：

   x0z  Syntax: These replies refer to syntax errors, syntactically
      correct commands that do not fit any functional category, and
      unimplemented or superfluous commands.

   x0z  構文:これらの応答は構文エラー、構文的には正しいコマンドだけどの
   機能分類にも一致しない、実装されていないまたは不適切なコマンドである
   ことを示す応答です。

   x1z  Information: These are replies to requests for information, such
      as status or help.

   x1z  情報:これらは状態やヘルプのような情報の要求に対する応答です。

   x2z  Connections: These are replies referring to the transmission
      channel.

   x2z  コネクション:これらは伝送チャネルについて示している応答です。

   x3z  Unspecified.

   x3z  決まっていない。

   x4z  Unspecified.

   x4z  決まっていない。

   x5z  Mail system: These replies indicate the status of the receiver
      mail system vis-a-vis the requested transfer or other mail system
      action.

   x5z メールシステム:これらの応答は要求を送信もしくはその他のメールシ
       ステムの動作に対する受信メールシステムの状態を示す応答です。

   The third digit gives a finer gradation of meaning in each category
   specified by the second digit.  The list of replies illustrates this.
   Each reply text is recommended rather than mandatory, and may even
   change according to the command with which it is associated.  On the
   other hand, the reply codes must strictly follow the specifications
   in this section.  Receiver implementations should not invent new
   codes for slightly different situations from the ones described here,
   but rather adapt codes already defined.

   ３桁目はそれぞれ２桁目により決められた分類より細かい分類を表わします。
   応答のリストはこれを説明します。それぞれの応答テキストは義務というよ
   りはむしろ推奨で、それに関連したコマンドによって変わるかもしれません。
   一方、応答コードはこのセクションの仕様に厳密に従わなくてはいけません
   (MUST)。受信者の実装はここに記述のあるのとわずかに異る状況で、新規の
   コードをつくるべきではありません、それよりは既に定義されているコード
   に適合させるべきです。

   For example, a command such as NOOP, whose successful execution does
   not offer the SMTP client any new information, will return a 250
   reply.  The reply is 502 when the command requests an unimplemented
   non-site-specific action.  A refinement of that is the 504 reply for
   a command that is implemented, but that requests an unimplemented
   parameter.

   例えば、NOOP コマンドのような、成功した処理が SMTP クライアントに新
   規の情報を提供しないものには 250 応答を返すでしょう。コマンド要求が
   実装されていないサイト特有でない動作の場合、その応答は 502 です。そ
   れを改良して、コマンド自体は実装されているが、パラメータが実装されて
   いないという場合は 504 の応答です。



Klensin                     Standards Track                    [Page 49]

RFC 5321                          SMTP                      October 2008


   The reply text may be longer than a single line; in these cases the
   complete text must be marked so the SMTP client knows when it can
   stop reading the reply.  This requires a special format to indicate a
   multiple line reply.

   応答テキストは１行以上かもしれません、これらのケースではいつ応答を読
   むのをやめるか SMTP クライアントが知るために、全てのテキストはマーク
   されなければいけません。これは複数行応答が示す特別な書式を必要としま
   す。
   
   The format for multiline replies requires that every line, except the
   last, begin with the reply code, followed immediately by a hyphen,
   "-" (also known as minus), followed by text.  The last line will
   begin with the reply code, followed immediately by <SP>, optionally
   some text, and <CRLF>.  As noted above, servers SHOULD send the <SP>
   if subsequent text is not sent, but clients MUST be prepared for it
   to be omitted.

   複数行応答の形式は最後の行を除く全ての行で必要とし、応答コードではじ
   まり、ハイフン "-" (マイナスとしても知られています)がすぐ続き、その
   あとにテキストがつづきます。最後の行は応答コードではじまり、そのすぐ
   後に <SP>、任意でなんらかのテキスト、<CRLF> がつづきます。前述したよ
   うに、サーバはテキストを送信しない場合 <SP> を送信すべきです
   (SHOULD)、しかしクライアントはそれらが省略されることに備えなければな
   りません(MUST)。

   For example:
   例えば:

      250-First line
      250-Second line
      250-234 Text beginning with numbers
      250 The last line

   In a multiline reply, the reply code on each of the lines MUST be the
   same.  It is reasonable for the client to rely on this, so it can
   make processing decisions based on the code in any line, assuming
   that all others will be the same.  In a few cases, there is important
   data for the client in the reply "text".  The client will be able to
   identify these cases from the current context.

   複数行の応答では、それぞれの行の応答コードは同じでなくてはなりません
   (MUST)。それはクライアントがその他全てが同じだと仮定し、どの行のコー
   ドによって処理の決定をすることができることを当てにしているためです。
   ２、３のケースで、応答"テキスト"はクライアントにとって重要なデータが
   あります。クライアントは文脈からこれらのケースを識別することができる
   でしょう。

4.2.2.  Reply Codes by Function Groups
4.2.2.  機能グループによる応答コード

   500  Syntax error, command unrecognized (This may include errors such
      as command line too long)

   500  構文エラー、コマンドが認められていません(コマンドラインが長すぎ
       るような場合も含んでも構いません。)

   501  Syntax error in parameters or arguments

   501  パラメータや引数での構文エラー

   502  Command not implemented (see Section 4.2.4)

   502  コマンドが実装されていません(Section 4.2.4 を見てください)

   503  Bad sequence of commands

   503  コマンドの順序が誤っています

   504  Command parameter not implemented

   504  コマンドパラメータが実装されていません

   211  System status, or system help reply

   211  システム状態やシステム支援の応答

   214  Help message (Information on how to use the receiver or the
      meaning of a particular non-standard command; this reply is useful
      only to the human user)

   214  ヘルプメッセージ(どのように受信側を使用するかや、特定の標準でな
       いコマンドの意味です。この応答は人間のユーザだけに役立ちます。)




Klensin                     Standards Track                    [Page 50]

RFC 5321                          SMTP                      October 2008


   220  <domain> Service ready

   220  <domain> のサービスが準備できています

   221  <domain> Service closing transmission channel

   221  <domain> のサービスは伝送チャネルを閉じます

   421  <domain> Service not available, closing transmission channel
      (This may be a reply to any command if the service knows it must
      shut down)

   421  <domain> のサービスは利用できません、伝送チャネルを閉じます(これ
       はサービスがシャットダウンしなければならない場合、どんなコマンド
       の応答に対しても返して構いません)

   250  Requested mail action okay, completed

   250  要求されたメールの動作はうまくいって、完了した

   251  User not local; will forward to <forward-path> (See Section 3.4)

   251  ユーザはローカルにはいません、<forward-path> に転送します
       (Section 3.4 を見てください)

   252  Cannot VRFY user, but will accept message and attempt delivery
      (See Section 3.5.3)

   252 ユーザを VRFY することはできませんが、メッセージは受けいれて、配
       送を試みます(Section 3.5.3 を見てください)

   455  Server unable to accommodate parameters

   455  サーバはパラメータに対応できません

   555  MAIL FROM/RCPT TO parameters not recognized or not implemented

   555 MAIL FROM/RCPT TO のパラメータが認められていないか実装されていま
       せん


   450  Requested mail action not taken: mailbox unavailable (e.g.,
      mailbox busy or temporarily blocked for policy reasons)

   450  メールボックスが利用できないため(例えば、メールボックスが使用中
       であったり、ポリシーの理由で一時的にブロックされたなど)要求され
       たメールの動作ができません

   550  Requested action not taken: mailbox unavailable (e.g., mailbox
      not found, no access, or command rejected for policy reasons)

   550  メールボックスが利用できないため(例えば、メールボックスがなかっ
       たり、アクセスできなかったり、ポリシーの理由でコマンドが拒否され
       たなど)要求された動作ができません

   451  Requested action aborted: error in processing

   451  要求された動作は中断されました。処理中にエラーが発生しました

   551  User not local; please try <forward-path> (See Section 3.4)

   551  ユーザはローカルにはいません。<forward-path> を試みてください
       (Section 3.4 を見てください)

   452  Requested action not taken: insufficient system storage

   452  システムの記憶容量不足のため、要求された動作はできません

   552  Requested mail action aborted: exceeded storage allocation

   552  記憶容量の割当てを超えたため、要求されたメールの動作はできません

   553  Requested action not taken: mailbox name not allowed (e.g.,
      mailbox syntax incorrect)

   553  メールボックスの名前が許可されていない(例えば、構文が正しくない
       など)ため、要求されて動作はできません

   354  Start mail input; end with <CRLF>.<CRLF>

   354  メールの入力を開始してください、<CRLF>.<CRLF>で終了してください

   554  Transaction failed (Or, in the case of a connection-opening
      response, "No SMTP service here")

   554 トランザクションは失敗しました(もしくはコネクション開始時に、
       "SMTP サービスはありません" の応答で)










Klensin                     Standards Track                    [Page 51]

RFC 5321                          SMTP                      October 2008


4.2.3.  Reply Codes in Numeric Order
4.2.3.  番号順の応答コード

   211  System status, or system help reply

   211  システム状態やシステム支援の応答

   214  Help message (Information on how to use the receiver or the
      meaning of a particular non-standard command; this reply is useful
      only to the human user)

   214 ヘルプメッセージ(どのように受信側を使用するかや、特定の標準でな
       いコマンドの意味です。この応答は人間のユーザだけに役立ちます。)

   220  <domain> Service ready

   220  <domain> のサービスが準備できています

   221  <domain> Service closing transmission channel

   221  <domain> のサービスは伝送チャネルを閉じます

   250  Requested mail action okay, completed

   250  要求されたメールの動作はうまくいって、完了した

   251  User not local; will forward to <forward-path> (See Section 3.4)

   251  ユーザはローカルにはいません、<forward-path> に転送します
       (Section 3.4 を見てください)

   252  Cannot VRFY user, but will accept message and attempt delivery
      (See Section 3.5.3)

   252  ユーザを VRFY することはできませんが、メッセージは受けいれて、配
       送を試みます(Section 3.5.3 を見てください)

   354  Start mail input; end with <CRLF>.<CRLF>

   354  メールの入力を開始してください、<CRLF>.<CRLF>で終了してください

   421  <domain> Service not available, closing transmission channel
      (This may be a reply to any command if the service knows it must
      shut down)

   421  <domain> のサービスは利用できません、伝送チャネルを閉じます(これ
       はサービスがシャットダウンしなければならない場合、どんなコマンド
       の応答に対しても返して構いません)

   450  Requested mail action not taken: mailbox unavailable (e.g.,
      mailbox busy or temporarily blocked for policy reasons)

   450  メールボックスが利用できないため(例えば、メールボックスが使用中
      であったり、ポリシーの理由で一時的にブロックされたなど)要求された
      メールの動作ができません

   451  Requested action aborted: local error in processing

   451  要求された動作は中断されました。処理中にエラーが発生しました

   452  Requested action not taken: insufficient system storage

   452  システムの記憶容量不足のため、要求された動作はできません

   455  Server unable to accommodate parameters

   455  サーバはパラメータに対応できません

   500  Syntax error, command unrecognized (This may include errors such
      as command line too long)

   500  構文エラー、コマンドが認められていません(コマンドラインが長すぎ
       るような場合も含んでも構いません。)

   501  Syntax error in parameters or arguments

   501  パラメータや引数での構文エラー

   502  Command not implemented (see Section 4.2.4)

   502  コマンドが実装されていません(Section 4.2.4 を見てください)

   503  Bad sequence of commands

   503  コマンドの順序が誤っています

   504  Command parameter not implemented

   504  コマンドパラメータが実装されていません

   550  Requested action not taken: mailbox unavailable (e.g., mailbox
      not found, no access, or command rejected for policy reasons)

   550  メールボックスが利用できないため(例えば、メールボックスがなかっ
       たり、アクセスできなかったり、ポリシーの理由でコマンドが拒否され
       たなど)要求された動作ができません





Klensin                     Standards Track                    [Page 52]

RFC 5321                          SMTP                      October 2008


   551  User not local; please try <forward-path> (See Section 3.4)

   551  ユーザはローカルにはいません。<forward-path> を試みてください
       (Section 3.4 を見てください)

   552  Requested mail action aborted: exceeded storage allocation

   552  記憶容量の割当てを超えたため、要求されたメールの動作はできません

   553  Requested action not taken: mailbox name not allowed (e.g.,
      mailbox syntax incorrect)

   553  メールボックスの名前が許可されていない(例えば、構文が正しくない
       など)ため、要求されて動作はできません

   554  Transaction failed (Or, in the case of a connection-opening
      response, "No SMTP service here")

   554  トランザクションは失敗しました(もしくはコネクション開始時に、
       "SMTP サービスはありません" の応答で)

   555  MAIL FROM/RCPT TO parameters not recognized or not implemented

   555  MAIL FROM/RCPT TO のパラメータが認められていないか実装されていま
       せん


4.2.4.  Reply Code 502
4.2.4.  502 応答コード

   Questions have been raised as to when reply code 502 (Command not
   implemented) SHOULD be returned in preference to other codes. 502
   SHOULD be used when the command is actually recognized by the SMTP
   server, but not implemented.  If the command is not recognized, code
   500 SHOULD be returned.  Extended SMTP systems MUST NOT list
   capabilities in response to EHLO for which they will return 502 (or
   500) replies.

   502 の応答コードが返されるような(コマンドが実装されていない)とき、そ
   れは他のコードよりも優先して返されるべき(SHOULD)かということについ、
   質問が提起されています。502 は コマンドが実際に SMTP サーバに解釈
   され、実装されていなかったときに用いれるべきです(SHOULD)。もしコマ
   ンドが解釈されていない場合、500 のコードが返されるべきです(SHOULD)。
   拡張された SMTP システムは EHLO への応答でそれらが 502 (もしくは
   500) 応答を返す機能をリストしてはいけません(MUST NOT)。

4.2.5.  Reply Codes after DATA and the Subsequent <CRLF>.<CRLF>
4.2.5.  データと <CRLF>.<CRLF> 後の応答コード

   When an SMTP server returns a positive completion status (2yz code)
   after the DATA command is completed with <CRLF>.<CRLF>, it accepts
   responsibility for:

   SMTP サーバが DATA コマンドが <CRLF>.<CRLF> で完了した後に、肯定的な
   完了状態(2yz コード)をかえすとき、それは以下の責任を負う。

   o  delivering the message (if the recipient mailbox exists), or

      メッセージを配送すること(受信メールボックスが存在していれば)

   o  if attempts to deliver the message fail due to transient
      conditions, retrying delivery some reasonable number of times at
      intervals as specified in Section 4.5.4.

      メッセージの配送を試行して一時的な状態によって失敗した場合、
      4.5.4 で規定されている間隔の時間のいくらかの相応の回数配送をリト
      ライすること。

   o  if attempts to deliver the message fail due to permanent
      conditions, or if repeated attempts to deliver the message fail
      due to transient conditions, returning appropriate notification to
      the sender of the original message (using the address in the SMTP
      MAIL command).

      メッセージの配送を試行して恒久的な状態によって失敗した場合、もし
      くは一時的な状態で失敗したメッセージの再送を試行を繰り返した場合、
      適切な通知を元のメールの送信者に対して返すこと(SMTP MAIL コマンド
      でのアドレスを使用)。

   When an SMTP server returns a temporary error status (4yz) code after
   the DATA command is completed with <CRLF>.<CRLF>, it MUST NOT make a
   subsequent attempt to deliver that message.  The SMTP client retains
   responsibility for the delivery of that message and may either return
   it to the user or requeue it for a subsequent attempt (see
   Section 4.5.4.1).

   SMTP サーバが DATA コマンドが <CRLF>.<CRLF>で完了した後に一時的なエ
   ラー状態 (4yz) を返すとき、その後にそのメッセージを配送しようとして
   はいけません(MUST NOT)。SMTP クライアントはそのメッセージの配送に対
   する責任を保持し、ユーザーへ返すか、次の試行のためにリキューします
   (Section 4.5.4.1 を見てください)。





Klensin                     Standards Track                    [Page 53]

RFC 5321                          SMTP                      October 2008


   The user who originated the message SHOULD be able to interpret the
   return of a transient failure status (by mail message or otherwise)
   as a non-delivery indication, just as a permanent failure would be
   interpreted.  If the client SMTP successfully handles these
   conditions, the user will not receive such a reply.

   メッセージを生成したユーザーは恒久的な障害を解釈するのと同じように、
   一時的な障害状態のリターンを配送不可通知として(メールメッセージや他
   の手段によって)、解釈することができるべきです(SHOULD)。もしクライア
   ントの SMTP がこれらの状態をうまく扱う場合、ユーザーはそのような応答
   を受信しないでしょう。
   

   When an SMTP server returns a permanent error status (5yz) code after
   the DATA command is completed with <CRLF>.<CRLF>, it MUST NOT make
   any subsequent attempt to deliver the message.  As with temporary
   error status codes, the SMTP client retains responsibility for the
   message, but SHOULD not again attempt delivery to the same server
   without user review of the message and response and appropriate
   intervention.

   SMTP サーバが恒久的なエラー状態(5yz)コードを DATA コマンドが
   <CRLF>.<CRLF> で完了した後に返すとき、その後にそのメッセージを配送し
   ようとしてはいけません(MUST NOT)。一時的なエラー状態コードと同じよう
   に、SMTP クライアントはメッセージに対する責任を保持し、ユーザーがメッ
   セージや応答の再検討や適切な介入することなしには同じサーバに対して
   配送しようとするべきではありません(SHOULD NOT)。

4.3.  Sequencing of Commands and Replies
4.3.  コマンドの順序と応答

4.3.1.  Sequencing Overview
4.3.1.  順序づけの概要

   The communication between the sender and receiver is an alternating
   dialogue, controlled by the sender.  As such, the sender issues a
   command and the receiver responds with a reply.  Unless other
   arrangements are negotiated through service extensions, the sender
   MUST wait for this response before sending further commands.  One
   important reply is the connection greeting.  Normally, a receiver
   will send a 220 "Service ready" reply when the connection is
   completed.  The sender SHOULD wait for this greeting message before
   sending any commands.

   送信者と受信者の間の通信は交互の会話であり、送信者によってコントロー
   ルされます。故に、送信者がコマンドを発行し、受信者が応答で答えます。
   その他の処理がサービス拡張で取り決めされていない限り、送信者はさらな
   るコマンドを送信する前に今回のコマンドの応答を待たなければいけません
   (MUST)。重要な応答の一つはコネクショングリーティングです。通常、受信
   者はコネクションが完了したときに 220 "Service ready" 応答を送信しま
   す。送信者はどんなコマンドを送信する以前にこのグリーティングメッセー
   ジを待つべきです(SHOULD)。

   Note: all the greeting-type replies have the official name (the
   fully-qualified primary domain name) of the server host as the first
   word following the reply code.  Sometimes the host will have no
   meaningful name.  See Section 4.1.3 for a discussion of alternatives
   in these situations.

   重要:すべてのグリーティングの応答は応答コードにつづく最初の語句とし
   て公式なサーバホストの名前を持ちます(完全修飾ドメイン名)。たまに、ホ
   ストは意味のある名前を持っていない。この状況でかわりに使える方法の考
   察は Section 4.1.3 を見てください。

   For example,
   例えば、

      220 ISIF.USC.EDU Service ready

   or

      220 mail.example.com SuperSMTP v 6.1.2 Service ready

   or

      220 [10.0.0.1] Clueless host service ready

   The table below lists alternative success and failure replies for
   each command.  These SHOULD be strictly adhered to.  A receiver MAY



Klensin                     Standards Track                    [Page 54]

RFC 5321                          SMTP                      October 2008


   substitute text in the replies, but the meanings and actions implied
   by the code numbers and by the specific command reply sequence MUST
   be preserved.

   下記にリストしたテーブルはそれぞれのコマンドに対する成功または失敗の
   応答です。これらは厳密に守られるべきです(SHOULD)。受信者は代わりのテ
   キストを応答しても構いません(MAY)。しかし、コード番号と特定のコマン
   ド応答順によって実装された意味と動作は保たれなければいけません
   (MUST)。

   

4.3.2.  Command-Reply Sequences
4.3.2.  コマンド応答順序

   Each command is listed with its usual possible replies.  The prefixes
   used before the possible replies are "I" for intermediate, "S" for
   success, and "E" for error.  Since some servers may generate other
   replies under special circumstances, and to allow for future
   extension, SMTP clients SHOULD, when possible, interpret only the
   first digit of the reply and MUST be prepared to deal with
   unrecognized reply codes by interpreting the first digit only.
   Unless extended using the mechanisms described in Section 2.2, SMTP
   servers MUST NOT transmit reply codes to an SMTP client that are
   other than three digits or that do not start in a digit between 2 and
   5 inclusive.

   それぞれのコマンドは通常のあり得る応答とともにリスト化されます。あり
   得る応答の前にプレフィックスは使われ、"I" は中間、"S" は成功、 "E"は
   エラーです。将来的な拡張で許可されるとして、特別な状況下であるサーバ
   がその他の応答を生成するかもしれない場合、SMTP クライアントは可能で
   あれば応答の最初の桁だけを解釈すべき(SHOULD)で、応答コードの最初の桁
   を解釈することだけによって、解釈できない応答コードを処理するように備
   えなければいけません(MUST)。Section 2.2 に記載した拡張メカニズムを使
   用しない限り、SMTP サーバーは SMTP クライアントへの応答コードを３桁
   以外や２から５の間で始まらない数値に変換してはいけません(MUST NOT)。

   These sequencing rules and, in principle, the codes themselves, can
   be extended or modified by SMTP extensions offered by the server and
   accepted (requested) by the client.  However, if the target is more
   precise granularity in the codes, rather than codes for completely
   new purposes, the system described in RFC 3463 [25] SHOULD be used in
   preference to the invention of new codes.

   原則として、これらの順序のルールとそれ自身コードは、サーバによって提
   供され、クライアントによって受けいれられた(要求された)SMTP 拡張によっ
   て拡張されたり変更されたりします。しかしながら、対象がより正確で細か
   いコードの場合、完全に新しい目的のコードよりむしろ、RFC 3463 [25] に
   記載されているシステムが新しいコードをつくることよりも優先して用いら
   れるべきです(SHOULD)。

   In addition to the codes listed below, any SMTP command can return
   any of the following codes if the corresponding unusual circumstances
   are encountered:

   以下にリストされたコードに加えて、通常でない状況への対応をする場合、
   どの SMTP コマンドも以下のコードどれでも返すことができます。


   500  For the "command line too long" case or if the command name was
      not recognized.  Note that producing a "command not recognized"
      error in response to the required subset of these commands is a
      violation of this specification.  Similarly, producing a "command
      too long" message for a command line shorter than 512 characters
      would violate the provisions of Section 4.5.3.1.4.

   500 "command line too long"、もしくはコマンドが解釈できない場合のた
       めです。要求されたコマンドの一部に対する応答で "command not
       recognized" エラーを発生することは本仕様に違反しているということ
       に注意してください。同様に、512 文字より短いコマンドに対する
       "command too long" メッセージの発生は Section 4.5.3.1.4 の規定に
       違反となるでしょう。

   501  Syntax error in command or arguments.  In order to provide for
      future extensions, commands that are specified in this document as
      not accepting arguments (DATA, RSET, QUIT) SHOULD return a 501
      message if arguments are supplied in the absence of EHLO-
      advertised extensions.

   501 コマンドまたは引数の構文エラー。将来の拡張で供給するために、引数
       を受けつけないように本書で規定されたコマンド(DATA、RSET、QUIT)は、
       もしEHLO の拡張広告がなく引数が与えられたのであれば、501 メッセー
       ジを返すべきです。

   421  Service shutting down and closing transmission channel

   421  サービスをシャットダウンして、伝送チャネルを閉じます。








Klensin                     Standards Track                    [Page 55]

RFC 5321                          SMTP                      October 2008


   Specific sequences are:

      CONNECTION ESTABLISHMENT

         S: 220
         E: 554

      EHLO or HELO

         S: 250
         E: 504 (a conforming implementation could return this code only
         in fairly obscure cases), 550, 502 (permitted only with an old-
         style server that does not support EHLO)

         E: 504((仕様に)合致している実装はこのコードをかなり不明瞭な状
            況でのみ返すことができる)、550、502、(EHLO がをサポートして
            いない古いスタイルのサーバだけ許可される)

      MAIL

         S: 250
         E: 552, 451, 452, 550, 553, 503, 455, 555

      RCPT

         S: 250, 251 (but see Section 3.4 for discussion of 251 and 551)
         E: 550, 551, 552, 553, 450, 451, 452, 503, 455, 555

         S: 250, 251 (ただし、251 と 551 の考察は Section 3.4. を見てください)

      DATA

         I: 354 -> data -> S: 250

                           E: 552, 554, 451, 452

                           E: 450, 550 (rejections for policy reasons)
                                        ポリシーによる理由での拒否

         E: 503, 554

      RSET

         S: 250

      VRFY

         S: 250, 251, 252
         E: 550, 551, 553, 502, 504

      EXPN

         S: 250, 252
         E: 550, 500, 502, 504




Klensin                     Standards Track                    [Page 56]

RFC 5321                          SMTP                      October 2008


      HELP

         S: 211, 214
         E: 502, 504

      NOOP

         S: 250

      QUIT

         S: 221

4.4.  Trace Information
4.4.  追跡情報

   When an SMTP server receives a message for delivery or further
   processing, it MUST insert trace ("time stamp" or "Received")
   information at the beginning of the message content, as discussed in
   Section 4.1.1.4.

   SMTP サーバは配信のためもしくは、さらなる処理のためにメッセージを受
   信したとき、Section 4.1.1.4 で記述されているように、メッセージ内容の先
   頭にメッセージ追跡("time stamp" はたは "Received")情報を挿入しなけれ
   ばいけません(MUST)。
   

   This line MUST be structured as follows:

   この行は以下のような構造でなればいけません(MUST):

   o  The FROM clause, which MUST be supplied in an SMTP environment,
      SHOULD contain both (1) the name of the source host as presented
      in the EHLO command and (2) an address literal containing the IP
      address of the source, determined from the TCP connection.

      SMTP 環境で提供されなければならない(MUST) FROM 節は EHLO で表わさ
      れた (1) 送信元ホストの名前と送信元のIPアドレスを含んだ (2) アド
      レス文字列の両方を含むべきです(SHOULD)。

   o  The ID clause MAY contain an "@" as suggested in RFC 822, but this
      is not required.

      ID 節は RFC 822 で提案されているような "@" を含んでも構いません
      (MAY)が、必須ではありません。

   o  If the FOR clause appears, it MUST contain exactly one <path>
      entry, even when multiple RCPT commands have been given.  Multiple
      <path>s raise some security issues and have been deprecated, see
      Section 7.2.

      FOR 節が現われた場合、 たとえ複数の RCPT コマンドが与えられたとし
      ても、必ず一つの <path> エントリーを含まなければいけません(MUST)。
      複数の<path> はセキュリティ問題を引きおこすので推奨されていません。
      それについては Section 7.2 を見てください。


   An Internet mail program MUST NOT change or delete a Received: line
   that was previously added to the message header section.  SMTP
   servers MUST prepend Received lines to messages; they MUST NOT change
   the order of existing lines or insert Received lines in any other
   location.

   インターネットメールプログラムはメッセージヘッダ部分にあらかじめ追加
   された Received: 行を変更したり消去したりしてはいけません(MUST NOT)。
   SMTP サーバはメッセージに Received 行を追加しなければいません(MUST)、
   それらは既に存在している行の順番を変えたり、決められた場所以外には
   Received: 行を挿入してはいけません(MUST NOT)。

   As the Internet grows, comparability of Received header fields is
   important for detecting problems, especially slow relays.  SMTP
   servers that create Received header fields SHOULD use explicit
   offsets in the dates (e.g., -0800), rather than time zone names of
   any type.  Local time (with an offset) SHOULD be used rather than UT
   when feasible.  This formulation allows slightly more information
   about local circumstances to be specified.  If UT is needed, the



Klensin                     Standards Track                    [Page 57]

RFC 5321                          SMTP                      October 2008


   receiver need merely do some simple arithmetic to convert the values.
   Use of UT loses information about the time zone-location of the
   server.  If it is desired to supply a time zone name, it SHOULD be
   included in a comment.

   インターネットの普及にともない、Received ヘッダフィールドの比較は(特
   に遅い中継の)問題を見つけるのに重要です。Received ヘッダフィールドを
   生成した SMTP サーバは日付では、ある型のタイムゾーン名よりむしろ、明
   確なオフセットを使うべきです(例えば -0800 のような)(SHOULD)。可能で
   あればUT(世界標準時)よりも、(オフセットと共に)ローカル時刻が用いられ
   るべきです(SHOULD)。この規則は規定されたローカルの状況について少し情
   報を許容します。もし UT が必要であれば、受信者は単にいくらか単純な計
   算をして、値を変換するだけです。UT を用いるとサーバのzone-location
   時間についての情報を失います。もしタイムゾーン名を提供したいのであれ
   ば、コメント内に含めるべきです(SHOULD)。
   
   When the delivery SMTP server makes the "final delivery" of a
   message, it inserts a return-path line at the beginning of the mail
   data.  This use of return-path is required; mail systems MUST support
   it.  The return-path line preserves the information in the <reverse-
   path> from the MAIL command.  Here, final delivery means the message
   has left the SMTP environment.  Normally, this would mean it had been
   delivered to the destination user or an associated mail drop, but in
   some cases it may be further processed and transmitted by another
   mail system.

   配信 SMTP サーバはメッセージの "最終的な配信" をしようとするとき、
   return-path 行をメールデータの先頭に挿入します。return-path の使用は
   必要とされ、メールシステムはそれをサポートしなければいけません
   (MUST)。return-path 行は MAIL コマンドによる <reverse-path> 中の情報
   を保存します。ここで最終的な配信とは SMTP 環境から出ることを意味して
   います。通常、これは目的のユーザーもしくは関連した郵便受けに配送する
   ことを意味しています、しかしあるケースでは他のメールシステムによって
   さらに処理され、変換されるかもしれません。

   It is possible for the mailbox in the return path to be different
   from the actual sender's mailbox, for example, if error responses are
   to be delivered to a special error handling mailbox rather than to
   the message sender.  When mailing lists are involved, this
   arrangement is common and useful as a means of directing errors to
   the list maintainer rather than the message originator.

   リターンパスでのメールボックスが実際の送信者のメールボックスと異なる
   ことは有り得ます。例えば、エラー応答が配送されたメッセージの送信者よ
   りもむしろエラーを処理する特別なメールボックスに配送される場合です。
   メーリングリストに関する場合、この処理はエラーをメッセージの送信者で
   はなく、メーリングリストの保守者へ向けるのに役立つとしてよく使われま
   す。

   The text above implies that the final mail data will begin with a
   return path line, followed by one or more time stamp lines.  These
   lines will be followed by the rest of the mail data: first the
   balance of the mail header section and then the body (RFC 5322 [4]).

   上記の文章は、最後のメールデータはリターンパスで開始されており、それ
   以下に一つないしはそれ以上のタイムスタンプ行が続いているであろう、と
   いうことを示しています。メールデータの残りはこれらの行の後につづくで
   しょう。最初にメールヘッダ部分の残りと、その次に本文です(RFC 5322
   [4])。

   It is sometimes difficult for an SMTP server to determine whether or
   not it is making final delivery since forwarding or other operations
   may occur after the message is accepted for delivery.  Consequently,
   any further (forwarding, gateway, or relay) systems MAY remove the
   return path and rebuild the MAIL command as needed to ensure that
   exactly one such line appears in a delivered message.

   最終的な配送となるのかならないのかを判断するのは、メッセージが配送と
   して受け入れられた後に転送やその他の動作が発生するかもしれないので、
   SMTP サーバにとって時として難解です。その結果、さならる(転送や、ゲー
   トウェイや中継)システムは必要に応じて、配送メッセージの中で確実に当
   該の１行が現われるのを保障するためにリターンパスを削除して、MAIL コ
   マンドを再構築しても構いません(MAY)。

   A message-originating SMTP system SHOULD NOT send a message that
   already contains a Return-path header field.  SMTP servers performing
   a relay function MUST NOT inspect the message data, and especially
   not to the extent needed to determine if Return-path header fields
   are present.  SMTP servers making final delivery MAY remove Return-
   path header fields before adding their own.

   メッセージを生成した SMTP システムは前もって Return-path ヘッダフィー
   ルドを含んだメッセージを送信するべきではありません(SHOULD NOT)。中継
   として機能する SMTP サーバはメッセージデータを検査してはいけません
   (MUST NOT)、そして特にそこに Return-path ヘッダフィールドが存在する
   かどうかを確認することを必要としません。最終的な配送をする SMTP サー
   バは自身が Return-path ヘッダフィルドを付け足す前にそれを削除しても
   構いません(MAY)。

   The primary purpose of the Return-path is to designate the address to
   which messages indicating non-delivery or other mail system failures
   are to be sent.  For this to be unambiguous, exactly one return path
   SHOULD be present when the message is delivered.  Systems using RFC
   822 syntax with non-SMTP transports SHOULD designate an unambiguous
   address, associated with the transport envelope, to which error
   reports (e.g., non-delivery messages) should be sent.

   Return-path の第一の目的は配送不可もしくは他のメールシステム障害の通
   知するメッセージを送信するアドレスを指定するためです。メッセージが配
   送されたとき、厳密に一つのリターンパスが存在するべき(SHOULD)であるこ
   とは明白です。SMTP でない転送で RFC 822 構文を用いているシステムはエ
   ラー報告(例えば配送不可通知)を送信すべきための配送エンベロープに関連
   した明確なアドレスを指定すべきです(SHOULD)。



Klensin                     Standards Track                    [Page 58]

RFC 5321                          SMTP                      October 2008


   Historical note: Text in RFC 822 that appears to contradict the use
   of the Return-path header field (or the envelope reverse-path address
   from the MAIL command) as the destination for error messages is not
   applicable on the Internet.  The reverse-path address (as copied into
   the Return-path) MUST be used as the target of any mail containing
   delivery error messages.

   過去の注意：RFC822 でのエラーメッセージの宛先としてのReturn-path ヘッ
   ダーフィールド(や MAIL コマンドでのエンベロープ reverse-path アドレ
   ス)の使用に矛盾するように思われる文章はインターネットでは当てはまり
   ません。(Return-path にコピーされたような) reverse-path アドレスはエ
   ラーメッセージの配送を含むどんなメールの対象としても使用されなければ
   なりません(MUST)。



   In particular:
   とりわけ

   o  a gateway from SMTP -> elsewhere SHOULD insert a return-path
      header field, unless it is known that the "elsewhere" transport
      also uses Internet domain addresses and maintains the envelope
      sender address separately.

      SMTP → 他のどこかへのゲートウェイは "ほかのどこか" もインターネッ
      トドメインアドレスを使って転送し、エンベロープの送信者アドレスを
      独立して保持するということがわかっていない限りは return-path ヘッ
      ダフィールドを挿入するべきです(SHOULD)。
      

   o  a gateway from elsewhere -> SMTP SHOULD delete any return-path
      header field present in the message, and either copy that
      information to the SMTP envelope or combine it with information
      present in the envelope of the other transport system to construct
      the reverse-path argument to the MAIL command in the SMTP
      envelope.

      他のどこか → SMTP へのゲートウェイは、メッセージ中の
      return-path ヘッダフィールドを消去し、SMTP エンベロープの MAIL
      コマンドでのreverse-path の引数を構成するために、その情報を SMTP
      のエンベロープへコピーするか、他の転送システムのエンベロープに存
      在している情報を組み合わせるべきです(SHOULD)
      

   The server must give special treatment to cases in which the
   processing following the end of mail data indication is only
   partially successful.  This could happen if, after accepting several
   recipients and the mail data, the SMTP server finds that the mail
   data could be successfully delivered to some, but not all, of the
   recipients.  In such cases, the response to the DATA command MUST be
   an OK reply.  However, the SMTP server MUST compose and send an
   "undeliverable mail" notification message to the originator of the
   message.

   サーバはメールデータの終端通知につづく処理が部分的にだけ成功してい
   る場合には特別な扱いをすべきです。これはいくらかの受信者がメールデー
   タを受信した後に、SMTP サーバが受信者のすべてではなく、一部の配送
   が成功することがわかったときに発生するかも知れません。そのようなケー
   スでは、DATA コマンドに対する応答は OK で返さなければなりません
   (MUST)。また一方で SMTP サーバは "配送不能メール" 通知メッセージを
   作成し、メッセージの生成元へ送信しなればなりません(MUST)。

   A single notification listing all of the failed recipients or
   separate notification messages MUST be sent for each failed
   recipient.  For economy of processing by the sender, the former
   SHOULD be used when possible.  Note that the key difference between
   handling aliases (Section 3.9.1) and forwarding (this subsection) is
   the change to the backward-pointing address in this case.  All
   notification messages about undeliverable mail MUST be sent using the
   MAIL command (even if they result from processing the obsolete SEND,
   SOML, or SAML commands) and MUST use a null return path as discussed
   in Section 3.6.

   失敗した受信者のすべてが記載されている単独の通知、もしくは個々の通知
   メッセージはそれぞれ失敗した受信者へ送信されなければなりません。
   (MUST) 送信者による処理の節約のために、可能であれば前者を用いるべき
   です(SHOULD)。別名を扱うこと(Section 3.9.1)と転送すること(本サブセク
   ション)の重要な違いは、この場合では逆方向を指し示すアドレスへ変化す
   るということに注意してください。全ての配送不可メールについての通知メッ
   セージ MAIL コマンドを使って(それらが古い SEND、SOML もしくはSAML コ
   マンドの処理から生じた場合でも)送信されなければなりません(MUST)。そ
   して、Section 3.6 で論じたように null のリターンパスを使用しなければ
   いけません(MUST)。

   
   The time stamp line and the return path line are formally defined as
   follows (the definitions for "FWS" and "CFWS" appear in RFC 5322
   [4]):

   タイムスタンプおよびリターンパス行は下記のように形式的に定義される
   ("FWS" と "CFWS" についての定義は RFC 5322[4] にあります):

   Return-path-line  = "Return-Path:" FWS Reverse-path <CRLF>

   Time-stamp-line  = "Received:" FWS Stamp <CRLF>



Klensin                     Standards Track                    [Page 59]

RFC 5321                          SMTP                      October 2008


   Stamp          = From-domain By-domain Opt-info [CFWS] ";"
                  FWS date-time
                  ; where "date-time" is as defined in RFC 5322 [4]
                  ; but the "obs-" forms, especially two-digit
                  ; years, are prohibited in SMTP and MUST NOT be used.

                  ; "date-time" は RFC 5322 [4] として定義されています
                  ; "obs-" 形式ですが、特に 2桁の年


   From-domain    = "FROM" FWS Extended-Domain

   By-domain      = CFWS "BY" FWS Extended-Domain

   Extended-Domain  = Domain /
                    ( Domain FWS "(" TCP-info ")" ) /
                    ( address-literal FWS "(" TCP-info ")" )

   TCP-info       = address-literal / ( Domain FWS address-literal )
                  ; Information derived by server from TCP connection
                  ; not client EHLO.

                  ; クライアントの EHLO での情報ではなく、サーバで TCP
                  ; コネクションから導き出します

                  

   Opt-info       = [Via] [With] [ID] [For]
                  [Additional-Registered-Clauses]

   Via            = CFWS "VIA" FWS Link

   With           = CFWS "WITH" FWS Protocol

   ID             = CFWS "ID" FWS ( Atom / msg-id )
                  ; msg-id is defined in RFC 5322 [4]

                  ; msg-id は RFC 5322 [4] で規定されています。

   For            = CFWS "FOR" FWS ( Path / Mailbox )

   Additional-Registered-Clauses  = CFWS Atom FWS String
                                  ; Additional standard clauses may be
                                  added in this
                                  ; location by future standards and
                                  registration with
                                  ; IANA.  SMTP servers SHOULD NOT use
                                  unregistered
                                  ; names.  See Section 8.

                                  ; 付加的な標準節は将来的な標準とIANA
                                  ; に登録によってこの場所に追加しても
                                  ; 構いません。SMTP サーバは登録されて
                                  ; いない名前を使用すべきではありませ
                                  ; ん(SHOULD NOT) Section 8 を見てくだ
                                  ; さい。

   Link           = "TCP" / Addtl-Link

   Addtl-Link     = Atom
                  ; Additional standard names for links are
                  ; registered with the Internet Assigned Numbers
                  ; Authority (IANA).  "Via" is primarily of value
                  ; with non-Internet transports.  SMTP servers
                  ; SHOULD NOT use unregistered names.

                  ; 接続のための付加的な標準名は IANA に登録されていま
                  ; す。"Via" は主としてインターネット転送でない値です。
                  ; SMTP サーバは登録されていない名前を使用すべきでは
                  ; ありません。(SHOULD NOT)




Klensin                     Standards Track                    [Page 60]

RFC 5321                          SMTP                      October 2008


   Protocol       = "ESMTP" / "SMTP" / Attdl-Protocol

   Attdl-Protocol = Atom
                  ; Additional standard names for protocols are
                  ; registered with the Internet Assigned Numbers
                  ; Authority (IANA) in the "mail parameters"
                  ; registry [9].  SMTP servers SHOULD NOT
                  ; use unregistered names.

                  ; プロトコルの付加的な標準名は IANA の "mail
                  ; parameters" 登記簿 [9] に登録されます。SMTP サーバー
                  ; は登録されていない名前を使用すべきではありません。
                  ; (SHOULD NOT)


4.5.  Additional Implementation Issues
4.5.  さらなる実装の問題

4.5.1.  Minimum Implementation
4.5.1.  最小実装

   In order to make SMTP workable, the following minimum implementation
   MUST be provided by all receivers.  The following commands MUST be
   supported to conform to this specification:

   SMTP を動作させるために、次の最小実装が全ての受信者によって提供され
   なければいけません(MUST)。以下のコマンドは本仕様に適合するためにサポー
   トされなければなりません(MUST)。

      EHLO
      HELO
      MAIL
      RCPT
      DATA
      RSET
      NOOP
      QUIT
      VRFY

   Any system that includes an SMTP server supporting mail relaying or
   delivery MUST support the reserved mailbox "postmaster" as a case-
   insensitive local name.  This postmaster address is not strictly
   necessary if the server always returns 554 on connection opening (as
   described in Section 3.1).  The requirement to accept mail for
   postmaster implies that RCPT commands that specify a mailbox for
   postmaster at any of the domains for which the SMTP server provides
   mail service, as well as the special case of "RCPT TO:<Postmaster>"
   (with no domain specification), MUST be supported.

   メールの中継や配送をサポートしている SMTP サーバを含むいくつかのシス
   テムは予約されたメールボックスである "postmaster" を大文字小文字区別
   なしのローカル名としてサポートしなければなりません(MUST)。このポスト
   マスターアドレスはサーバが常にコネクション開始時に 554 を返す場合
   (Section 3.1 に記述したように)は厳密には必要ではありません。ポストマ
   スターに対するメールを受けつけるための条件は SMTP サーバがメールサー
   ビスを提供するドメイン、および"RCPT TO:<Postmaster>"(ドメイン指定な
   し) の特別な場合で RCPT コマンドが指定するポストマスターのメールボッ
   クスをサポートしなければいけない(MUST)ことを示しています。

   SMTP systems are expected to make every reasonable effort to accept
   mail directed to Postmaster from any other system on the Internet.
   In extreme cases -- such as to contain a denial of service attack or
   other breach of security -- an SMTP server may block mail directed to
   Postmaster.  However, such arrangements SHOULD be narrowly tailored
   so as to avoid blocking messages that are not part of such attacks.

   SMTP システムはどの他のインターネット上のシステムからポストマスター
   宛てのメールを受けつけるために最大限それ相応の努力をするでしょう。
   サービス停止攻撃もしくはその他のセキュリティ破りのような極端な例では、
   SMTP サーバはポストマスター宛てのメールをブロックしても構いません
   (MAY)。しかし、そのような処理はそのような攻撃ではないメッセージをブ
   ロックするようなことを避けるようにぎりぎりのところで調整すべきです
   (SHOULD)。









Klensin                     Standards Track                    [Page 61]

RFC 5321                          SMTP                      October 2008


4.5.2.  Transparency
4.5.2.  透過性

   Without some provision for data transparency, the character sequence
   "<CRLF>.<CRLF>" ends the mail text and cannot be sent by the user.
   In general, users are not aware of such "forbidden" sequences.  To
   allow all user composed text to be transmitted transparently, the
   following procedures are used:

   文字シーケンス "<CRLF>.<CRLF>" はメールテキストを終了させるものであ
   り、いくつかのデータ透過性のため規定がなくては、ユーザーによって送信
   されることはできません。一般的に、ユーザーはそのような "禁じられた"
   順序は意識していません。すべてのユーザーが透過的に送信されるテキスト
   を書くことを認めるために以下の手順が用いられます。


   o  Before sending a line of mail text, the SMTP client checks the
      first character of the line.  If it is a period, one additional
      period is inserted at the beginning of the line.

      メールテキストの行を送る前に、SMTP クライアントはその行の最初の文
      字をチェックします。それがピリオドの場合、その行の最初に追加で一
      つピリオドを挿入します。

   o  When a line of mail text is received by the SMTP server, it checks
      the line.  If the line is composed of a single period, it is
      treated as the end of mail indicator.  If the first character is a
      period and there are other characters on the line, the first
      character is deleted.

      SMTP サーバでメールテキストの行を受信したとき、行をチェックしま
      す。一つのピリオドで構成されている行の場合、それはメールの終端通
      知として扱います。最初の文字がピリオドで、その行にその他の文字が
      ある場合は、最初のピリオドを消去します。

   The mail data may contain any of the 128 ASCII characters.  All
   characters are to be delivered to the recipient's mailbox, including
   spaces, vertical and horizontal tabs, and other control characters.
   If the transmission channel provides an 8-bit byte (octet) data
   stream, the 7-bit ASCII codes are transmitted, right justified, in
   the octets, with the high-order bits cleared to zero.  See
   Section 3.6 for special treatment of these conditions in SMTP systems
   serving a relay function.

   メールデータは 128 の ASCII 文字のどれを含んでも構いません。スペース
   や、垂直タブ、水平タブ、その他の制御文字を含んだ、全ての文字は受信者
   のメールボックスへ配送されます。伝送チャネルが 8-bit バイト (オクテッ
   ト)データストリームを供給している場合、7-bit ASCII コードはオクテッ
   トの中で最上位ビットがゼロにクリアされ、右詰めされて、送信されます。
   SMTP システムが供給するリレー機能でこれらの条件の特別な扱いについて
   は Section 3.6 を見てください。

   In some systems, it may be necessary to transform the data as it is
   received and stored.  This may be necessary for hosts that use a
   different character set than ASCII as their local character set, that
   store data in records rather than strings, or which use special
   character sequences as delimiters inside mailboxes.  If such
   transformations are necessary, they MUST be reversible, especially if
   they are applied to mail being relayed.

   いくつかのシステムでは、データが受信され、保存されるときに変換する必
   要があるかもしれません。これは ホストのローカル文字セットとして
   ASCII とは異なった文字セットを使用しているホストに必要かもしれません。
   それは文字列というよりは、レコードに保存したり、特別なメールボックス
   内部におけるデリミタとしての文字シーケンスを使うようなホストです。そ
   のような変換が必要な場合、それらは可逆性がなくてはなりません(MUST)、
   特にそれらは中継されているメールに対して適用されます。
   

4.5.3.  Sizes and Timeouts
4.5.3.  サイズとタイムアウト

4.5.3.1.  Size Limits and Minimums
4.5.3.1.  サイズの制限と最小

   There are several objects that have required minimum/maximum sizes.
   Every implementation MUST be able to receive objects of at least
   these sizes.  Objects larger than these sizes SHOULD be avoided when
   possible.  However, some Internet mail constructs such as encoded
   X.400 addresses (RFC 2156 [35]) will often require larger objects.
   Clients MAY attempt to transmit these, but MUST be prepared for a
   server to reject them if they cannot be handled by it.  To the
   maximum extent possible, implementation techniques that impose no
   limits on the length of these objects should be used.

   いくらかのオブジェクトは最小/最大サイズを必要とします。全ての実装は
   すくなくともこれらのサイズは受信することができなくてはいけません。
   (MUST)可能であれば、これらのサイズより大きなオブジェクトは無効にさせ
   るべきです(SHOULD)。しかし、いくつかのインターネットメールの構成では
   よく、コード化された X.400 アドレス(RFC 2156 [35])のようなより大きな
   オブジェクトを必要とするでしょう。クライアントはこれらの変換を試みて
   も構いません(MAY)、しかしそれを扱うことのできないサーバは拒否するよ
   うに備えなければいけません(MUST)。可能な最大範囲で、これらのオブジェ
   クトの長さを制限しない実装テクニックを用いるべきです。



Klensin                     Standards Track                    [Page 62]

RFC 5321                          SMTP                      October 2008

   Extensions to SMTP may involve the use of characters that occupy more
   than a single octet each.  This section therefore specifies lengths
   in octets where absolute lengths, rather than character counts, are
   intended.
   SMTP の拡張はそれぞれ１オクテットより大きな文字の使用を伴うかもしれ
   ません。したがって、本セクションでは長さを文字数より絶対的なオクテッ
   トで意図的に示しています。

4.5.3.1.1.  Local-part
4.5.3.1.1.  ローカルパート

   The maximum total length of a user name or other local-part is 64
   octets.

   ユーザー名もしくはその他 local-part の最大長は 64 オクテットです。

4.5.3.1.2.  Domain
4.5.3.1.2.  ドメイン

   The maximum total length of a domain name or number is 255 octets.

   ドメインの名前や数値の最大長は 255 オクテットです。

4.5.3.1.3.  Path
4.5.3.1.3.  パス

   The maximum total length of a reverse-path or forward-path is 256
   octets (including the punctuation and element separators).

   reverse-path や forward-path の最大長は 256 オクテットです(点や区切
   り要素を含みます)。

4.5.3.1.4.  Command Line
4.5.3.1.4.  コマンド行

   The maximum total length of a command line including the command word
   and the <CRLF> is 512 octets.  SMTP extensions may be used to
   increase this limit.

   コマンドと <CRLF> を含むコマンド行の最大長は 512 オクテットです。SMTP
   拡張はこの制限を増やすために使われるかもしれません。
   
4.5.3.1.5.  Reply Line
4.5.3.1.5.  応答行

   The maximum total length of a reply line including the reply code and
   the <CRLF> is 512 octets.  More information may be conveyed through
   multiple-line replies.

   応答コードと <CRLF> を含む応答行の最大長は 512 オクテットです。より
   多くの情報は複数行の応答で伝えても構いません。

4.5.3.1.6.  Text Line
4.5.3.1.6.  テキスト行

   The maximum total length of a text line including the <CRLF> is 1000
   octets (not counting the leading dot duplicated for transparency).
   This number may be increased by the use of SMTP Service Extensions.

   <CRLF> を含むテキスト行の最大長は 1000 オクテットです(透過性のために
   付けられた複製した先頭のドットはカウントしません)。この数値は SMTP
   サービス拡張の使用によって増加するかもしれません。

4.5.3.1.7.  Message Content
4.5.3.1.7.  メッセージ内容

   The maximum total length of a message content (including any message
   header section as well as the message body) MUST BE at least 64K
   octets.  Since the introduction of Internet Standards for multimedia
   mail (RFC 2045 [21]), message lengths on the Internet have grown
   dramatically, and message size restrictions should be avoided if at
   all possible.  SMTP server systems that must impose restrictions
   SHOULD implement the "SIZE" service extension of RFC 1870 [10], and
   SMTP client systems that will send large messages SHOULD utilize it
   when possible.

   メッセージ内容の最大長(メッセージヘッダ部分とメッセージ本文を含みま
   す)は少なくとも 64K オクテットにされなければなりません(MUST)。マルチ
   メディアメール(RFC 2054 [21])のインターネット標準が登場して以来、メッ
   セージ長は劇的に大きくなったので、メッセージサイズの制限は可能な限り
   避けるべきです。制限を課す SMTP サーバシステムは RFC 1870 の"SIZE"
   サービス拡張を実装すべきで(SHOULD)、大きなメッセージを送信しようとす
   る SMTP クライアントシステムは可能であればそれを利用すべきです
   (SHOULD)。
   



Klensin                     Standards Track                    [Page 63]

RFC 5321                          SMTP                      October 2008


4.5.3.1.8.  Recipients Buffer
4.5.3.1.8.  受信バッファ

   The minimum total number of recipients that MUST be buffered is 100
   recipients.  Rejection of messages (for excessive recipients) with
   fewer than 100 RCPT commands is a violation of this specification.
   The general principle that relaying SMTP server MUST NOT, and
   delivery SMTP servers SHOULD NOT, perform validation tests on message
   header fields suggests that messages SHOULD NOT be rejected based on
   the total number of recipients shown in header fields.  A server that
   imposes a limit on the number of recipients MUST behave in an orderly
   fashion, such as rejecting additional addresses over its limit rather
   than silently discarding addresses previously accepted.  A client
   that needs to deliver a message containing over 100 RCPT commands
   SHOULD be prepared to transmit in 100-recipient "chunks" if the
   server declines to accept more than 100 recipients in a single
   message.

   バッファリングされなければいけない(MUST)受信者の最小数は 100 受信者
   です。100 未満の RCPT コマンドでのメッセージで、(過度の受信者のた
   め)メッセージの拒絶は本仕様に違反します。一般的な原則として中継する
   SMTP サーバはメッセージヘッダフィールドの確認テストを行ってはいけま
   せん(MUST NOT)し、配送する SMTP サーバは行うべきでは(SHOULD NOT)あり
   ません、それはヘッダフィールドの受信者総数に基づいて、メッセージを拒
   否すべきでない(SHOULD NOT)ことを示しています。受信者の数で制限を課す
   サーバは以前受け入れたアドレスを無言で破棄するような方法より、追加す
   るアドレスが制限を超えたら拒絶するような、規則正しい方法で振る舞わな
   ければなりません(MUST)。サーバが一つのメッセージ内で100 より大きい受
   信者の受け入れを断わる場合、100 RCPT コマンドを超えるメッセージを配
   送する必要があるクライアントは 100 受信者毎の "かたまり" に変換する
   ように備えるべきです(SHOULD)。


4.5.3.1.9.  Treatment When Limits Exceeded
4.5.3.1.9.  制限を超えたときの扱い

   Errors due to exceeding these limits may be reported by using the
   reply codes.  Some examples of reply codes are:

   これらの制限を超えることによるエラーは応答コードを用いて報告されるで
   しょう。応答コードのいくつかの例：

   

      500 Line too long.

   or

      501 Path too long

   or

      452 Too many recipients (see below)

   or

      552 Too much mail data.

4.5.3.1.10.  Too Many Recipients Code
4.5.3.1.10.  あまりに多くの受信者コード

   RFC 821 [1] incorrectly listed the error where an SMTP server
   exhausts its implementation limit on the number of RCPT commands
   ("too many recipients") as having reply code 552.  The correct reply
   code for this condition is 452.  Clients SHOULD treat a 552 code in
   this case as a temporary, rather than permanent, failure so the logic
   below works.

   RFC 821 は SMTP サーバが RCPT コマンド("あまりに多くの受信者")の数で
   その実装の制限を使いはたした場合は応答コード 552 をとるとして、エラー
   について不正確な記載をしました。この状況での正確な応答コードは452 で
   す。クライアントはこの場合の 552 コードは永続的な障害というよりは、
   一時的な障害として扱うべき(SHOULD)で、以下のロジックが働きます。



   When a conforming SMTP server encounters this condition, it has at
   least 100 successful RCPT commands in its recipients buffer.  If the
   server is able to accept the message, then at least these 100


Klensin                     Standards Track                    [Page 64]

RFC 5321                          SMTP                      October 2008


   addresses will be removed from the SMTP client's queue.  When the
   client attempts retransmission of those addresses that received 452
   responses, at least 100 of these will be able to fit in the SMTP
   server's recipients buffer.  Each retransmission attempt that is able
   to deliver anything will be able to dispose of at least 100 of these
   recipients.

   SMTP サーバがこの状況になったとき、受信者バッファに最低でも 100 の成
   功した RCPT コマンドがあります。サーバがメッセージを受け入れることが
   できれば、その時、少なくとも 100 のアドレスは SMTP クライアントの
   キューから削除されるでしょう。クライアントは 452 応答を受信した、ア
   ドレスの再送を試みるとき、少なくともこれらのうちの 100 は SMTP サーバ
   の受信者バッファに収まることができるでしょう。なにか配送することがで
   きるそれぞれの再送の試みは少なくとも 100 の受信者を処理することができ
   るでしょう。

   If an SMTP server has an implementation limit on the number of RCPT
   commands and this limit is exhausted, it MUST use a response code of
   452 (but the client SHOULD also be prepared for a 552, as noted
   above).  If the server has a configured site-policy limitation on the
   number of RCPT commands, it MAY instead use a 5yz response code.  In
   particular, if the intent is to prohibit messages with more than a
   site-specified number of recipients, rather than merely limit the
   number of recipients in a given mail transaction, it would be
   reasonable to return a 503 response to any DATA command received
   subsequent to the 452 (or 552) code or to simply return the 503 after
   DATA without returning any previous negative response.

   SMTP サーバで RCPT コマンドの数上の制限があり、この制限を超えた場合、
   452の応答コードを用いなければいけません(MUST)(ただし、前述したように
   クライアントは 552 に対する準備もしておくべきです(SHOULD))。サーバに
   RCPT コマンド数上の設定されたサイトポリシーの制限がある場合、替わり
   に 5yz 応答コードを用いても構いません。特に、単に与えられたメールト
   ランザクションで受信者の数を制限するというよりむしろ、サイトが定めた
   受信者の数以上のメッセージを拒否するという意図の場合、452(もしくは
   552)コードの後に受信したどんな DATA コマンドにも 503 の応答を返した
   り、それ以前に否定応答を返すことをしないで、単に DATA の後に 503 を
   返すことが道理でしょう。

4.5.3.2.  Timeouts
4.5.3.2.  タイムアウト

   An SMTP client MUST provide a timeout mechanism.  It MUST use per-
   command timeouts rather than somehow trying to time the entire mail
   transaction.  Timeouts SHOULD be easily reconfigurable, preferably
   without recompiling the SMTP code.  To implement this, a timer is set
   for each SMTP command and for each buffer of the data transfer.  The
   latter means that the overall timeout is inherently proportional to
   the size of the message.

   SMTP クライアントはタイムアウトメカニズムを提供しなればなりません
   (MUST)。それはどうにかして全体のメールトランザクションの時間を測るよ
   りは、コマンド毎のタイムアウトを用いなければいけません(MUST)。タイム
   アウトはできれば SMTP のソースコードを再コンパイルすることなく簡単に
   再設定できるようにすべきです(SHOULD)。これを実装することは、SMTP コ
   マンド毎と、データ転送のバッファ毎にタイマーは設定されます。後者の全
   体のタイムアウトは本来メッセージのサイズに異例していることを意味して
   います。

   Based on extensive experience with busy mail-relay hosts, the minimum
   per-command timeout values SHOULD be as follows:

   活動的なメール中継ホストでの広範な経験に基づいて、コマンド毎の最小タ
   イムアウトは以下のようにすべきです(SHOULD)。

4.5.3.2.1.  Initial 220 Message: 5 Minutes
4.5.3.2.1.  最初の 220 メッセージ: 5分

   An SMTP client process needs to distinguish between a failed TCP
   connection and a delay in receiving the initial 220 greeting message.
   Many SMTP servers accept a TCP connection but delay delivery of the
   220 message until their system load permits more mail to be
   processed.

   SMTP クライアントプロセスは 220 のグリーティングメッセージ受信で、
   TCP コネクションの失敗と遅延を区別する必要があります。多くの SMTP サー
   バーはシステム負荷がさらなるメールの処理を許容できるまで TCP コネク
   ションを受けいれますが、 220 メッセージの配送が遅延します。

4.5.3.2.2.  MAIL Command: 5 Minutes
4.5.3.2.2.  MAIL コマンド: 5分

4.5.3.2.3.  RCPT Command: 5 Minutes
4.5.3.2.3.  RCPT コマンド: 5分


   A longer timeout is required if processing of mailing lists and
   aliases is not deferred until after the message was accepted.

   メーリングリストと別名の処理がメッセージが受信された後まで延ばされな
   いのであれば、より長いタイムアウトが求められます。



Klensin                     Standards Track                    [Page 65]

RFC 5321                          SMTP                      October 2008


4.5.3.2.4.  DATA Initiation: 2 Minutes
4.5.3.2.4.  データの開始: 2分

   This is while awaiting the "354 Start Input" reply to a DATA command.

   これは DATA コマンドへの "354 Start Input" 応答を待つ時間です。

4.5.3.2.5.  Data Block: 3 Minutes
4.5.3.2.5.  データブロック: 3分

   This is while awaiting the completion of each TCP SEND call
   transmitting a chunk of data.

   これはデータのかたまりを送信するそれぞれの TCP SEND の呼びだしの成立
   を待つ時間です。

4.5.3.2.6.  DATA Termination: 10 Minutes.
4.5.3.2.6.  DATA の終了: 10分

   This is while awaiting the "250 OK" reply.  When the receiver gets
   the final period terminating the message data, it typically performs
   processing to deliver the message to a user mailbox.  A spurious
   timeout at this point would be very wasteful and would typically
   result in delivery of multiple copies of the message, since it has
   been successfully sent and the server has accepted responsibility for
   delivery.  See Section 6.1 for additional discussion.

   これは "250 OK" を待つ時間です。受信者がメッセージデータを終了する最
   後のピリオドを受信したとき、一般的にはメッセージをユーザーのメールボッ
   クスへ配送する処理が機能します。この時点での誤ったタイムアウトはとて
   も無駄で、それはうまく送信されサーバが配送の責任を引き受けたので、
   大体はメッセージが複数配送されてしまうでしょう。さらなる考察について
   は Section 6.1 を見てください。


4.5.3.2.7.  Server Timeout: 5 Minutes.
4.5.3.2.7.  サーバタイムアウト: 5分

   An SMTP server SHOULD have a timeout of at least 5 minutes while it
   is awaiting the next command from the sender.

   SMTP サーバは送信者からの次のコマンドを待つ時間は少なくとも５分のタ
   イムアウトを持つべきです(SHOULD)。


4.5.4.  Retry Strategies
4.5.4.  リトライ戦略

   The common structure of a host SMTP implementation includes user
   mailboxes, one or more areas for queuing messages in transit, and one
   or more daemon processes for sending and receiving mail.  The exact
   structure will vary depending on the needs of the users on the host
   and the number and size of mailing lists supported by the host.  We
   describe several optimizations that have proved helpful, particularly
   for mailers supporting high traffic levels.

   SMTP を 実装しているホストの共通の構造はユーザーのメールボックスを含
   み、データ送信中にひとつ以上のメッセージをキューイングする場所があり、
   メールを送信したり受信したりするのにひとつ以上のデーモンプロセスがあ
   るということです。その正確な構造はそのホスト上のユーザーのニーズや、
   ホストによってサポートされたメーリングリストの数やサイズによって様々
   でしょう。我々は高いトラフィックレベルをサポートするメーラーのために
   役立っていると判明したいくつかの最適化について説明します。


   Any queuing strategy MUST include timeouts on all activities on a
   per-command basis.  A queuing strategy MUST NOT send error messages
   in response to error messages under any circumstances.

   どんなキューイング戦略も、すべての処理で以前のコマンドを元にタイムア
   ウトを含まなればなりせん(MUST)。キューイングの戦略では、どんな状況で
   もエラーメッセージに対する応答でエラーメッセージを送信してはいけませ
   ん(MUST NOT)。

4.5.4.1.  Sending Strategy
4.5.4.1.  送信戦略

   The general model for an SMTP client is one or more processes that
   periodically attempt to transmit outgoing mail.  In a typical system,
   the program that composes a message has some method for requesting
   immediate attention for a new piece of outgoing mail, while mail that
   cannot be transmitted immediately MUST be queued and periodically
   retried by the sender.  A mail queue entry will include not only the
   message itself but also the envelope information.

   SMTP クライアントの一般的なモデルは定期的に送信メールの発信を試みる
   一つ以上のプロセスです。典型的なシステムでは、メッセージを作成するプ
   ログラムは、すぐに送信することのできない新しい送信メールにために、応
   急処置を要求するためのいくつかの方法を持っています。その方法はキュー
   イングして定期的に送信者によって再試行しなればなりません(MUST)。メー
   ルキューのエントリーはそれ自身のメッセージだけでなくエンベロープ情報
   も含むでしょう。



Klensin                     Standards Track                    [Page 66]

RFC 5321                          SMTP                      October 2008


   The sender MUST delay retrying a particular destination after one
   attempt has failed.  In general, the retry interval SHOULD be at
   least 30 minutes; however, more sophisticated and variable strategies
   will be beneficial when the SMTP client can determine the reason for
   non-delivery.

   送信者は一度試行が失敗後は、特定の宛先へ送信することを遅らせなければ
   いけません(MUST)。一般的に、リトライ間隔は少なくとも 30 分はとるべき
   きです(SHOULD)。しかし、より洗練された、可変の戦略は SMTP クライアン
   トが配送不可の原因を決めることができる場合に有益でしょう。

   Retries continue until the message is transmitted or the sender gives
   up; the give-up time generally needs to be at least 4-5 days.  It MAY
   be appropriate to set a shorter maximum number of retries for non-
   delivery notifications and equivalent error messages than for
   standard messages.  The parameters to the retry algorithm MUST be
   configurable.

   再試行はメッセージが転送されるか、送信者があきらめるまで続きます。あ
   きらめる時間は通常は少なくとも ４、５日必要です。配送不可通知とそれ
   と等価のエラーメッセージでは標準のメッセージよりもリトライの最大値を
   より短く設定するのは適切であるかもしれません(MAY)。再送アルゴリズム
   のためのパラメータは設定可能でなければなりません(MUST)。

   A client SHOULD keep a list of hosts it cannot reach and
   corresponding connection timeouts, rather than just retrying queued
   mail items.

   クライアントはただキューイングされたメールを再試行するより、到達でき
   なかったり、コネクションがタイムアウトしたホストのリストを保持すべき
   です(SHOULD)。

   Experience suggests that failures are typically transient (the target
   system or its connection has crashed), favoring a policy of two
   connection attempts in the first hour the message is in the queue,
   and then backing off to one every two or three hours.

   経験は失敗が通常は一時的(対象システムもしくは自身のコネクションが切
   断された)であることを示唆していて、最初の一時間で２回の接続の試みる
   方針はキューにあるメッセージを助け、その後２時間ないし３時間毎にそれ
   を追い出します。

   The SMTP client can shorten the queuing delay in cooperation with the
   SMTP server.  For example, if mail is received from a particular
   address, it is likely that mail queued for that host can now be sent.
   Application of this principle may, in many cases, eliminate the
   requirement for an explicit "send queues now" function such as ETRN,
   RFC 1985 [36].

   SMTP クライアントは SMTP サーバとの協力でキューイングの遅延を短くす
   ることができます、。例えば、特定のアドレスからメールを受信した場合、
   そのホスト向けのキューイングされたメールはすぐ送信することができると
   思われます。多くの場合、この方式のアプリケーションは RFC 1985 [36]
   での ETRN のように 明確な "キューをすぐ送信する" 機能の要求は削除し
   ても構いません。

   The strategy may be further modified as a result of multiple
   addresses per host (see below) to optimize delivery time versus
   resource usage.

   その戦略は、配送時間とリソースの使用量対比して最適化するため、ホスト
   毎(以下を見てください)の複数アドレスの結果としてなお変更されるかもし
   れまん。
   
   An SMTP client may have a large queue of messages for each
   unavailable destination host.  If all of these messages were retried
   in every retry cycle, there would be excessive Internet overhead and
   the sending system would be blocked for a long period.  Note that an
   SMTP client can generally determine that a delivery attempt has
   failed only after a timeout of several minutes, and even a one-minute
   timeout per connection will result in a very large delay if retries
   are repeated for dozens, or even hundreds, of queued messages to the
   same host.

   SMTP クライアントは利用できない到達ホスト向けのメッセージそれぞれの
   ための大きいキューを持っているでしょう。もしこれらのメッセージのすべ
   てが、あらゆるリトライ周期でリトライされた場合、過度のインターネット
   のオーバーヘッドがあり、送信システムは長時間ブロックされるでしょう。
   SMTP クライアントが一般的に送信試行が何分かのタイムアウト後だけに失
   敗しようとするのを決定することができることに注意してください。そして、
   再試行が同じホスト宛てにキューイングしたメッセージの数十、または何数
   百もリトライが繰り返されると、１接続毎の１回１分のタイムアウトでさえ
   非常に大きい遅れをもたらすでしょう。

   At the same time, SMTP clients SHOULD use great care in caching
   negative responses from servers.  In an extreme case, if EHLO is
   issued multiple times during the same SMTP connection, different
   answers may be returned by the server.  More significantly, 5yz
   responses to the MAIL command MUST NOT be cached.

   同時に、SMTP クライアントはサーバからの否定的な応答のキャッシュは大
   いに注意をはらうべきです(SHOULD)。極端な場合では、EHLO が同じSMTP コ
   ネクションで複数回発行された場合、異なる応答がサーバから返ってくるか
   もしれません。よりあり得る場合として、MAIL コマンドに対しての 5yz 応
   答はキャッシュしてはいけません(MUST NOT)。


Klensin                     Standards Track                    [Page 67]

RFC 5321                          SMTP                      October 2008


   When a mail message is to be delivered to multiple recipients, and
   the SMTP server to which a copy of the message is to be sent is the
   same for multiple recipients, then only one copy of the message
   SHOULD be transmitted.  That is, the SMTP client SHOULD use the
   command sequence: MAIL, RCPT, RCPT, ..., RCPT, DATA instead of the
   sequence: MAIL, RCPT, DATA, ..., MAIL, RCPT, DATA.  However, if there
   are very many addresses, a limit on the number of RCPT commands per
   MAIL command MAY be imposed.  This efficiency feature SHOULD be
   implemented.

   メールメッセージが複数の宛先に配送された場合、メッセージを複製した
   SMTP サーバ は複数の受信者に対して同じメッセージを送信します、です
   ので、メッセージの一つのコピーだけを送信すべきです(SHOULD)。それは、
   SMTP クライアントが コマンドシーケンス : MAIL, RCPT, DATA, ...,
   MAIL, RCPT, DATA、の代りに MAIL, RCPT ,RCPT, ..., RCPT, DATA を使用
   すべき(SHOULD)ということです。しかし、もしたくさんのアドレスがある場
   合、MAIL コマンド毎の RCPT コマンド数による制限が課せられるかもしれ
   ません(MAY)。この効率的な機能は実装されるべきです(SHOULD)。

   Similarly, to achieve timely delivery, the SMTP client MAY support
   multiple concurrent outgoing mail transactions.  However, some limit
   may be appropriate to protect the host from devoting all its
   resources to mail.

   同様に、タイムリーな配送をするために、SMTP クライアントは複数に同時
   送信するメールトランザクションをサポートしても構いません(MAY)。しか
   し、すべてのリソースをメールに投入してしまうことからホストを保護する
   ために何らかの制限があるかもしれません。

4.5.4.2.  Receiving Strategy
4.5.4.2.  受信戦略

   The SMTP server SHOULD attempt to keep a pending listen on the SMTP
   port (specified by IANA as port 25) at all times.  This requires the
   support of multiple incoming TCP connections for SMTP.  Some limit
   MAY be imposed, but servers that cannot handle more than one SMTP
   transaction at a time are not in conformance with the intent of this
   specification.

   SMTP サーバはいつも SMTP ポート(IANA で 25 番に決められています)で
   接続待ち状態を保持しようとするべきです(SHOULD)。この要求は SMTP に対
   しての複数 TCP コネクションのサポートです。本仕様の意図に準じてはい
   ませんが、一度にひとつの SMTP トランザクション以上を扱うことができな
   いサーバでは何らかの制限が課せられるでしょう(MAY)。

   As discussed above, when the SMTP server receives mail from a
   particular host address, it could activate its own SMTP queuing
   mechanisms to retry any mail pending for that host address.

   前述したように SMTP サーバがメールを特定のホストアドレスから受信した
   とき、そのホストアドレスに対する送信していないメールを再送するために
   SMTP キューイングメカニズムが始動することもあり得ます。


4.5.5.  Messages with a Null Reverse-Path
4.5.5.  Null Reverse-path のメッセージ

   There are several types of notification messages that are required by
   existing and proposed Standards to be sent with a null reverse-path,
   namely non-delivery notifications as discussed in Section 3.7, other
   kinds of Delivery Status Notifications (DSNs, RFC 3461 [32]), and
   Message Disposition Notifications (MDNs, RFC 3798 [37]).  All of
   these kinds of messages are notifications about a previous message,
   and they are sent to the reverse-path of the previous mail message.
   (If the delivery of such a notification message fails, that usually
   indicates a problem with the mail system of the host to which the
   notification message is addressed.  For this reason, at some hosts
   the MTA is set up to forward such failed notification messages to
   someone who is able to fix problems with the mail system, e.g., via
   the postmaster alias.)

   存在している標準と提案された標準によって null reverse-path を送信す
   ることが必要とされるいくつかの通知メッセージの形式があります、すなわ
   ちそれは Section 3.7 で論じているような配送不可通知、配送状態通知の
   その他の形式(DSNs, RFC 3461 [32])、及びメッセージ処理通知(MDNs RFC
   3798 [37])です。メッセージのこれらの種類の全ては以前のメッセージにつ
   いての通知で、以前のメールメッセージの reverse-path へ送信されます。
   これらの種類の全ては以前のメッセージについての通知で、それらは以前の
   メールメッセージの reverse-path へ送信されます。(もしそのような通知
   メッセージの配送が失敗したら、通常はその通知メッセージが宛てられたホ
   ストのメールシステムへ問題が通知されます。このような理由で、いくつか
   の MTA ホストはメールシステムの問題を解決できるだれかへ(例えば
   postmaster の別名を通して)失敗通知メッセージを転送します。)

   All other types of messages (i.e., any message which is not required
   by a Standards-Track RFC to have a null reverse-path) SHOULD be sent
   with a valid, non-null reverse-path.

   他のメッセージの全ての形式(すなわち、標準過程 RFC によって必要とされ
   なかったどんな null reverse-path を持ったメッセージ)有効な null では
   ない reverse-path に送信されるべきです(SHOULD)。



Klensin                     Standards Track                    [Page 68]

RFC 5321                          SMTP                      October 2008


   Implementers of automated email processors should be careful to make
   sure that the various kinds of messages with a null reverse-path are
   handled correctly.  In particular, such systems SHOULD NOT reply to
   messages with a null reverse-path, and they SHOULD NOT add a non-null
   reverse-path, or change a null reverse-path to a non-null one, to
   such messages when forwarding.

   自動電子メール処理の実装は null reverse-path を持つ様々な種類のメッ
   セージを気をつけて正確に扱うべきです。とりわけ、そのようなシステムは
   null reverse-path を持つメッセージに対して返信するべきではありません
   (SHOULD NOT)、そしてそのようなメッセージを転送するときに、null でな
   い reverse-path を付け加えたり、null でない reverse-path に変更した
   りするべきではありません(SHOULD NOT)。


5.  Address Resolution and Mail Handling
5.  アドレス解決とメールハンドリング

5.1.  Locating the Target Host
5.1.  対象ホストの決定

   Once an SMTP client lexically identifies a domain to which mail will
   be delivered for processing (as described in Sections 2.3.5 and 3.6),
   a DNS lookup MUST be performed to resolve the domain name (RFC 1035
   [2]).  The names are expected to be fully-qualified domain names
   (FQDNs): mechanisms for inferring FQDNs from partial names or local
   aliases are outside of this specification.  Due to a history of
   problems, SMTP servers used for initial submission of messages SHOULD
   NOT make such inferences (Message Submission Servers [18] have
   somewhat more flexibility) and intermediate (relay) SMTP servers MUST
   NOT make them.

   一度 SMTP クライアントが語彙的にメールが配送されるであろうドメインを
   確認したら(Section 2.3.5 と 3.6 に記述してあるような)処理のために、
   DNS 検索はドメイン名を解決するために機能しなればなりません
   (MUST)(RFC 1035 [2])。名前は完全修飾ドメイン名(FQDN)であることが期待
   されます。一部の名前やローカルの別名から FQDN を推測するメカニズムは
   本仕様書の範囲外です。過去の問題により、メッセージの初めの投函に使用
   される SMTP サーバーはそのような推測(メッセージ投函サーバ [18] は多
   少柔軟性がある)をするするべではありません(SHOULD NOT)。そして中間の
   (中継)SMTP サーバはそれらをしてはいけません(MUST NOT)。

   The lookup first attempts to locate an MX record associated with the
   name.  If a CNAME record is found, the resulting name is processed as
   if it were the initial name.  If a non-existent domain error is
   returned, this situation MUST be reported as an error.  If a
   temporary error is returned, the message MUST be queued and retried
   later (see Section 4.5.4.1).  If an empty list of MXs is returned,
   the address is treated as if it was associated with an implicit MX
   RR, with a preference of 0, pointing to that host.  If MX records are
   present, but none of them are usable, or the implicit MX is unusable,
   this situation MUST be reported as an error.

   検索は最初、名前に関連した MX レコードを決定しようとします。CNAME レ
   コードが見つかった場合、解決された名前はそれが最初の名前だったかよう
   に処理されます。実在しないドメインでエラーが返された場合、この状況は
   エラーとして報告されなければいけません(MUST)。一時的なエラーが返され
   た場合、メッセージはキューイングされ、後に再試行されなければいけませ
   ん(MUST)(Section 4.5.4.1 を見てください)。空の MX のリストが返された
   場合、そのアドレスは暗黙的に、優先度が 0 でそのホストを指している
   MX に関連づけられたかのように扱われます。MX レコード が存在するがど
   れも使用できなかったり、暗黙的な MX が使用できなかった場合、この状況
   はエラーとして報告されなければいけません(MUST)。

   If one or more MX RRs are found for a given name, SMTP systems MUST
   NOT utilize any address RRs associated with that name unless they are
   located using the MX RRs; the "implicit MX" rule above applies only
   if there are no MX records present.  If MX records are present, but
   none of them are usable, this situation MUST be reported as an error.

   与えられた名前に対して一つ以上の MX レコードが見つかった場合、SMTP
   システムはそれらが MX レコードを使用して見つけられないない限り、名
   前に関連づけられたどんなアドレス資源レコードも利用してはいけません
   (MUST NOT)。上記の"暗黙の MX"ルールは MX レコードが存在しなかった場
   合にのみ適用されます。MX レコードが存在したがそれらが使用できなかっ
   た場合、この状況はエラーとして報告されなければいけません(MUST)。

   When a domain name associated with an MX RR is looked up and the
   associated data field obtained, the data field of that response MUST
   contain a domain name.  That domain name, when queried, MUST return
   at least one address record (e.g., A or AAAA RR) that gives the IP
   address of the SMTP server to which the message should be directed.
   Any other response, specifically including a value that will return a
   CNAME record when queried, lies outside the scope of this Standard.
   The prohibition on labels in the data that resolve to CNAMEs is
   discussed in more detail in RFC 2181, Section 10.3 [38].

   MX レコードと関連付けられているドメイン名を探し出し、関連したデータ
   フィールドが取得できたとき、そのデータフィールドの応答はドメイン名を
   含んでいなければなりません(MUST)。ドメイン名を問い合わせたときに、ア
   ドレスレコード(例えば A か AAAA レコード)はメッセージを送るべき
   SMTP サーバ のIPアドレスをすくなくとも一つは返さなければいけません
   (MUST)。特に問い合わせたときに CNAME レコードが返すであろう値を含む、
   それ以外の応答は本仕様の範囲外にあります。CNAME に解決するデータでの
   ラベル禁止はより詳細に RFC 2181、10.3 章 [38] に記述されています。
   

Klensin                     Standards Track                    [Page 69]

RFC 5321                          SMTP                      October 2008


   When the lookup succeeds, the mapping can result in a list of
   alternative delivery addresses rather than a single address, because
   of multiple MX records, multihoming, or both.  To provide reliable
   mail transmission, the SMTP client MUST be able to try (and retry)
   each of the relevant addresses in this list in order, until a
   delivery attempt succeeds.  However, there MAY also be a configurable
   limit on the number of alternate addresses that can be tried.  In any
   case, the SMTP client SHOULD try at least two addresses.

   検索が成功したとき、複数の MX レコードやマルチホーミング、もしくは両
   方のために、マッピングはひとつのアドレスより選択的な配送アドレスのリ
   ストができることがあります。信頼できるメール送信のため、SMTP クライ
   アントは配送試行が成功するまで、このリストの順番で関連するアドレスそ
   れぞれに試行(と再試行)することができなければいけません(MUST)。しかし
   試行することのできる代替アドレス数の制限を設定可能としても構いません
   (MAY)。どんな場合でも、SMTP クライアントは最低２つのアドレスに試行す
   べきです(SHOULD)。

   Two types of information are used to rank the host addresses:
   multiple MX records, and multihomed hosts.

   二種類の情報は複数の MX レコード及びマルチホームのホストにおけるホス
   トアドレスのランク決めで用いられます。

   MX records contain a preference indication that MUST be used in
   sorting if more than one such record appears (see below).  Lower
   numbers are more preferred than higher ones.  If there are multiple
   destinations with the same preference and there is no clear reason to
   favor one (e.g., by recognition of an easily reached address), then
   the sender-SMTP MUST randomize them to spread the load across
   multiple mail exchangers for a specific organization.

   MX レコードは２つ以上のレコードが存在した場合(下記参照)用いられなけ
   ればならない(MUST)優先度を含みます。より低い数値は高いものよりもより
   優先されます。同一優先で複数の宛先があった場合、どちらかを選ぶはっき
   りとした理由(例えば、簡単にとどくアドレスを認識することによって選ぶ
   など)はありません。その時、送信 SMTP は特定の組織の複数メールエクス
   チェンジャーへの負荷を分散するために無作為に選らばなければいけません
   (MUST)。

   The destination host (perhaps taken from the preferred MX record) may
   be multihomed, in which case the domain name resolver will return a
   list of alternative IP addresses.  It is the responsibility of the
   domain name resolver interface to have ordered this list by
   decreasing preference if necessary, and the SMTP sender MUST try them
   in the order presented.

   宛て先ホスト(おそらく選択した MX レコードから引いたもの)はマルチホー
   ムかもしれません、その場合、ドメイン名のレゾルバは選択的な IP アドレ
   スのリストを返すでしょう。必要であればこのリストを優先度の低い順に並
   べることは、ドメイン名のレソルバインターフェースの義務であり、SMTP
   送信者は渡された順番で試行しなければいけません(MUST)。

   Although the capability to try multiple alternative addresses is
   required, specific installations may want to limit or disable the use
   of alternative addresses.  The question of whether a sender should
   attempt retries using the different addresses of a multihomed host
   has been controversial.  The main argument for using the multiple
   addresses is that it maximizes the probability of timely delivery,
   and indeed sometimes the probability of any delivery; the counter-
   argument is that it may result in unnecessary resource use.  Note
   that resource use is also strongly determined by the sending strategy
   discussed in Section 4.5.4.1.

   複数の選択的なアドレスに試行する機能は必要とされるとはいえ、特定の設
   定は選択的なアドレスの使用を制限したがったり不可能にしたりするかもし
   れません。送信者が異なるマルチホームホストのアドレスを用いて再試行す
   るべきかという疑問は議論になっています。複数アドレス使用における主な
   根拠となるのは、タイムリーな配送の可能性を最大限にして、実際にいくら
   かの配送で発生します。反対の意見としては結果として不要なリソースの使
   用をもたらすであろうということです。リソースの使用もまた 4.5.4.1 章
   で論られている送信の戦略によって強く決められることに注意してください。
   
   If an SMTP server receives a message with a destination for which it
   is a designated Mail eXchanger, it MAY relay the message (potentially
   after having rewritten the MAIL FROM and/or RCPT TO addresses), make
   final delivery of the message, or hand it off using some mechanism
   outside the SMTP-provided transport environment.  Of course, neither
   of the latter require that the list of MX records be examined
   further.

   SMTP サーバがメールエクスチェンジャーの指し示した宛先のメッセージを
   受信した場合、メッセージ(可能性として MAIL FROM や RCPT TO アドレス
   を書き換えた後)を中継するか、メッセージの最終配送か、もしくは何らか
   のメカニズムを用いてそれをSMTP が提供する転送環境の外へ渡しても構い
   ません(MAY)。

   If it determines that it should relay the message without rewriting
   the address, it MUST sort the MX records to determine candidates for


Klensin                     Standards Track                    [Page 70]

RFC 5321                          SMTP                      October 2008


   delivery.  The records are first ordered by preference, with the
   lowest-numbered records being most preferred.  The relay host MUST
   then inspect the list for any of the names or addresses by which it
   might be known in mail transactions.  If a matching record is found,
   all records at that preference level and higher-numbered ones MUST be
   discarded from consideration.  If there are no records left at that
   point, it is an error condition, and the message MUST be returned as
   undeliverable.  If records do remain, they SHOULD be tried, best
   preference first, as described above.

   もしアドレスの書き換えなしで中継するべきということを決めた場合、配送
   の候補を決定するために MX レコードをソートしなければなりません
   (MUST)。そのレコードは優先順に並んでいて、最小の数値のものが最も優先
   されます。中継ホストはメールトランザクションで明らかになったであろう
   名前もしくはアドレスのいくらかについてのリストを検査しければいけませ
   ん(MUST)。一致したレコードが見つかったのであれば、考慮すべき事項で、
   自身の優先レベルと同じ全てのレコードとより高い番号をもったレコードは
   破棄されなければいけません(MUST)。それで残ったレコードがなければ、エ
   ラー状態になり、メッセージ配送不可として返されなければいけません
   (MUST)。レコードが残っていれば、前述したように、最初に最も優先される
   ホストに試行すべきです(SHOULD)。

5.2.  IPv6 and MX Records
5.2.  IPv6 と MX レコード

   In the contemporary Internet, SMTP clients and servers may be hosted
   on IPv4 systems, IPv6 systems, or dual-stack systems that are
   compatible with either version of the Internet Protocol.  The host
   domains to which MX records point may, consequently, contain "A RR"s
   (IPv4), "AAAA RR"s (IPv6), or any combination of them.  While RFC
   3974 [39] discusses some operational experience in mixed
   environments, it was not comprehensive enough to justify
   standardization, and some of its recommendations appear to be
   inconsistent with this specification.  The appropriate actions to be
   taken either will depend on local circumstances, such as performance
   of the relevant networks and any conversions that might be necessary,
   or will be obvious (e.g., an IPv6-only client need not attempt to
   look up A RRs or attempt to reach IPv4-only servers).  Designers of
   SMTP implementations that might run in IPv6 or dual-stack
   environments should study the procedures above, especially the
   comments about multihomed hosts, and, preferably, provide mechanisms
   to facilitate operational tuning and mail interoperability between
   IPv4 and IPv6 systems while considering local circumstances.

   現状のインターネットでは、SMTP クライアントとサーバは IPv4 システム
   か IPv6 システム、もしくはインターネットプロトコルの両方のバージョン
   が共存したデュアルスタックシステム上にあるだろう。結果として、MX レ
   コードのためのホストのドメインは "A レコード"(IPv4)、"AAAA レコード
   "(IPv6)、もしくはそれらの組み合わせを指すでしょう。RFC 3974 [39] は
   混載環境でいくらか使える技術について論じているが、標準化として納得さ
   せるには十分に広範囲でなく、それの推奨しているいくつかは本仕様と矛盾
   しているように思えます。取るべき適したアクションは、関連したネットワー
   クの能力や、何らかの変換が必須とされたり、明らかである(例えば、IPv6
   のみのクライアントは A レコードを検索することやIPv4 のみのサーバへの
   到達を試みたりする必要はない)ような、ローカルの状況よるでしょう。
   IPv6 もしくはデュアルスタックの環境で動作する SMTP 実装の設計者は上
   記の手順と特にマルチホームのホストにおけるコメントについて研究すべき
   です。ローカルの状況を考慮して、チューニング操作および IPv4 とIPv6
   システム間のメールの相互運用を容易にするメカニズムを供給することが望
   ましいでしょう。

6.  Problem Detection and Handling
6.  問題の発見と扱い

6.1.  Reliable Delivery and Replies by Email
6.1.  配送の信頼性と Email による応答

   When the receiver-SMTP accepts a piece of mail (by sending a "250 OK"
   message in response to DATA), it is accepting responsibility for
   delivering or relaying the message.  It must take this responsibility
   seriously.  It MUST NOT lose the message for frivolous reasons, such
   as because the host later crashes or because of a predictable
   resource shortage.  Some reasons that are not considered frivolous
   are discussed in the next subsection and in Section 7.8.

   受信 SMTP が一通のメールを受けとったとき(DATA への応答で、"250 OK"
   メッセージを送信によって)、メッセージを配送や中継することに対する責
   任を受け入れています。真剣にこの責任をとらなければいけません。それは
   ホストが後でクラッシュしたり、予測可能なリソース不足のようなつまらな
   い理由でメッセージを失ってはいけません(MUST NOT)。つまらないとは考え
   られない、いくらかの理由は次のサブセクションと Section 7.8 で論じて
   います。

   If there is a delivery failure after acceptance of a message, the
   receiver-SMTP MUST formulate and mail a notification message.  This
   notification MUST be sent using a null ("<>") reverse-path in the
   envelope.  The recipient of this notification MUST be the address
   from the envelope return path (or the Return-Path: line).  However,




Klensin                     Standards Track                    [Page 71]

RFC 5321                          SMTP                      October 2008


   if this address is null ("<>"), the receiver-SMTP MUST NOT send a
   notification.  Obviously, nothing in this section can or should
   prohibit local decisions (i.e., as part of the same system
   environment as the receiver-SMTP) to log or otherwise transmit
   information about null address events locally if that is desired.  If
   the address is an explicit source route, it MUST be stripped down to
   its final hop.

   メッセージの受け入れ後、配送が失敗したならば、受信 SMTP は 通知メッ
   セージを生成し、メールしなくてはいけません(MUST)。この通知はエンベロー
   プで null ("<>") reverse-path を用いて送信されなければいけません
   (MUST)。この通知の受信者はエンベロープのリターンパス(もしくは
   Return-Path: 行)のアドレスでなけらばいけません(MUST)。しかし、このア
   ドレスが null ("<>")の場合、受信 SMTP は 通知を送信してはいけません
   (MUST NOT)。はっきりと、本セクションでは、もし望むのであれば null ア
   ドレスイベントについての、ローカル決定(すなわち、受信 SMTPと同一のシ
   ステム環境の一部として)をログに記録したりすることや、もしくは情報を
   送信することを禁止したり、提案することはありません。アドレスが不適切
   なソースルートだった場合、最終ホップを取り出さなくてはいけません
   (MUST)。


   For example, suppose that an error notification must be sent for a
   message that arrived with:

   例えば、MAIL FROM:<@a,@b:user@d> で届いたメッセージに対してエラー通
   知を送信しなければならないものと仮定すると。

      MAIL FROM:<@a,@b:user@d>


   The notification message MUST be sent using:
   通知メッセージは RCPT TO:<user@d> を用いて送信しなければいけません
   (MUST)。


      RCPT TO:<user@d>


   Some delivery failures after the message is accepted by SMTP will be
   unavoidable.  For example, it may be impossible for the receiving
   SMTP server to validate all the delivery addresses in RCPT command(s)
   due to a "soft" domain system error, because the target is a mailing
   list (see earlier discussion of RCPT), or because the server is
   acting as a relay and has no immediate access to the delivering
   system.

   メッセージが SMTP によって受け入れられた後の配送の失敗はやむを得ない
   でしょう。例えば、受信 SMTP サーバで(RCPT コマンドの)対象がメーリン
   グリスト(以前の RCPT の記述を見てください。)という理由や、サーバがリ
   レーとして動作していて配送システムへの即時のアクセスができなかったり
   という理由や、 "軽度の" ドメインシステムエラーの結果として、RCPT コ
   マンドですべての配送アドレスの正当性を確認することは、不可能かもしれ
   ません。
   

   To avoid receiving duplicate messages as the result of timeouts, a
   receiver-SMTP MUST seek to minimize the time required to respond to
   the final <CRLF>.<CRLF> end of data indicator.  See RFC 1047 [40] for
   a discussion of this problem.

   タイムアウトの結果として二重のメッセージ受信を避けるために、受信
   SMTP は最後の <CRLF>.<CRLF> データ終端通知への応答に必要とされる最小
   限の時間を追求しなくてはいけません(MUST)。この問題の考察については
   RFC 1047 [40] を見てください。

6.2.  Unwanted, Unsolicited, and "Attack" Messages
6.2.  迷惑で、頼んでいない、"攻撃" メッセージ

   Utility and predictability of the Internet mail system requires that
   messages that can be delivered should be delivered, regardless of any
   syntax or other faults associated with those messages and regardless
   of their content.  If they cannot be delivered, and cannot be
   rejected by the SMTP server during the SMTP transaction, they should
   be "bounced" (returned with non-delivery notification messages) as
   described above.  In today's world, in which many SMTP server
   operators have discovered that the quantity of undesirable bulk email
   vastly exceeds the quantity of desired mail and in which accepting a
   message may trigger additional undesirable traffic by providing
   verification of the address, those principles may not be practical.

   インターネットメールシステムの利便性と予測可能性はそれらのメッセージ
   に関するどんな構文やその他の過失やメッセージの文面に関わらず、配送さ
   れるべきメッセージが配送されることを必要としています。それらが SMTP
   トランザクション中に SMTP サーバによって配送することができなくなった
   り、拒否されたりする場合は前述したように"バウンス"される(配送不可通
   知メッセージで返される)はずです。昨今は、多くの SMTP サーバの運用者
   が、望ましくないバルクメールの量が望んでいるメールの量を大幅に超えて
   いることを発見しているなかで、メッセージを受信することはアドレスの検
   査をすることによって付加的な好ましくないトラフィックを誘発するので、
   それらの方針は実用的ではないかもしれません。



   As discussed in Section 7.8 and Section 7.9 below, dropping mail
   without notification of the sender is permitted in practice.
   However, it is extremely dangerous and violates a long tradition and
   community expectations that mail is either delivered or returned.  If


Klensin                     Standards Track                    [Page 72]

RFC 5321                          SMTP                      October 2008


   silent message-dropping is misused, it could easily undermine
   confidence in the reliability of the Internet's mail systems.  So
   silent dropping of messages should be considered only in those cases
   where there is very high confidence that the messages are seriously
   fraudulent or otherwise inappropriate.

   Section 7.8 と 7.9 で後述していますが、実行中に送信者の通知なしにメー
   ルをドロップすることは許されています。しかし、それは極度に危険で、長
   い習慣に違反しており、コミュニティはメールが配送されるか、戻されるか
   のどちらかを期待しています。黙ってメッセージをドロップすることが誤用
   された場合、インターネットメールの信頼性を容易に覆すことができます。
   そのように、なにも言わずにメッセージをドロップすることは、メッセージ
   が著しく不正であったり不適切であることにとても高い自信があるような場
   合だけに考えるべきです。

   To stretch the principle of delivery if possible even further, it may
   be a rational policy to not deliver mail that has an invalid return
   address, although the history of the network is that users are
   typically better served by delivering any message that can be
   delivered.  Reliably determining that a return address is invalid can
   be a difficult and time-consuming process, especially if the putative
   sending system is not directly accessible or does not fully and
   accurately support VRFY and, even if a "drop messages with invalid
   return addresses" policy is adopted, it SHOULD be applied only when
   there is near-certainty that the return addresses are, in fact,
   invalid.

   ユーザーは典型的に配送することのできるメッセージが配送されることで気
   分がよくなるというネットワークの過去がありますが、可能であればさらに
   もっと配送の本質を引き延ばすために、無効なリターンアドレスを持ったメー
   ルを配送しないことは合理的な方針です。リターンアドレスが無効であると
   確実に決定することは困難で、時間を消費する可能性があります。特に、
   (おそらく)送信システムが直接アクセスできなかったり、完全で正確な
   VRFY のサポートをしていなかったり、たとえ "無効なリターンアドレスで
   メッセージをドロップする" ポリシーがあったとしても、リターンアドレス
   が事実上、無効であることがほぼ確実であったときだけそれは適用されるべ
   きです(SHOULD)。

   Conversely, if a message is rejected because it is found to contain
   hostile content (a decision that is outside the scope of an SMTP
   server as defined in this document), rejection ("bounce") messages
   SHOULD NOT be sent unless the receiving site is confident that those
   messages will be usefully delivered.  The preference and default in
   these cases is to avoid sending non-delivery messages when the
   incoming message is determined to contain hostile content.

   逆に、敵意をもった内容(それを決めることは、本仕様で定めているような
   SMTP サーバの範囲外です)を含んだメッセージを検出したのを理由に拒否
   された場合、拒否("バウンス")メッセージは受信したサイトがそれらのメッ
   セージが役立つように配送されるという自信がない限り送信されるべきでは
   ありません(SHOULD NOT)。これらのケースでの優先とデフォルトは入ってき
   たメッセージが敵意をもった内容を含んでいると決めたとき、配送不可メッ
   セージを送信をしないことです。

6.3.  Loop Detection
6.3.  ループの検出

   Simple counting of the number of "Received:" header fields in a
   message has proven to be an effective, although rarely optimal,
   method of detecting loops in mail systems.  SMTP servers using this
   technique SHOULD use a large rejection threshold, normally at least
   100 Received entries.  Whatever mechanisms are used, servers MUST
   contain provisions for detecting and stopping trivial loops.

   本当の最適ではありませんが、メールシステムのループを検出する方法には
   単純にメッセージ内の "Received:" ヘッダフィールドの数を数えることが
   効果的であることが証明されています。この技法を用いる SMTP サーバは拒
   否の限界を大きく(通常は少なくとも 100 Received の記録)とるべきです
   (SHOULD)。どんなメカニズムが使われていても、サーバはくだらないループ
   を検出してそれを止めなければいけません(MUST)。

6.4.  Compensating for Irregularities
6.4.  不正行為に対する保障

   Unfortunately, variations, creative interpretations, and outright
   violations of Internet mail protocols do occur; some would suggest
   that they occur quite frequently.  The debate as to whether a well-
   behaved SMTP receiver or relay should reject a malformed message,
   attempt to pass it on unchanged, or attempt to repair it to increase
   the odds of successful delivery (or subsequent reply) began almost
   with the dawn of structured network mail and shows no signs of
   abating.  Advocates of rejection claim that attempted repairs are
   rarely completely adequate and that rejection of bad messages is the
   only way to get the offending software repaired.  Advocates of
   "repair" or "deliver no matter what" argue that users prefer that


Klensin                     Standards Track                    [Page 73]

RFC 5321                          SMTP                      October 2008


   mail go through it if at all possible and that there are significant
   market pressures in that direction.  In practice, these market
   pressures may be more important to particular vendors than strict
   conformance to the standards, regardless of the preference of the
   actual developers.

   インターネットメールプロトコルの変化や独創的な解釈、及び完全な違反は
   不幸にも高い頻度で発生します。仕様に従った SMTP 受信者やリレーは異常
   なメッセージを拒否すべきか、修正しないで通過させるべきか、配送(もし
   くは次の応答)の成功確率を上げるために修正すべきか、という議論は構造
   化されたネットワークメールの黎明期から始まっていて、収まる兆候はあり
   ません。拒否を支持する人は修復することはめったに完全に成功せず、悪い
   メッセージの拒否はソフトウェアを修正しないで済む唯一の方法であると主
   張します。"修正" や "何がなんでも配送" を論じている人はユーザーは可
   能な限りメールがそれを通り抜けることを好み、その方向の大きな市場圧力
   がある、と主張します。実際に、現場の開発者の選択にかかわらず、これら
   の市場圧力は厳格に標準に則っているベンダーより特定のベンダーにとって
   重要でしょう。

   The problems associated with ill-formed messages were exacerbated by
   the introduction of the split-UA mail reading protocols (Post Office
   Protocol (POP) version 2 [15], Post Office Protocol (POP) version 3
   [16], IMAP version 2 [41], and PCMAIL [42]).  These protocols
   encouraged the use of SMTP as a posting (message submission)
   protocol, and SMTP servers as relay systems for these client hosts
   (which are often only intermittently connected to the Internet).
   Historically, many of those client machines lacked some of the
   mechanisms and information assumed by SMTP (and indeed, by the mail
   format protocol, RFC 822 [28]).  Some could not keep adequate track
   of time; others had no concept of time zones; still others could not
   identify their own names or addresses; and, of course, none could
   satisfy the assumptions that underlay RFC 822's conception of
   authenticated addresses.

   不適切なメッセージに関するその問題は、split-UA(ユーザエージェント)の
   メールリーディングプロトコル(POPバージョン２[15]や、バージョン３
   [16]、IMAP バージョン２[41]、および PCMAIL [42])の登場で悪化させらて
   しまいました。これらのプロトコルは SMTP を投函(メッセージサブミッショ
   ン)プロトコルとして使用し、これらの(インターネットへ時々途切れがら接
   続するだけの)クライアントホストにとって中継システムとしての SMTP サー
   バーの使用を推奨しています。歴史的にそれらのクライアントマシンの多く
   はいくつかの SMTP (実際には RFC 822 [28] のメール形式プロトコル)にとっ
   て当然とされるメカニズムと情報が不足してしています。いくつかは適切に
   時間の経過を記録することができ、その他はタイムゾーンの概念がなかった
   り、さらに自分自身の名前やアドレスを認識することができなかったり、そ
   してもちろん、RFC 822 の信頼できることを証明されたアドレスの概念を満
   足させることはできませんでした。

   In response to these weak SMTP clients, many SMTP systems now
   complete messages that are delivered to them in incomplete or
   incorrect form.  This strategy is generally considered appropriate
   when the server can identify or authenticate the client, and there
   are prior agreements between them.  By contrast, there is at best
   great concern about fixes applied by a relay or delivery SMTP server
   that has little or no knowledge of the user or client machine.  Many
   of these issues are addressed by using a separate protocol, such as
   that defined in RFC 4409 [18], for message submission, rather than
   using originating SMTP servers for that purpose.

   これらの貧弱な SMTP クライアントに応えて、多くの SMTP システムが現在、
   不完全もしくは正しくない形式で配送されたメッセージを完全なメッセージ
   にしています。この戦略は一般的にサーバーがクライアントを認識もしくは
   認証することができ、事前に両者の合意があるときに適用することが考えら
   れます。一方、ユーザーやクライアントマシンの知識が有るか無いくらいの
   中継や配送 SMTP サーバーによって適用された修正についての最も重大な懸
   念があります。これらの問題の多くはその目的のために造った SMTP サーバー
   を用いるより、 RFC 4409 [18] でメッセージ投函のために規定された、分
   離されたプロトコルを使用することにより解決します。

   The following changes to a message being processed MAY be applied
   when necessary by an originating SMTP server, or one used as the
   target of SMTP as an initial posting (message submission) protocol:

   下記の処理されるメッセージへの変更は発信元 SMTP サーバー、または最初
   の投函(メッセージサブミッション)プロトコルによって必要とされるとき適
   用しても構いません(MAY)。


   o  Addition of a message-id field when none appears

      message-id フィールドがない場合の追加

   o  Addition of a date, time, or time zone when none appears

      日付、時間、タイムゾーンがない場合の追加

   o  Correction of addresses to proper FQDN format

      正当な FQDN 形式へのアドレスの修正

      

   The less information the server has about the client, the less likely
   these changes are to be correct and the more caution and conservatism
   should be applied when considering whether or not to perform fixes
   and how.  These changes MUST NOT be applied by an SMTP server that
   provides an intermediate relay function.

   サーバがクライアントについて持っている情報が少ないほど、これらの変更
   はあまり正しそうになく、修正を実行するかどうか、どのように実行するか
   についてはさらなる注意と保守主義が適用されるべきです。これらの変更は
   中間の中継機能を提供する SMTP サーバーでは適用してはいけません(MUST
   NOT)。



Klensin                     Standards Track                    [Page 74]

RFC 5321                          SMTP                      October 2008


   In all cases, properly operating clients supplying correct
   information are preferred to corrections by the SMTP server.  In all
   cases, documentation SHOULD be provided in trace header fields and/or
   header field comments for actions performed by the servers.

   すべてのケースで適切に動作し、正しい情報を提供しているクライアントは
   SMTP サーバーによる訂正を選びます。全てのケースで、サーバによって実
   行される動作のために追跡ヘッダフィールドやヘッダフィールドのコメント
   についての文書は提供されるべきです(SHOULD)。

7.  Security Considerations
7.  安全性の考慮

7.1.  Mail Security and Spoofing
7.1.  メールの安全性となりすまし

   SMTP mail is inherently insecure in that it is feasible for even
   fairly casual users to negotiate directly with receiving and relaying
   SMTP servers and create messages that will trick a naive recipient
   into believing that they came from somewhere else.  Constructing such
   a message so that the "spoofed" behavior cannot be detected by an
   expert is somewhat more difficult, but not sufficiently so as to be a
   deterrent to someone who is determined and knowledgeable.
   Consequently, as knowledge of Internet mail increases, so does the
   knowledge that SMTP mail inherently cannot be authenticated, or
   integrity checks provided, at the transport level.  Real mail
   security lies only in end-to-end methods involving the message
   bodies, such as those that use digital signatures (see RFC 1847 [43]
   and, e.g., Pretty Good Privacy (PGP) in RFC 4880 [44] or Secure/
   Multipurpose Internet Mail Extensions (S/MIME) in RFC 3851 [45]).

   SMTP のメールはちょっとしたユーザーでさえ受信 SMTP サーバや中継SMTP
   サーバと直接交渉し、世間知らずの受信者をメッセージが他から来たとだま
   して信じさせるメッセージを作成することが可能ですので本来安全ではあり
   ません。"なりすました" 挙動をエキスパートでも検出することはできない
   ようなメッセージを作成することは少々難しいのですが、むきになっていて、
   知識の豊富なだれかを妨害するにはそれほど難しくないでしょう。結果とし
   て、インターネットメールの認識が増えるのと同じように、SMTP メールは
   本来、信頼できることを証明することができず、トランポート層で完全な
   チェックが行なわれるという認識が増えています。実質、メールの安全性は
   デジタル署名を用いたり(RFC 1847 [43]を見てください。例としては RFC
   4880 [44] の PGP であったり、 RFC 3851 [45] の S/MIME です。)するよ
   うなメッセージ本文を必要とする終端間での方法のみの状態にあります。

   Various protocol extensions and configuration options that provide
   authentication at the transport level (e.g., from an SMTP client to
   an SMTP server) improve somewhat on the traditional situation
   described above.  However, in general, they only authenticate one
   server to another rather than a chain of relays and servers, much
   less authenticating users or user machines.  Consequently, unless
   they are accompanied by careful handoffs of responsibility in a
   carefully designed trust environment, they remain inherently weaker
   than end-to-end mechanisms that use digitally signed messages rather
   than depending on the integrity of the transport system.

   トランスポート層(例えば、SMTP クライアントから SMTP サーバへの)での
   認証を提供する様々なプロトコル拡張とオプション設定が前述したような従
   来の状況のいくらかを良くしています。しかし、一般的にそれらは中継とサー
   バを一連ではなく、あるサーバーからもう片方への認証するのみで、まして、
   ユーザーやユーザーのマシンを認証するのではありません。結果として、そ
   れらは慎重に設計された信頼の環境で注意深い責任のハンドオフが伴なわな
   い限り、依然として終端間のトランスポートシステムの完全性よりも電子署
   名されたメッセージを使用するメカニズムより弱いままです。

   Efforts to make it more difficult for users to set envelope return
   path and header "From" fields to point to valid addresses other than
   their own are largely misguided: they frustrate legitimate
   applications in which mail is sent by one user on behalf of another,
   in which error (or normal) replies should be directed to a special
   address, or in which a single message is sent to multiple recipients
   on different hosts.  (Systems that provide convenient ways for users
   to alter these header fields on a per-message basis should attempt to
   establish a primary and permanent mailbox address for the user so
   that Sender header fields within the message data can be generated
   sensibly.)

   ユーザにエンベロープリターンパスとヘッダ "From" フィールドがユーザ以
   外の有効なアドレスを指すのを難しくさせようとする努力は概して見当違い
   です。それらは、メールを他の誰かに代わってあるユーザーによって送信し
   たり、エラー(や通常の)応答が特別なアドレス宛てであったり、一つのメッ
   セージが異なるホストの複数の宛て先に送信する、アプリケーションを台な
   しにします。(ユーザーにとってメッセージ毎ベースでこれらのヘッダフィー
   ルドの変更をする便利な方法を提供するシステムは、分別よくメッセージデー
   タの中の Sender ヘッダフィールドを生成することができるようにユーザの
   ために第一優先で永久的なメールボックスアドレスを確立するのを試みるは
   ずです。)



Klensin                     Standards Track                    [Page 75]

RFC 5321                          SMTP                      October 2008


   This specification does not further address the authentication issues
   associated with SMTP other than to advocate that useful functionality
   not be disabled in the hope of providing some small margin of
   protection against a user who is trying to fake mail.

   この仕様は偽のメールを送信しようとするユーザーから保護するというごく
   わずかな利益を用意するという期待の中で、役立つ機能を無効にしないこと
   を推奨する以外に、さらに SMTP の認証の問題に関する問題を解決しません。

7.2.  "Blind" Copies
7.2.  "ブラインド" コピー

   Addresses that do not appear in the message header section may appear
   in the RCPT commands to an SMTP server for a number of reasons.  The
   two most common involve the use of a mailing address as a "list
   exploder" (a single address that resolves into multiple addresses)
   and the appearance of "blind copies".  Especially when more than one
   RCPT command is present, and in order to avoid defeating some of the
   purpose of these mechanisms, SMTP clients and servers SHOULD NOT copy
   the full set of RCPT command arguments into the header section,
   either as part of trace header fields or as informational or private-
   extension header fields.  Since this rule is often violated in
   practice, and cannot be enforced, sending SMTP systems that are aware
   of "bcc" use MAY find it helpful to send each blind copy as a
   separate message transaction containing only a single RCPT command.

   メッセージヘッダ部分に表われないアドレスが、いくつか理由があって
   SMTP サーバへの RCPT コマンドで表わされるでしょう。代表的な２つは、
   "リストエクスプローダ"(複数のアドレスへ分解される、ひとつのアドレス)と
   してのメールアドレスの使用と、"ブラインドコピー"の出現に伴なって生じ
   るものです。特に二つ以上の RCPT コマンドが存在するとき、これらのメカ
   ニズムの目的のいくらかを駄目にすることを避けるために、SMTP クライア
   ントとサーバーは RCPT コマンド引数の全てをヘッダ部分(追跡ヘッダフィー
   ルドやプライベートな拡張ヘッダフィールドの一部としても)へコピーする
   べきではありません(SHOULD NOT)。このルールは実際によく違反され、強制
   することができず、"bcc" を意識して使用している送信 SMTP システムは一
   つのRCPT コマンドのみを含んだ分割したメッセージトランザクションとし
   てそれぞれのブラインドコピーを送信するのに役立つそれを見つけても構い
   ません(MAY)。

   There is no inherent relationship between either "reverse" (from
   MAIL, SAML, etc., commands) or "forward" (RCPT) addresses in the SMTP
   transaction ("envelope") and the addresses in the header section.
   Receiving systems SHOULD NOT attempt to deduce such relationships and
   use them to alter the header section of the message for delivery.
   The popular "Apparently-to" header field is a violation of this
   principle as well as a common source of unintended information
   disclosure and SHOULD NOT be used.

   もともとSMTP トランザクション("エンベロープ")の "reverse" (MAIL、
   SAML 他のコマンド)や "forward"(RCPT) アドレスとヘッダ部分の アドレス
   に関連性はありません。受信システムはそのような関係を推測すべきではな
   く(SHOULD NOT)、メッセージのヘッダ部分に替えてそれらを配送のために使
   用すべきではありません(SHOULD NOT)。よく知られている"Apparently-to"
   ヘッダフィールドはこの原則に違反するほか、意図していない情報開示の原
   因となるので、使用されるべきではありません(SHOULD NOT)。

7.3.  VRFY, EXPN, and Security
7.3.  VRFY、EXPN と 安全性

   As discussed in Section 3.5, individual sites may want to disable
   either or both of VRFY or EXPN for security reasons (see below).  As
   a corollary to the above, implementations that permit this MUST NOT
   appear to have verified addresses that are not, in fact, verified.
   If a site disables these commands for security reasons, the SMTP
   server MUST return a 252 response, rather than a code that could be
   confused with successful or unsuccessful verification.

   Section 3.5 で論じたように、個別のサイトではセキュリティ上の理由(下
   記参照)から VRFY と EXPN の一方または両方とも無効にしたいかもしれま
   せん。前述へ結果として、これを行う実装は実際に検証されてないアドレス
   を検証したかのように見せてはいけません(MUST NOT)。もしサイトがこれら
   のコマンドをセキュリティ上の理由で無効にしているならば、SMTP サーバ
   は検証の成功もしくは失敗と間違わせるコードよりも 252 応答を返さなけ
   ればいけません(MUST)。

   Returning a 250 reply code with the address listed in the VRFY
   command after having checked it only for syntax violates this rule.
   Of course, an implementation that "supports" VRFY by always returning
   550 whether or not the address is valid is equally not in
   conformance.

   VRFY コマンドで構文だけをチェックした後にアドレスを伴なう 250 応答コー
   ドの返却は本ルールに違反しています。もちろん、アドレスが有効であるか
   どうか関係なく常に 550 を返して VRFY を"サポートする" 実装は同様に適
   合していません。

   On the public Internet, the contents of mailing lists have become
   popular as an address information source for so-called "spammers."



Klensin                     Standards Track                    [Page 76]

RFC 5321                          SMTP                      October 2008


   The use of EXPN to "harvest" addresses has increased as list
   administrators have installed protections against inappropriate uses
   of the lists themselves.  However, VRFY and EXPN are still useful for
   authenticated users and within an administrative domain.  For
   example, VRFY and EXPN are useful for performing internal audits of
   how email gets routed to check and to make sure no one is
   automatically forwarding sensitive mail outside the organization.
   Sites implementing SMTP authentication may choose to make VRFY and
   EXPN available only to authenticated requestors.  Implementations
   SHOULD still provide support for EXPN, but sites SHOULD carefully
   evaluate the tradeoffs.

   公衆のインターネット上で、メーリングリストの内容は"スパマー"と呼ばれ
   る者にとってアドレス情報源としてよく知られています。リスト管理者がリ
   スト自体の不適切な使用に対する保護を導入するのに従ってアドレスを"収
   穫"するための EXPN の使用は深刻化しています。しかしながら今でもまだ
   VRFY と EXPN は管理しているドメイン内部で認証されたユーザにとっては
   便利です。例えば、VRFY と EXPN はメールがどう届けられるかチェックす
   る内部の検査に役立ちます。そして確認のために、だれも自動的に機密のメー
   ルを組織の外部へ転送しません。SMTP 認証を実装しているサイトは認証さ
   れた要求者に対してだけ VRFY と EXPN を使用可能にすることを選択しても
   構いません。実装は今だに EXPN のサポートを用意すべき(SHOULD)ですが、
   サイトは気をつけてそのトレードオフを判断すべきです(SHOULD)。

   Whether disabling VRFY provides any real marginal security depends on
   a series of other conditions.  In many cases, RCPT commands can be
   used to obtain the same information about address validity.  On the
   other hand, especially in situations where determination of address
   validity for RCPT commands is deferred until after the DATA command
   is received, RCPT may return no information at all, while VRFY is
   expected to make a serious attempt to determine validity before
   generating a response code (see discussion above).

   VRFY を無効にすると実際にほんの少しの安全性を提供するするかどうかは
   他の一連の条件によります。多くのケースでは RCPT コマンドはアドレスの
   有効性について同じ情報を手に入れるのに使うことができます。一方では特
   に RCPT コマンドでのアドレスの有効性の決定を DATA コマンドを受信した
   後まで保留する状況で、VRFY は応答コードを生成する以前に本格的に妥当
   性を決定しようとしますが(上記参照)、RCPT は何の情報も返さないでしょ
   う。

7.4.  Mail Rerouting Based on the 251 and 551 Response Codes
7.4.  251 と 551 応答コードでのメール再ルーティング

   Before a client uses the 251 or 551 reply codes from a RCPT command
   to automatically update its future behavior (e.g., updating the
   user's address book), it should be certain of the server's
   authenticity.  If it does not, it may be subject to a man in the
   middle attack.

   クライアントが RCPT コマンドからの 251 もしくは 551 応答コードを使用
   する以前に自動的に次の行動は更新する(すなわちユーザのアドレス帳の更
   新)ために、サーバの信頼性を確認すべきです。もしそれがされない場合、
   介入者攻撃を受けるでしょう。

7.5.  Information Disclosure in Announcements
7.5.  報告での情報非開示

   There has been an ongoing debate about the tradeoffs between the
   debugging advantages of announcing server type and version (and,
   sometimes, even server domain name) in the greeting response or in
   response to the HELP command and the disadvantages of exposing
   information that might be useful in a potential hostile attack.  The
   utility of the debugging information is beyond doubt.  Those who
   argue for making it available point out that it is far better to
   actually secure an SMTP server rather than hope that trying to
   conceal known vulnerabilities by hiding the server's precise identity
   will provide more protection.  Sites are encouraged to evaluate the
   tradeoff with that issue in mind; implementations SHOULD minimally
   provide for making type and version information available in some way
   to other network hosts.

   グリーティングや HELP コマンドの応答でサーバの種類とバージョン(とき
   どきサーバのドメイン名も)をアナウンスするデバッグの優位な点と敵意を
   もった攻撃の可能性で利用されるかもしれない情報を晒すことの不利な点の
   トレードオフについて続いている議論があります。デバッグ情報が役に立つ
   のは言うまでもありません。それに賛成する人は知られている脆弱性を隠匿
   しようとすることを望むより、実際に安全な SMTP サーバはさらなる防備を
   備えるほうがずっとよいと指摘します。サイトはその問題を考慮してトレー
   ドオフを判断することが推奨されます。実装は最小限、何らかの方法で他の
   ネットワークホストに対して種類とバージョン情報を入手できるようにすべ
   きです(SHOULD)。
   






Klensin                     Standards Track                    [Page 77]

RFC 5321                          SMTP                      October 2008


7.6.  Information Disclosure in Trace Fields
7.6.  追跡フィールドの情報公開

   In some circumstances, such as when mail originates from within a LAN
   whose hosts are not directly on the public Internet, trace
   ("Received") header fields produced in conformance with this
   specification may disclose host names and similar information that
   would not normally be available.  This ordinarily does not pose a
   problem, but sites with special concerns about name disclosure should
   be aware of it.  Also, the optional FOR clause should be supplied
   with caution or not at all when multiple recipients are involved lest
   it inadvertently disclose the identities of "blind copy" recipients
   to others.

   ある状況で、メールがホストが公衆インターネットに直接接続されていない
   LAN 内から発信されたような場合、本仕様に適合した追跡("Received")ヘッ
   ダフィールドはホスト名と通常は利用できない似たように情報を公開するで
   しょう。これは通常問題を引き起こしませんが、名前が公開されることにつ
   いて特別な懸念があるサイトはそのことに注意すべきです。オプションの
   FOR 節もまた注意して供給されるべきで、複数の受信者が含まれるとき、
   "blind copy" の受信者の識別を他人へ不注意で公開してしまうのはもって
   のほかです。

7.7.  Information Disclosure in Message Forwarding
7.7.  メッセージ転送での情報公開

   As discussed in Section 3.4, use of the 251 or 551 reply codes to
   identify the replacement address associated with a mailbox may
   inadvertently disclose sensitive information.  Sites that are
   concerned about those issues should ensure that they select and
   configure servers appropriately.

   Section 3.4 でも論じているように、251 や 551 応答コードの使用でメー
   ルボックスに関連したアドレスを置き換するために不注意で神経質な情報を
   公開してしまうかもしれません。それらの問題を考慮するサイトは適切にサー
   バを選択して、設定するべきです。

7.8.  Resistance to Attacks
7.8.  攻撃への抵抗

   In recent years, there has been an increase of attacks on SMTP
   servers, either in conjunction with attempts to discover addresses
   for sending unsolicited messages or simply to make the servers
   inaccessible to others (i.e., as an application-level denial of
   service attack).  While the means of doing so are beyond the scope of
   this Standard, rational operational behavior requires that servers be
   permitted to detect such attacks and take action to defend
   themselves.  For example, if a server determines that a large number
   of RCPT TO commands are being sent, most or all with invalid
   addresses, as part of such an attack, it would be reasonable for the
   server to close the connection after generating an appropriate number
   of 5yz (normally 550) replies.

   近年、反社会的なメッセージを送信するためのアドレスを見つけようとする、
   もしくは単にサーバを他へのアクセス不能にさせようとする(すなわち、ア
   プリケーションレベルの DOS 攻撃)のと共に SMTP サーバへの攻撃が増加し
   ています。そうする手段として本標準の範囲を超えていますが、合理的な操
   作上の動作はそのような攻撃を検知し、自身を守る行動をとることです。例
   えば、サーバが多くの RCPT コマンドが送信され、ほとんどすべてが無効な
   アドレスであり、その様な攻撃の一部として決定したのであれば、サーバが
   適切な 5yz(通常 550)の応答の数値を生成した後にコネクションを閉じるの
   は理にかなっています。

7.9.  Scope of Operation of SMTP Servers
7.9.  SMTP サーバの運用の範囲

   It is a well-established principle that an SMTP server may refuse to
   accept mail for any operational or technical reason that makes sense
   to the site providing the server.  However, cooperation among sites
   and installations makes the Internet possible.  If sites take
   excessive advantage of the right to reject traffic, the ubiquity of
   email availability (one of the strengths of the Internet) will be
   threatened; considerable care should be taken and balance maintained
   if a site decides to be selective about the traffic it will accept
   and process.

   SMTP サーバはサーバを運用しているサイトの道理にかなった、運用上や技
   術的な理由でメールを受け付けることを拒否するかもしれないということは、
   定着した方針です。しかしながら、サイト間の協力と設備がインターネット
   を成立させます。もしサイトがトラフィックを拒否する権利の過度の有利性
   を行使するのであれば、どこにでもある電子メールの有用性(インターネッ
   トの強みの一つ)が脅かされるでしょう。考慮すべき注意はもしサイトが受
   け入れて処理するトラフィックについて選択的な決定をするのであれば、バ
   ランスを取って保つべきです。




Klensin                     Standards Track                    [Page 78]

RFC 5321                          SMTP                      October 2008


   In recent years, use of the relay function through arbitrary sites
   has been used as part of hostile efforts to hide the actual origins
   of mail.  Some sites have decided to limit the use of the relay
   function to known or identifiable sources, and implementations SHOULD
   provide the capability to perform this type of filtering.  When mail
   is rejected for these or other policy reasons, a 550 code SHOULD be
   used in response to EHLO (or HELO), MAIL, or RCPT as appropriate.

   近年、任意のサイトを通した中継機能の使用が実際のメールの発信元を隠匿
   するために敵意的な行動の一部で用いられています。いくつかのサイトは中
   継機能の使用を知っているか認識した発信元に制限することを決めていて、
   実装はこの種のフィルタリングする機能を提供すべきです(SHOULD)。メール
   がこれらや他のポリシーの理由で拒否される場合、550 コード が適切に
   EHLO (や HELO)、MAIL、RCPT の応答として使用されるべきです(SHOULD)。

8.  IANA Considerations
8.  IANA の考慮

   IANA maintains three registries in support of this specification, all
   of which were created for RFC 2821 or earlier.  This document expands
   the third one as specified below.  The registry references listed are
   as of the time of publication; IANA does not guarantee the locations
   associated with the URLs.  The registries are as follows:

   IANA は本仕様のサポートで３つの登録を保持しています。そららのすべて
   は RFC 2821 もしくはそれ以前に作成されたものです。本書は以下に規定す
   るとおり三つめを拡張します。登録証明書は当時の発行でのリストに載って
   います。IANAは URL に関する場所は保障しません。登録は以下の通りです。


   o  The first, "Simple Mail Transfer Protocol (SMTP) Service
      Extensions" [46], consists of SMTP service extensions with the
      associated keywords, and, as needed, parameters and verbs.  As
      specified in Section 2.2.2, no entry may be made in this registry
      that starts in an "X".  Entries may be made only for service
      extensions (and associated keywords, parameters, or verbs) that
      are defined in Standards-Track or Experimental RFCs specifically
      approved by the IESG for this purpose.

      一つめは "単純メール転送プロトコル(SMTP)サービス拡張" [46] で
      SMTP サービス拡張に関連したキーワードと必要とされるパラメータと動
      詞で構成されます。Section 2.2.2 で規定したように、"X" で始まる登
      録はエントリーできません。エントリーは標準過程や実験的な RFC でこ
      の目的で IESG によって明確に認可されたサービス拡張(と関連したキー
      ワードと必要とされるパラメータと動詞)のみです。

   o  The second registry, "Address Literal Tags" [47], consists of
      "tags" that identify forms of domain literals other than those for
      IPv4 addresses (specified in RFC 821 and in this document).  The
      initial entry in that registry is for IPv6 addresses (specified in
      this document).  Additional literal types require standardization
      before being used; none are anticipated at this time.

      二つ目の登録は、"アドレス文字列タグ" [47]で、 IPv4 アドレス(RFC
      821 と本書で規定されている)のため以外のドメインリテラルの形式を特
      定する "タグ" から成ります。最初のエントリーは IPv6 アドレス(本書
      で規定されている)で登録されています。使用される以前に、リテラル種
      類を追加することは標準化が必要です。現時点で予測されるものはあり
      ません。
      

   o  The third, "Mail Transmission Types" [46], established by RFC 821
      and renewed by this specification, is a registry of link and
      protocol identifiers to be used with the "via" and "with"
      subclauses of the time stamp ("Received:" header field) described
      in Section 4.4.  Link and protocol identifiers in addition to
      those specified in this document may be registered only by
      standardization or by way of an RFC-documented, IESG-approved,
      Experimental protocol extension.  This name space is for
      identification and not limited in size: the IESG is encouraged to
      approve on the basis of clear documentation and a distinct method
      rather than preferences about the properties of the method itself.

      三番目は、RFC 821 によって創設され本仕様で更新された 、"メールの
      送信種別" [46] で、Section 4.4 で論じているタイムスタンプ
      ("Received:"ヘッダ)の "via" と "with" の副節で用いられるリンクと
      プロトコル識別子の登録です。リンクとプロトコル識別子は本書に規定
      されているものに加えて、標準や RFC 文書、 IESGの承認、試験的なプ
      ロトコルの拡張のみによって登録されるでしょう。識別のためのこの名
      前空間はサイズに制限はありません。IESG はそれ自身の用途の特性につ
      いての優先よりも、明瞭な文章化と区別する手段を中心に承認すること
      を勧めてます。

      An additional subsection has been added to the "VIA link types"
      and "WITH protocol types" subsections of this registry to contain
      registrations of "Additional-registered-clauses" as described
      above.  The registry will contain clause names, a description, a



Klensin                     Standards Track                    [Page 79]

RFC 5321                          SMTP                      October 2008


      summary of the syntax of the associated String, and a reference.
      As new clauses are defined, they may, in principle, specify
      creation of their own registries if the Strings consist of
      reserved terms or keywords rather than less restricted strings.
      As with link and protocol identifiers, additional clauses may be
      registered only by standardization or by way of an RFC-documented,
      IESG-approved, Experimental protocol extension.  The additional
      clause name space is for identification and is not limited in
      size: the IESG is encouraged to approve on the basis of clear
      documentation, actual use or strog signs that the clause will be
      used, and a distinct requirement rather than preferences about the
      properties of the clause itself.

      前述した追加のサブセクションには"Additional-registered-clauses"
      の登録を含むために "VIA link type" と "WITH protocol types" と
      "WITH protocol types" サブセクションが追加されました。その登録は
      節の名前、解説、関連する String の構文の概要、及び関係を含むでしょ
      う。新しい節が定義されたら、原則として、文字列が制限された
      String が少ないかより予約された言葉やキーワードから成っている場合、
      それら自身の登録の作成を指示するかもしれません。リンクとプロトコ
      ルの識別と同様に、追加の節は、標準や RFC 文書、 IESG の承認、試験
      的なプロトコルの拡張のみによって登録されるでしょう。追加の節の名
      前空間は識別のためで、サイズで制限していません。IESG はそれ自身の
      用途の特性についての優先よりも、実際の使用や節が使用されるであろ
      うはっきりとしたサイン、要求の区別の明瞭な文章化を中心に承認する
      ことを勧めています。
      
   In addition, if additional trace header fields (i.e., in addition to
   Return-path and Received) are ever created, those trace fields MUST
   be added to the IANA registry established by BCP 90 (RFC 3864) [11]
   for use with RFC 5322 [4].

   加えて、追跡ヘッダフィールドの追加(すなわち、Return-path とReceived
   の追加)がいかなるときでも作成される場合、それらの追跡フィールドは
   RFC 5322 との使用のため BCP 90 (RFC 3864) によって確立された IANA レ
   ジストリに追加されなければいけません(MUST)。

9.  Acknowledgments
9.  謝辞


   Many people contributed to the development of RFC 2821.  That
   document should be consulted for those acknowledgments.  For the
   present document, the editor and the community owe thanks to Dawn
   Mann and Tony Hansen who assisted in the very painful process of
   editing and converting the internal format of the document from one
   system to another.

   多くの方々が RFC 2821 の発展のために貢献しました。その文書は彼等の知
   識を参考にしなければなりませんでした。現在の文書のために、編集者とコ
   ミュニティは編集とあるシステムから他のシステムへの文書内部形式を変換
   のとても骨の折れる作業の支援をしてくれた Dawn Mann と Tony Hansen に
   恩があります。

   Neither this document nor RFC 2821 would have been possible without
   the many contribution and insights of the late Jon Postel.  Those
   contributions of course include the original specification of SMTP in
   RFC 821.  A considerable quantity of text from RFC 821 still appears
   in this document as do several of Jon's original examples that have
   been updated only as needed to reflect other changes in the
   specification.

   本書も RFC 2821 も最近の Jon Postel の多くの貢献と見識なしにはな
   し得ませんでした。それらの貢献はもちろん RFC 821 での元来のSMTPの仕
   様を含んでいます。RFC 821 から多くの文章が、 ２、３仕様上の他の変更
   を反映が必要とする箇所だけを更新した Jon のオリジナルの例として、
   本書でも未だに登場しています。
   

   Many people made comments or suggestions on the mailing list or in
   notes to the author.  Important corrections or clarifications were
   suggested by several people, including Matti Aarnio, Glenn Anderson,
   Derek J. Balling, Alex van den Bogaerdt, Stephane Bortzmeyer, Vint
   Cerf, Jutta Degener, Steve Dorner, Lisa Dusseault, Frank Ellerman,
   Ned Freed, Randy Gellens, Sabahattin Gucukoglu, Philip Guenther, Arnt
   Gulbrandsen, Eric Hall, Richard O. Hammer, Tony Hansen, Peter J.
   Holzer, Kari Hurtta, Bryon Roche Kain, Valdis Kletnieks, Mathias
   Koerber, John Leslie, Bruce Lilly, Jeff Macdonald, Mark E. Mallett,
   Mark Martinec, S. Moonesamy, Lyndon Nerenberg, Chris Newman, Douglas
   Otis, Pete Resnick, Robert A. Rosenberg, Vince Sabio, Hector Santos,
   David F. Skoll, Paul Smith, and Brett Watson.

   多くの方がメーリングリスト上でコメントや提案をしてくれました。重要な
   訂正や説明は以下の方々によって提案されました。 Matti Aarnio, Glenn
   Anderson, Derek J. Balling, Alex van den Bogaerdt, Stephane
   Bortzmeyer, Vint Cerf, Jutta Degener, Steve Dorner, Lisa
   Dusseault,Frank Ellerman, Ned Freed, Randy Gellens, Sabahattin
   Gucukoglu,Philip Guenther, Arnt Gulbrandsen, Eric Hall, Richard
   O. Hammer,Tony Hansen, Peter J.  Holzer, Kari Hurtta, Bryon Roche
   Kain,Valdis Kletnieks, Mathias Koerber, John Leslie, Bruce Lilly,
   Jeff Macdonald, Mark E. Mallett, Mark Martinec, S. Moonesamy,
   Lyndon Nerenberg, Chris Newman, Douglas Otis , Pete Resnick, Robert
   A. Rosenberg, Vince Sabio, Hector Santos, David F. Skoll, Paul
   Smith, Brett Watson



Klensin                     Standards Track                    [Page 80]

RFC 5321                          SMTP                      October 2008


   The efforts of the Area Directors -- Lisa Dusseault, Ted Hardie, and
   Chris Newman -- to get this effort restarted and keep it moving, and
   of an ad hoc committee with the same purpose, are gratefully
   acknowledged.  The members of that committee were (in alphabetical
   order) Dave Crocker, Cyrus Daboo, Tony Finch, Ned Freed, Randall
   Gellens, Tony Hansen, the author, and Alexey Melnikov.  Tony Hansen
   also acted as ad hoc chair on the mailing list reviewing this
   document; without his efforts, sense of balance and fairness, and
   patience, it clearly would not have been possible.
   
   地域のディレクターとして努力していただいた、Lisa Dusseault, Ted
   Hardie, と Chris Newman はこの努力を再開させて保ったままにするために、
   そして同じ目的を持った委員会で精を出してくれ、ありがたく承認していた
   だけました。委員会のメンバーは(アルファベット順)、Dave Crocker,
   Cyrus Daboo, Tony Finch, Ned Freed, Randall Gellens, Tony Hansen,
   the author, Alexey Melnikov です。Tony Hansen は本書をレビューするメー
   リングリストの議長として精を出してくれました。彼のバランスと公平性の
   感覚と忍耐なしには、明らかに成し得なかったでしょう。
   

10.  References
10.  参考文献

10.1.  Normative References
10.1.  基準とした参考文献

   [1]   Postel, J., "Simple Mail Transfer Protocol", STD 10, RFC 821,
         August 1982.

   [2]   Mockapetris, P., "Domain names - implementation and
         specification", STD 13, RFC 1035, November 1987.

   [3]   Braden, R., "Requirements for Internet Hosts - Application and
         Support", STD 3, RFC 1123, October 1989.

   [4]   Resnick, P., "Internet Message Format", RFC 5322, October 2008.

   [5]   Bradner, S., "Key words for use in RFCs to Indicate Requirement
         Levels", BCP 14, RFC 2119, March 1997.

   [6]   American National Standards Institute (formerly United States
         of America Standards Institute), "USA Code for Information
         Interchange", ANSI X3.4-1968, 1968.

         ANSI X3.4-1968 has been replaced by newer versions with slight
         modifications, but the 1968 version remains definitive for the
         Internet.

   [7]   Crocker, D. and P. Overell, "Augmented BNF for Syntax
         Specifications: ABNF", STD 68, RFC 5234, January 2008.

   [8]   Hinden, R. and S. Deering, "IP Version 6 Addressing
         Architecture", RFC 4291, February 2006.

   [9]   Newman, C., "ESMTP and LMTP Transmission Types Registration",
         RFC 3848, July 2004.

   [10]  Klensin, J., Freed, N., and K. Moore, "SMTP Service Extension
         for Message Size Declaration", STD 10, RFC 1870, November 1995.




Klensin                     Standards Track                    [Page 81]

RFC 5321                          SMTP                      October 2008


   [11]  Klyne, G., Nottingham, M., and J. Mogul, "Registration
         Procedures for Message Header Fields", BCP 90, RFC 3864,
         September 2004.

10.2.  Informative References
10.2.  有益な参考文献

   [12]  Partridge, C., "Mail routing and the domain system", RFC 974,
         January 1986.

   [13]  Klensin, J., Freed, N., Rose, M., Stefferud, E., and D.
         Crocker, "SMTP Service Extensions", STD 10, RFC 1869,
         November 1995.

   [14]  Klensin, J., "Simple Mail Transfer Protocol", RFC 2821,
         April 2001.

   [15]  Butler, M., Postel, J., Chase, D., Goldberger, J., and J.
         Reynolds, "Post Office Protocol: Version 2", RFC 937,
         February 1985.

   [16]  Myers, J. and M. Rose, "Post Office Protocol - Version 3",
         STD 53, RFC 1939, May 1996.

   [17]  Crispin, M., "INTERNET MESSAGE ACCESS PROTOCOL - VERSION
         4rev1", RFC 3501, March 2003.

   [18]  Gellens, R. and J. Klensin, "Message Submission for Mail",
         RFC 4409, April 2006.

   [19]  Freed, N., "SMTP Service Extension for Command Pipelining",
         STD 60, RFC 2920, September 2000.

   [20]  Vaudreuil, G., "SMTP Service Extensions for Transmission of
         Large and Binary MIME Messages", RFC 3030, December 2000.

   [21]  Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) Part One: Format of Internet Message Bodies",
         RFC 2045, November 1996.

   [22]  Klensin, J., Freed, N., Rose, M., Stefferud, E., and D.
         Crocker, "SMTP Service Extension for 8bit-MIMEtransport",
         RFC 1652, July 1994.

   [23]  Moore, K., "MIME (Multipurpose Internet Mail Extensions) Part
         Three: Message Header Extensions for Non-ASCII Text", RFC 2047,
         November 1996.





Klensin                     Standards Track                    [Page 82]

RFC 5321                          SMTP                      October 2008


   [24]  Freed, N. and K. Moore, "MIME Parameter Value and Encoded Word
         Extensions: Character Sets, Languages, and Continuations",
         RFC 2231, November 1997.

   [25]  Vaudreuil, G., "Enhanced Mail System Status Codes", RFC 3463,
         January 2003.

   [26]  Hansen, T. and J. Klensin, "A Registry for SMTP Enhanced Mail
         System Status Codes", BCP 138, RFC 5248, June 2008.

   [27]  Freed, N., "Behavior of and Requirements for Internet
         Firewalls", RFC 2979, October 2000.

   [28]  Crocker, D., "Standard for the format of ARPA Internet text
         messages", STD 11, RFC 822, August 1982.

   [29]  Wong, M. and W. Schlitt, "Sender Policy Framework (SPF) for
         Authorizing Use of Domains in E-Mail, Version 1", RFC 4408,
         April 2006.

   [30]  Fenton, J., "Analysis of Threats Motivating DomainKeys
         Identified Mail (DKIM)", RFC 4686, September 2006.

   [31]  Allman, E., Callas, J., Delany, M., Libbey, M., Fenton, J., and
         M. Thomas, "DomainKeys Identified Mail (DKIM) Signatures",
         RFC 4871, May 2007.

   [32]  Moore, K., "Simple Mail Transfer Protocol (SMTP) Service
         Extension for Delivery Status Notifications (DSNs)", RFC 3461,
         January 2003.

   [33]  Moore, K. and G. Vaudreuil, "An Extensible Message Format for
         Delivery Status Notifications", RFC 3464, January 2003.

   [34]  Postel, J. and J. Reynolds, "File Transfer Protocol", STD 9,
         RFC 959, October 1985.

   [35]  Kille, S., "MIXER (Mime Internet X.400 Enhanced Relay): Mapping
         between X.400 and RFC 822/MIME", RFC 2156, January 1998.

   [36]  De Winter, J., "SMTP Service Extension for Remote Message Queue
         Starting", RFC 1985, August 1996.

   [37]  Hansen, T. and G. Vaudreuil, "Message Disposition
         Notification", RFC 3798, May 2004.

   [38]  Elz, R. and R. Bush, "Clarifications to the DNS Specification",
         RFC 2181, July 1997.



Klensin                     Standards Track                    [Page 83]

RFC 5321                          SMTP                      October 2008


   [39]  Nakamura, M. and J. Hagino, "SMTP Operational Experience in
         Mixed IPv4/v6 Environments", RFC 3974, January 2005.

   [40]  Partridge, C., "Duplicate messages and SMTP", RFC 1047,
         February 1988.

   [41]  Crispin, M., "Interactive Mail Access Protocol: Version 2",
         RFC 1176, August 1990.

   [42]  Lambert, M., "PCMAIL: A distributed mail system for personal
         computers", RFC 1056, June 1988.

   [43]  Galvin, J., Murphy, S., Crocker, S., and N. Freed, "Security
         Multiparts for MIME: Multipart/Signed and Multipart/Encrypted",
         RFC 1847, October 1995.

   [44]  Callas, J., Donnerhacke, L., Finney, H., Shaw, D., and R.
         Thayer, "OpenPGP Message Format", RFC 4880, November 2007.

   [45]  Ramsdell, B., "Secure/Multipurpose Internet Mail Extensions
         (S/MIME) Version 3.1 Message Specification", RFC 3851,
         July 2004.

   [46]  Internet Assigned Number Authority (IANA), "IANA Mail
         Parameters", 2007,
         <http://www.iana.org/assignments/mail-parameters>.

   [47]  Internet Assigned Number Authority (IANA), "Address Literal
         Tags", 2007,
         <http://www.iana.org/assignments/address-literal-tags>.





















Klensin                     Standards Track                    [Page 84]

RFC 5321                          SMTP                      October 2008


Appendix A.  TCP Transport Service
附属書 A.  TCP 転送サービス

   The TCP connection supports the transmission of 8-bit bytes.  The
   SMTP data is 7-bit ASCII characters.  Each character is transmitted
   as an 8-bit byte with the high-order bit cleared to zero.  Service
   extensions may modify this rule to permit transmission of full 8-bit
   data bytes as part of the message body, or, if specifically designed
   to do so, in SMTP commands or responses.

   TCP コネクションは 8-bit バイトの転送をサポートします。SMTP のデータ
   は 7-bit の ASCII 文字です。それぞれの文字は最上位ビットをゼロにクリ
   アして 8-bit として送信されます。サービス拡張はメッセージ本文や、特
   に設計されているのであれば、SMTP コマンドや応答でも、完全な 8-bit デー
   タとしての送信するためにこのルールを変更するかもしれません。

Appendix B.  Generating SMTP Commands from RFC 822 Header Fields
附属書 B. RFC 822 ヘッダーフィールドから SMTP コマンドの生成

   Some systems use an RFC 822 header section (only) in a mail
   submission protocol, or otherwise generate SMTP commands from RFC 822
   header fields when such a message is handed to an MTA from a UA.
   While the MTA-UA protocol is a private matter, not covered by any
   Internet Standard, there are problems with this approach.  For
   example, there have been repeated problems with proper handling of
   "bcc" copies and redistribution lists when information that
   conceptually belongs to the mail envelope is not separated early in
   processing from header field information (and kept separate).

   あるシステムではメールサブミッションプロトコルで RFC 822 ヘッダー部
   分(だけ)を使うか、そうでなければ、メッセージが UA から MTA へ渡され
   るときに RFC 822 ヘッダーフィールドから SMTP コマンドを生成します。
   MTA-UA プロトコルはどのインターネット標準でカバーされるのではなく、
   個別の問題ではあるもの、この提案には問題があります。例えば、概念的に
   メールエンベロープがヘッダーフィールド情報から処理の早い段階で分けら
   れていない( そして、分けられたまま)とき、"bcc" コピーと再分配のリス
   ト の適切な扱いについての問題が繰り返されてきました。

   It is recommended that the UA provide its initial ("submission
   client") MTA with an envelope separate from the message itself.
   However, if the envelope is not supplied, SMTP commands SHOULD be
   generated as follows:

   UA が自身のメッセージからエンベロープを分離して最初の("投函クライア
   ント")MTA へメッセージを供給することが推奨されます。しかしながら、エ
   ンベロープが提供されていない場合、SMTP コマンドは下記のように生成さ
   れるべきです(SHOULD)。
   

   1.  Each recipient address from a TO, CC, or BCC header field SHOULD
       be copied to a RCPT command (generating multiple message copies
       if that is required for queuing or delivery).  This includes any
       addresses listed in a RFC 822 "group".  Any BCC header fields
       SHOULD then be removed from the header section.  Once this
       process is completed, the remaining header fields SHOULD be
       checked to verify that at least one TO, CC, or BCC header field
       remains.  If none do, then a BCC header field with no additional
       information SHOULD be inserted as specified in [4].

       それぞれの TO,CC,BCC ヘッダーフィールドの受信者アドレスは RCPT
       コマンドにコピーされるべきです(SHOULD)(キューイングや配送が要求
       される場合、複数のメッセージのコピーが生成されます)。これは RFC
       822 に "group" として記載されているアドレスも含みます。いくつか
       の BCC ヘッダーフィールドはその時にヘッダー部分から取り除かれる
       べきです(SHOULD)。一度この処理が完了したら、残っているヘッダー
       フィールドは、少なくとも一つの TO, CC や BCC ヘッダーフィールド
       が残っていることを確めるためにのチェックされるべきです(SHOULD)。
       何もしない場合、追加情報のない BCC ヘッダーフィールドは [4] で規
       定されているように挿入されるべきです(SHOULD)。



   2.  The return address in the MAIL command SHOULD, if possible, be
       derived from the system's identity for the submitting (local)
       user, and the "From:" header field otherwise.  If there is a
       system identity available, it SHOULD also be copied to the Sender
       header field if it is different from the address in the From
       header field.  (Any Sender header field that was already there
       SHOULD be removed.)  Systems may provide a way for submitters to
       override the envelope return address, but may want to restrict
       its use to privileged users.  This will not prevent mail forgery,
       but may lessen its incidence; see Section 7.1.

   2.  メールコマンドでのリターンアドレスは可能であれば、投函した(ロー
       カル)ユーザーのシステムの識別子に由来するものであるべきで
       (SHOULD)、そうでなければ "From:" ヘッダフィールドです。もしシス
       テムの識別子が利用でき、From ヘッダフィールドでのアドレスと異な
       る場合、Sender ヘッダーフィールドにもコピーされるべきです
       (SHOULD)。(すでに存在するどんな Sender ヘッダフィールドも消去さ
       れるべきです(SHOULD)。)システムは投函する人にエンベロープのリター
       ンアドレスを上書きする方法を提供するかもしれませんが、特権ユーザー
       のための使用に制限してもいいかもしれません。これはメールの偽装を
       防止するのではなく事故を減少させるでしょう。Section 7.1 を見てく
       ださい。



Klensin                     Standards Track                    [Page 85]

RFC 5321                          SMTP                      October 2008


   When an MTA is being used in this way, it bears responsibility for
   ensuring that the message being transmitted is valid.  The mechanisms
   for checking that validity, and for handling (or returning) messages
   that are not valid at the time of arrival, are part of the MUA-MTA
   interface and not covered by this specification.

   MTA がこの方法を使用するとき、変換されたメッセージが有効であることを
   保障する責任が生じます。到着した時点では有効ではない、有効性チェック
   と配送(返信)メッセージのためのメカニズムは MUA-MTA 間インターフェー
   スの一部で、本仕様ではカバーしていません。

   A submission protocol based on Standard RFC 822 information alone
   MUST NOT be used to gateway a message from a foreign (non-SMTP) mail
   system into an SMTP environment.  Additional information to construct
   an envelope must come from some source in the other environment,
   whether supplemental header fields or the foreign system's envelope.

   標準 RFC 822 の情報だけを基にしたサブミッションプロトコルは(SMTP で
   はない)外部のメールシステムから SMTP 環境へのメッセージのゲートウェ
   イとして用いてはいけません(MUST NOT)。エンベロープを構築する追加情報
   は補足ヘッダーフィールドや外部システムのエンベロープがあろうがなかろ
   うが、その他の環境での情報から持ってこなけれけばいけません。

   Attempts to gateway messages using only their header "To" and "Cc"
   fields have repeatedly caused mail loops and other behavior adverse
   to the proper functioning of the Internet mail environment.  These
   problems have been especially common when the message originates from
   an Internet mailing list and is distributed into the foreign
   environment using envelope information.  When these messages are then
   processed by a header-section-only remailer, loops back to the
   Internet environment (and the mailing list) are almost inevitable.

   "To" と "Cc" フィールドのヘッダのみを用いてメッセージをゲートウェイ
   しようとすることはメールループの繰り返しや、インターネットメール環境
   の適切な機能に反する他の動作の原因となります。これらの問題はメッセー
   ジがメーリングリストから発せられた場合や、エンベロープの情報を用いて
   外部環境へ分配される場合に特に共通的です。これらのメッセージがヘッダー
   部分だけのリメイラーによって処理されたときに、インターネット環境(そ
   してメーリングリスト)に折り返して戻ってくることはほぼ避けられません。

Appendix C.  Source Routes
附属書 C. ソースルート

   Historically, the <reverse-path> was a reverse source routing list of
   hosts and a source mailbox.  The first host in the <reverse-path> was
   historically the host sending the MAIL command; today, source routes
   SHOULD NOT appear in the reverse-path.  Similarly, the <forward-path>
   may be a source routing lists of hosts and a destination mailbox.
   However, in general, the <forward-path> SHOULD contain only a mailbox
   and domain name, relying on the domain name system to supply routing
   information if required.  The use of source routes is deprecated (see
   Appendix F.2); while servers MUST be prepared to receive and handle
   them as discussed in Section 3.3 and Appendix F.2, clients SHOULD NOT
   transmit them and this section is included in the current
   specification only to provide context.  It has been modified somewhat
   from the material in RFC 821 to prevent server actions that might
   confuse clients or subsequent servers that do not expect a full
   source route implementation.

   歴史的に、<reserve-path> はホストと発信元のメールボックスの逆方向の
   ソースルートのリストです。<reverse-path> での最初のホストは古くは
   MAIL コマンドを送信したホストでした。今日では、ソースルートは
   reverse-path に現れるべきではありません(SHOULD)。同様に、
   <forward-path> はホストと宛て先メールボックスのソースルートのリスト
   であることがあります。しかしながら、一般的には <forward-path> は メー
   ルボックスとドメイン名のみが含まれるべきで(SHOULD)、必要があればルー
   ト情報を提供するドメインネームシステムで中継されるべきです(SHOULD)。
   ソースルートの使用は推奨されていません(附属書 F.2 を見てください)。
   Section 3.3. や 附属書 F.2 で論じているようにサーバはそれらを受けい
   れる準備がされていなければいけません(MUST)が、クライアントはそれらを
   伝えるべきではありません(SHOULD NOT)そして、このセクションは背景を提
   供するためだけに現在の仕様に含まれています。完全なソースルートの実装
   を期待しないことは、クライアントやその後につづくサーバを混乱させたり
   するサーバの動作を阻止するために RFC 821 の記述からはいくらか変更さ
   れました。

   For relay purposes, the forward-path may be a source route of the
   form "@ONE,@TWO:JOE@THREE", where ONE, TWO, and THREE MUST be fully-
   qualified domain names.  This form is used to emphasize the
   distinction between an address and a route.  The mailbox (here, JOE@
   THREE) is an absolute address, and the route is information about how
   to get there.  The two concepts should not be confused.

   中継の目的のために、forward-path は "@ONE,@TWO,:JOE@THREE" 形式のソー
   スルートであるかもしれません。ONE と TWO と THREE は完全修飾ドメイン
   名でなればいけません(MUST)。この形式はアドレスとルート間の区別をはっ
   きりするのに用いられています。メールボックス(ここでは JOE@THREE)は絶
   対アドレスで、ルートはどのようにそこに到着する方法についての情報です。
   この二つの概念は混同すべきではありません。

   If source routes are used, RFC 821 and the text below should be
   consulted for the mechanisms for constructing and updating the



Klensin                     Standards Track                    [Page 86]

RFC 5321                          SMTP                      October 2008


   forward-path.  A server that is reached by means of a source route
   (e.g., its domain name appears first in the list in the forward-path)
   MUST remove its domain name from any forward-paths in which that
   domain name appears before forwarding the message and MAY remove all
   other source routing information.  The reverse-path SHOULD NOT be
   updated by servers conforming to this specification.

   ソースルートが用いられるとき、RFC 821 と下記の文章は forward-path を
   組みたてて、更新するためにメカニズムのために参照されるべきです。ソー
   スルートを用いて届けられたサーバ(例えば、そのドメイン名が
   forward-path のリストの最初にあるなど)はメッセージを転送する前にドメ
   イン名が現わされている forward-path から自身のドメイン名を削除しなけ
   ればいけません(MUST)、そしてすべての他のソースルート情報を削除しても
   構いません(MAY)。本仕様に準拠しているサーバーは reverse-path を更新
   すべきではありません(SHOULD NOT)。

   Notice that the forward-path and reverse-path appear in the SMTP
   commands and replies, but not necessarily in the message.  That is,
   there is no need for these paths and especially this syntax to appear
   in the "To:" , "From:", "CC:", etc. fields of the message header
   section.  Conversely, SMTP servers MUST NOT derive final message
   routing information from message header fields.

   必ずしもメッセージ内ではなく、SMTP コマンドで forward-path と
   reverse-path が現われることに注意してください。それは、これらのパス
   や、特にメッセージヘッダ部分の "To:"、"From:"、"CC:"、 他で表現する
   構文にとって必要ではないということです。逆に、SMTP サーバーはメッセー
   ジヘッダ部分から最後のメッセージ経路情報を抽出してはいけません(MUST
   NOT)。

   When the list of hosts is present despite the recommendations above,
   it is a "reverse" source route and indicates that the mail was
   relayed through each host on the list (the first host in the list was
   the most recent relay).  This list is used as a source route to
   return non-delivery notices to the sender.  If, contrary to the
   recommendations here, a relay host adds itself to the beginning of
   the list, it MUST use its name as known in the transport environment
   to which it is relaying the mail rather than that of the transport
   environment from which the mail came (if they are different).  Note
   that a situation could easily arise in which some relay hosts add
   their names to the reverse source route and others do not, generating
   discontinuities in the routing list.  This is another reason why
   servers needing to return a message SHOULD ignore the source route
   entirely and simply use the domain as specified in the Mailbox.

   上記の推奨にもかかわらずホストのリストが存在しているとき、それは "逆
   向きの" ソースルートであり、そのメールはリスト上のそれぞれのホストを
   通して中継された(リストの最初のホストはほとんど最近は中継だった)こと
   を示しています。このリストは送信者への配送不可通知を戻すためのソース
   ルートとして使用されます。もし、ここで推奨しているのとは反対に、中継
   ホストがそのリストの先頭に自身を加わえたのであれば、メールが来た転送
   環境のものより、メールを中継をしている転送環境で知られているような
   (それらが異なるなら)名前を用いなければなりません(MUST)。いくつかの中
   継ホストが自身の名前を逆方向のソースルートに追加して、他のホストが追
   加しないような状況は、ルーティングリストの不連続を発生させることを容
   易に引き起こすことに注意してください。これはサーバがソースルートを完
   全に無視すべき(SHOULD)で、単にメールボックスで指定さているようなドメ
   インを使用してメッセージを返送する必要があることのもう一つの理由です。

Appendix D.  Scenarios
附属書 D. シナリオ

   This section presents complete scenarios of several types of SMTP
   sessions.  In the examples, "C:" indicates what is said by the SMTP
   client, and "S:" indicates what is said by the SMTP server.

   本セクションは SMTP セッションのいくつかの種類の完全なシナリオを提示
   しています。例えば "C:" は SMTP クライアントによって発言されるを示
   し、"S:"は SMTP サーバによって発言されることを示しています。
















Klensin                     Standards Track                    [Page 87]

RFC 5321                          SMTP                      October 2008


D.1.  A Typical SMTP Transaction Scenario
D.1.  典型的な SMTP トランザクションシナリオ


   This SMTP example shows mail sent by Smith at host bar.com, and to
   Jones, Green, and Brown at host foo.com.  Here we assume that host
   bar.com contacts host foo.com directly.  The mail is accepted for
   Jones and Brown.  Green does not have a mailbox at host foo.com.

   この SMTP 例は bar.com ホストの Smith によって、ホスト foo.com の
   Jones 、Green、Brown にメールが送信されることを示しています。ここで
   我々はホスト bar.com はホスト foo.com に直接接続しているものとします。
   メールは Jones と Brown には受け入れられます。Green はホストfoo.com
   にメールボックスを持っていません。

      S: 220 foo.com Simple Mail Transfer Service Ready
      C: EHLO bar.com
      S: 250-foo.com greets bar.com
      S: 250-8BITMIME
      S: 250-SIZE
      S: 250-DSN
      S: 250 HELP
      C: MAIL FROM:<Smith@bar.com>
      S: 250 OK
      C: RCPT TO:<Jones@foo.com>
      S: 250 OK
      C: RCPT TO:<Green@foo.com>
      S: 550 No such user here
      C: RCPT TO:<Brown@foo.com>
      S: 250 OK
      C: DATA
      S: 354 Start mail input; end with <CRLF>.<CRLF>
      C: Blah blah blah...
      C: ...etc. etc. etc.
      C: .
      S: 250 OK
      C: QUIT
      S: 221 foo.com Service closing transmission channel























Klensin                     Standards Track                    [Page 88]

RFC 5321                          SMTP                      October 2008


D.2.  Aborted SMTP Transaction Scenario
D.2.  中断された SMTP の トランザクションシナリオ


      S: 220 foo.com Simple Mail Transfer Service Ready
      C: EHLO bar.com
      S: 250-foo.com greets bar.com
      S: 250-8BITMIME
      S: 250-SIZE
      S: 250-DSN
      S: 250 HELP
      C: MAIL FROM:<Smith@bar.com>
      S: 250 OK
      C: RCPT TO:<Jones@foo.com>
      S: 250 OK
      C: RCPT TO:<Green@foo.com>
      S: 550 No such user here
      C: RSET
      S: 250 OK
      C: QUIT
      S: 221 foo.com Service closing transmission channel
































Klensin                     Standards Track                    [Page 89]

RFC 5321                          SMTP                      October 2008


D.3.  Relayed Mail Scenario
D.3.  中継されるメールのシナリオ

   Step 1 -- Source Host to Relay Host
   ステップ 1 -- 発信元ホストから中継ホストへ

   The source host performs a DNS lookup on XYZ.COM (the destination
   address) and finds DNS MX records specifying xyz.com as the best
   preference and foo.com as a lower preference.  It attempts to open a
   connection to xyz.com and fails.  It then opens a connection to
   foo.com, with the following dialogue:

   発信元ホストは XYZ.COM(送信先アドレス)について DNS 検索を行い、最も
   高い優先度の xyz.com、次に低い foo.com を指定している DNS の MX レコー
   ドを検出します。xyz.com に対してコネクションを開こうとして失敗します。
   foo.com に対してコネクションを開こうとしたのが次の対話です。

      S: 220 foo.com Simple Mail Transfer Service Ready
      C: EHLO bar.com
      S: 250-foo.com greets bar.com
      S: 250-8BITMIME
      S: 250-SIZE
      S: 250-DSN
      S: 250 HELP
      C: MAIL FROM:<JQP@bar.com>
      S: 250 OK
      C: RCPT TO:<Jones@XYZ.COM>
      S: 250 OK
      C: DATA
      S: 354 Start mail input; end with <CRLF>.<CRLF>
      C: Date: Thu, 21 May 1998 05:33:29 -0700
      C: From: John Q. Public <JQP@bar.com>
      C: Subject: The Next Meeting of the Board
      C: To: Jones@xyz.com
      C:
      C: Bill:
      C: The next meeting of the board of directors will be
      C: on Tuesday.
      C: John.
      C: .
      S: 250 OK
      C: QUIT
      S: 221 foo.com Service closing transmission channel















Klensin                     Standards Track                    [Page 90]

RFC 5321                          SMTP                      October 2008


   Step 2 -- Relay Host to Destination Host
   ステップ 2 -- 中継ホストから宛先ホストへ

   foo.com, having received the message, now does a DNS lookup on
   xyz.com.  It finds the same set of MX records, but cannot use the one
   that points to itself (or to any other host as a worse preference).
   It tries to open a connection to xyz.com itself and succeeds.  Then
   we have:

   メッセージを受信した foo.com は直ちに xyz.com を DNS 検索します。同
   一の MX レコードの組を検出しますが、それが指す一つ(もしくは悪い優先
   度のホスト)は使用することができません。xyz.com 自身にコネクションを
   開こうとして成功します。その時はこうなります。

           S: 220 xyz.com Simple Mail Transfer Service Ready
           C: EHLO foo.com
           S: 250 xyz.com is on the air
           C: MAIL FROM:<JQP@bar.com>
           S: 250 OK
           C: RCPT TO:<Jones@XYZ.COM>
           S: 250 OK
           C: DATA
           S: 354 Start mail input; end with <CRLF>.<CRLF>
           C: Received: from bar.com by foo.com ; Thu, 21 May 1998
           C:     05:33:29 -0700
           C: Date: Thu, 21 May 1998 05:33:22 -0700
           C: From: John Q. Public <JQP@bar.com>
           C: Subject:  The Next Meeting of the Board
           C: To: Jones@xyz.com
           C:
           C: Bill:
           C: The next meeting of the board of directors will be
           C: on Tuesday.
           C:                         John.
           C: .
           S: 250 OK
           C: QUIT
           S: 221 foo.com Service closing transmission channel



















Klensin                     Standards Track                    [Page 91]

RFC 5321                          SMTP                      October 2008


D.4.  Verifying and Sending Scenario
D.4.  検証して送信するシナリオ

      S: 220 foo.com Simple Mail Transfer Service Ready
      C: EHLO bar.com
      S: 250-foo.com greets bar.com
      S: 250-8BITMIME
      S: 250-SIZE
      S: 250-DSN
      S: 250-VRFY
      S: 250 HELP
      C: VRFY Crispin
      S: 250 Mark Crispin <Admin.MRC@foo.com>
      C: MAIL FROM:<EAK@bar.com>
      S: 250 OK
      C: RCPT TO:<Admin.MRC@foo.com>
      S: 250 OK
      C: DATA
      S: 354 Start mail input; end with <CRLF>.<CRLF>
      C: Blah blah blah...
      C: ...etc. etc. etc.
      C: .
      S: 250 OK
      C: QUIT
      S: 221 foo.com Service closing transmission channel

Appendix E.  Other Gateway Issues
附属書 E. 他のゲートウェイの問題

   In general, gateways between the Internet and other mail systems
   SHOULD attempt to preserve any layering semantics across the
   boundaries between the two mail systems involved.  Gateway-
   translation approaches that attempt to take shortcuts by mapping
   (such as mapping envelope information from one system to the message
   header section or body of another) have generally proven to be
   inadequate in important ways.  Systems translating between
   environments that do not support both envelopes and a header section
   and Internet mail must be written with the understanding that some
   information loss is almost inevitable.

   一般的に、インターネットと他のメールシステム間のゲートウェイは二つの
   メールシステム間に関係する境界をまたがるどんな層の要素も保存しようと
   するべきです(SHOULD)。ゲートウェイの変換はマッピングによって近道しよ
   うとするアプローチ(例えば、あるシステムからのエンベロープ情報をもう
   一方のヘッダー部分や本文にマッピングするなど)は一般的に重要な手段で
   は不十分であることが証明されています。エンベロープとヘッダー部分の両
   方をサポートしない環境間を変換するシステムは、インターネットメールは
   いくつかの情報が失われることがほとんど避けられないということを考慮し
   て書かなければいけません。
   











Klensin                     Standards Track                    [Page 92]

RFC 5321                          SMTP                      October 2008


Appendix F.  Deprecated Features of RFC 821
附属書 F. RFC 821 の推奨されない機能

   A few features of RFC 821 have proven to be problematic and SHOULD
   NOT be used in Internet mail.

   RFC 821 における２、３の機能は問題があり、インターネットメールでは使
   用すべきでない(SHOULD NOT)ことが証明されています。

F.1.  TURN
F.1.  TURN

   This command, described in RFC 821, raises important security issues
   since, in the absence of strong authentication of the host requesting
   that the client and server switch roles, it can easily be used to
   divert mail from its correct destination.  Its use is deprecated;
   SMTP systems SHOULD NOT use it unless the server can authenticate the
   client.

   RFC 821 で記載されているこのコマンドは、ホストがクライアントとサーバ
   の役割を切り替える要求を強固な認証なしで、簡単に正確な宛先からのメー
   ルを転送するのに使われることができるので、重大な安全性の問題を引き起
   こします。使用は推奨されていません。SMTP システムはサーバーがクライ
   アントを認証することができない限り使用すべきではありません(SHOULD
   NOT)。

F.2.  Source Routing
F.2.  ソースルーティング

   RFC 821 utilized the concept of explicit source routing to get mail
   from one host to another via a series of relays.  The requirement to
   utilize source routes in regular mail traffic was eliminated by the
   introduction of the domain name system "MX" record and the last
   significant justification for them was eliminated by the
   introduction, in RFC 1123, of a clear requirement that addresses
   following an "@" must all be fully-qualified domain names.
   Consequently, the only remaining justifications for the use of source
   routes are support for very old SMTP clients or MUAs and in mail
   system debugging.  They can, however, still be useful in the latter
   circumstance and for routing mail around serious, but temporary,
   problems such as problems with the relevant DNS records.

   RFC 821 は一連のリレーを経由してあるホストからもう一方のホストへメー
   ルを得るために明確なソースルートの概念を利用しています。通常のメール
   トラフィックでソースルートを利用する要求はドメインネームシステムの
   "MX" レコードの登場によって廃止されました、そしてそれらが廃止された
   ことに対する最近の重大な正当とする理由は RFC 1123 で "@" に続くアド
   レスは全て完全修飾ドメイン名でなければいけないというはっきりとした要
   求の採用です。その結果、ソースルートを利用する正当性はとても古い
   SMTP クライアントや MUA をサポートするためとメールシステムのデバッグ
   のためだけになりました。しかしながら、それらは未だに後者の状況と、一
   時的ですが DNS レコードに関するような深刻な問題を避けてメールをルー
   ティングするためには役立てることができます。

   SMTP servers MUST continue to accept source route syntax as specified
   in the main body of this document and in RFC 1123.  They MAY, if
   necessary, ignore the routes and utilize only the target domain in
   the address.  If they do utilize the source route, the message MUST
   be sent to the first domain shown in the address.  In particular, a
   server MUST NOT guess at shortcuts within the source route.

   SMTP サーバは本文書の本文と RFC 1123 に規定されているようにソースルー
   トの構文を受けいれることを継続しなければなりません(MUST)。それらは必
   要であればルートを無視し、アドレス中の対象となるドメインだけを利用し
   ても構いません(MAY)。もしソースルートを利用するのであれば、メッセー
   ジはアドレス中の最初に現われたドメインに対して送信されなければいけま
   せん(MUST)。特に、サーバはソースルートの中で近道を推測してはいけませ
   ん(MUST NOT)。

   Clients SHOULD NOT utilize explicit source routing except under
   unusual circumstances, such as debugging or potentially relaying
   around firewall or mail system configuration errors.

   クライアントはデバッグや潜在的にファイヤーウォール回りやメールシステ
   ムの設定にエラーがあるなどの特殊な状況を除き、明確なソースルーティン
   グを利用すべきではありません。

F.3.  HELO
F.3.  HELO

   As discussed in Sections 3.1 and 4.1.1, EHLO SHOULD be used rather
   than HELO when the server will accept the former.  Servers MUST
   continue to accept and process HELO in order to support older
   clients.

   Section 3.1 と 4.1.1 で論じているように、サーバが受けいれる場合は、
   EHLO が HELO よりも使用されるべきです(SHOULD)。サーバは古いクライア
   ントをサポートするために HELO を受け入れ処理しなければいけません
   (MUST)。





Klensin                     Standards Track                    [Page 93]

RFC 5321                          SMTP                      October 2008


F.4.  #-literals
F.4.  #-文字

   RFC 821 provided for specifying an Internet address as a decimal
   integer host number prefixed by a pound sign, "#".  In practice, that
   form has been obsolete since the introduction of TCP/IP.  It is
   deprecated and MUST NOT be used.

   RFC 821 はポンド記号 "#" を先頭に付与することによって十進のホスト数
   値としてインターネットアドレスを指定することを提供していました。実際、
   その形式は TCP/IP の登場以来は使われていません。それは推奨されず、使
   用されてはいけません(MUST NOT)。

F.5.  Dates and Years
F.5.  日付と年

   When dates are inserted into messages by SMTP clients or servers
   (e.g., in trace header fields), four-digit years MUST BE used.  Two-
   digit years are deprecated; three-digit years were never permitted in
   the Internet mail system.

   SMTP クライアントやサーバによってメッセージ内(すなわち、追跡ヘッダ
   フィールド)に日付を挿入するとき、４桁の年が使用されなければいけませ
   ん(MUST)。２桁の年は推奨されません。３桁の年はインターネットのメール
   システムでは許可されたことはありませんでした。


F.6.  Sending versus Mailing
F.6.  送信 vs メーリング

   In addition to specifying a mechanism for delivering messages to
   user's mailboxes, RFC 821 provided additional, optional, commands to
   deliver messages directly to the user's terminal screen.  These
   commands (SEND, SAML, SOML) were rarely implemented, and changes in
   workstation technology and the introduction of other protocols may
   have rendered them obsolete even where they are implemented.

   ユーザのメールボックスにメッセージを配送するためにメカニズムを仕様す
   ることに加えて、RFC 821 はさらに、オプションでユーザの端末画面に直接
   メッセージを配送するコマンドを用意していました。これらのコマンド
   (SEND, SAML, SOML)はめったに実装されませんでした、そしてワークステー
   ション技術の変化と画面に表示する他のプロトコルの登場は、それらが実装
   されていたとしても、時代遅れにしました。

   Clients SHOULD NOT provide SEND, SAML, or SOML as services.  Servers
   MAY implement them.  If they are implemented by servers, the
   implementation model specified in RFC 821 MUST be used and the
   command names MUST be published in the response to the EHLO command.

   クライアントはサービスとして SEND, SAML, SOML を提供すべきではありま
   せん(SHOULD NOT)。サーバーはそれらを実装しても構いません(MAY)。サー
   バによって実装されている場合、RFC 821 で規定された実装モデルを使用し
   なくてはならず(MUST)、EHLO コマンドの応答によってコマンド名が発行さ
   れなければいけません(MUST)。

Author's Address
著者の住所

   John C. Klensin
   1770 Massachusetts Ave, Suite 322
   Cambridge, MA  02140
   USA

   EMail: john+smtp@jck.com















Klensin                     Standards Track                    [Page 94]

RFC 5321                          SMTP                      October 2008


Full Copyright Statement

   Copyright (C) The IETF Trust (2008).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND
   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.












Klensin                     Standards Track                    [Page 95]


translated by tetsuya,KOBAYASHI@hde
